/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __le16;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __le32;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u64 __le64;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
struct module;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct _ddebug {
   char const *modname ;
   char const *function ;
   char const *filename ;
   char const *format ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))) lineno : 18 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) flags : 8 ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
typedef int pao_T__;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ftrace_irq.h"
struct vm_area_struct;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmdebug.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mpspec.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_109 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_109 seqlock_t;

#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugobjects.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 239 
enum hrtimer_restart;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 1170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_111 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_110 {
   struct __anonstruct_111 __anonCompField___anonunion_110_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_110 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_11978 {
    WORK_STRUCT_PENDING_BIT = 0,
    WORK_STRUCT_DELAYED_BIT = 1,
    WORK_STRUCT_PWQ_BIT = 2,
    WORK_STRUCT_LINKED_BIT = 3,
    WORK_STRUCT_STATIC_BIT = 4,
    WORK_STRUCT_COLOR_SHIFT = 5,
    WORK_STRUCT_COLOR_BITS = 4,
    WORK_STRUCT_PENDING = 1,
    WORK_STRUCT_DELAYED = 2,
    WORK_STRUCT_PWQ = 4,
    WORK_STRUCT_LINKED = 8,
    WORK_STRUCT_STATIC = 16,
    WORK_NR_COLORS = 15,
    WORK_NO_COLOR = 15,
    WORK_CPU_UNBOUND = 8192,
    WORK_STRUCT_FLAG_BITS = 9,
    WORK_OFFQ_FLAG_BASE = 5,
    __WORK_OFFQ_CANCELING = 5,
    WORK_OFFQ_CANCELING = 32,
    WORK_OFFQ_FLAG_BITS = 1,
    WORK_OFFQ_POOL_SHIFT = 6,
    WORK_OFFQ_LEFT = 58,
    WORK_OFFQ_POOL_BITS = 31,
    WORK_OFFQ_POOL_NONE = 2147483647,
    WORK_STRUCT_FLAG_MASK = 511,
    WORK_STRUCT_WQ_DATA_MASK = -512,
    WORK_STRUCT_NO_POOL = 137438953408,
    WORK_BUSY_PENDING = 1,
    WORK_BUSY_RUNNING = 2,
    WORKER_DESC_LEN = 24
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_112 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_112 nodemask_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_113 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_113 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 796  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct rw_semaphore;

#line 797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 398  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irq.h"
struct proc_dir_entry;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hardirq.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct kref {
   atomic_t refcount ;
};

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highuid.h"
struct user_namespace;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_148 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_148 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_149 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_149 kgid_t;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmod.h"
struct cred;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/elf.h"
struct inode;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_156 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_157 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_155 {
   struct __anonstruct_156 __anonCompField___anonunion_155_40 ;
   struct __anonstruct_157 __anonCompField___anonunion_155_41 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_155 __anonCompField_uprobe_task_42 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 133 
struct address_space;

#line 134 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_158 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_160 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_164 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_163 {
   atomic_t _mapcount ;
   struct __anonstruct_164 __anonCompField___anonunion_163_45 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_162 {
   union __anonunion_163 __anonCompField___anonstruct_162_46 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_161 {
   unsigned long counters ;
   struct __anonstruct_162 __anonCompField___anonunion_161_47 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_159 {
   union __anonunion_160 __anonCompField___anonstruct_159_44 ;
   union __anonunion_161 __anonCompField___anonstruct_159_48 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_166 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_167 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_165 {
   struct list_head lru ;
   struct __anonstruct_166 __anonCompField___anonunion_165_50 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_167 __anonCompField___anonunion_165_51 ;
   pgtable_t pmd_huge_pte ;
};

#line 32 
struct kmem_cache;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_168 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_158 __anonCompField_page_43 ;
   struct __anonstruct_159 __anonCompField_page_49 ;
   union __anonunion_165 __anonCompField_page_52 ;
   union __anonunion_168 __anonCompField_page_53 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_169 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_169 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
union __anonunion_174 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_174 __anonCompField_idr_layer_54 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct dentry;

#line 186 
struct iattr;

#line 187 
struct super_block;

#line 188 
struct file_system_type;

#line 189 
struct kernfs_open_node;

#line 190 
struct kernfs_iattrs;

#line 213 
struct kernfs_root;

#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89 
struct kernfs_ops;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_179 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_179 __anonCompField_kernfs_node_55 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
struct sock;

#line 478 
struct kobject;

#line 479 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct bin_attribute;

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct kernel_param;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_180 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_180 __anonCompField_kernel_param_56 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_188 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_188 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_190 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_191 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_192 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_193 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_195 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_194 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_195 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_196 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_197 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_189 {
   int _pad[28U] ;
   struct __anonstruct__kill_190 _kill ;
   struct __anonstruct__timer_191 _timer ;
   struct __anonstruct__rt_192 _rt ;
   struct __anonstruct__sigchld_193 _sigchld ;
   struct __anonstruct__sigfault_194 _sigfault ;
   struct __anonstruct__sigpoll_196 _sigpoll ;
   struct __anonstruct__sigsys_197 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_189 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450 
struct pid_namespace;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_204 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_205 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_207 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_206 {
   struct keyring_index_key index_key ;
   struct __anonstruct_207 __anonCompField___anonunion_206_59 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_208 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_210 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_209 {
   union __anonunion_payload_210 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_204 __anonCompField_key_57 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_205 __anonCompField_key_58 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_206 __anonCompField_key_60 ;
   union __anonunion_type_data_208 type_data ;
   union __anonunion_209 __anonCompField_key_61 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct pipe_inode_info;

#line 1173 
struct uts_namespace;

#line 1174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67 
struct path;

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_228 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_228 __anonCompField_pci_dev_65 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct writeback_control;

#line 66 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 1249 
struct kvec;

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pci_64.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_229 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_229 __anonCompField_iov_iter_66 ;
   unsigned long nr_segs ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};

#line 217  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/fcntl.h"
enum ldv_24411 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
typedef enum ldv_24411 socket_state;

#line 54 
struct poll_table_struct;

#line 55 
struct net;

#line 72 
struct fasync_struct;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops const *ops ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int ) ;
   int (*getname)(struct socket *, struct sockaddr *, int *, int ) ;
   unsigned int (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_230 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_230 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_24818 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_235 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_236 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_24818 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_235 __anonCompField_nf_bridge_info_70 ;
   union __anonunion_236 __anonCompField_nf_bridge_info_71 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_239 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_238 {
   u64 v64 ;
   struct __anonstruct_239 __anonCompField___anonunion_238_72 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_238 __anonCompField_skb_mstamp_73 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_242 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_241 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_242 __anonCompField___anonstruct_241_74 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_240 {
   struct __anonstruct_241 __anonCompField___anonunion_240_75 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_244 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_243 {
   __wsum csum ;
   struct __anonstruct_244 __anonCompField___anonunion_243_77 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_245 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_246 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_247 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_240 __anonCompField_sk_buff_76 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_243 __anonCompField_sk_buff_78 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_245 __anonCompField_sk_buff_79 ;
   __u32 secmark ;
   union __anonunion_246 __anonCompField_sk_buff_80 ;
   union __anonunion_247 __anonCompField_sk_buff_81 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_249 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_249 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_250 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_250 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_251 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_251 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_252 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_252 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_253 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_253 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_254 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_254 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_255 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_255 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_256 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_256 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_257 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_258 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_257 ifr_ifrn ;
   union __anonunion_ifr_ifru_258 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_263 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_262 {
   struct __anonstruct_263 __anonCompField___anonunion_262_82 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_262 __anonCompField_lockref_83 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_265 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_264 {
   struct __anonstruct_265 __anonCompField___anonunion_264_84 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_264 __anonCompField_qstr_85 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_266 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_266 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_270 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_269 {
   struct __anonstruct_270 __anonCompField___anonunion_269_86 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_269 __anonCompField_radix_tree_node_87 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct kstatfs;

#line 63 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_274 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_274 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_275 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_275 __anonCompField_kqid_89 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_278 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_279 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_280 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_278 __anonCompField_inode_90 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_279 __anonCompField_inode_91 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_280 __anonCompField_inode_92 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_281 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_281 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_283 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_282 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_283 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_282 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 715  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_306 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_306 possible_net_t;

#line 376 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 383  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_29291 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_29291 phy_interface_t;

#line 126 
enum ldv_29344 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_29344 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 1628  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_31054 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_31055 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_316 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_317 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_318 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_316 adj_list ;
   struct __anonstruct_all_adj_list_317 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_31054 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_31055 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_318 __anonCompField_net_device_95 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_hdr {
   __le16 frame_control ;
   __le16 duration_id ;
   u8 addr1[6U] ;
   u8 addr2[6U] ;
   u8 addr3[6U] ;
   __le16 seq_ctrl ;
   u8 addr4[6U] ;
};

#line 677  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_msrment_ie {
   u8 token ;
   u8 mode ;
   u8 type ;
   u8 request[0U] ;
};

#line 700  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_ext_chansw_ie {
   u8 mode ;
   u8 new_operating_class ;
   u8 new_ch_num ;
   u8 count ;
};

#line 831  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_tpc_report_ie {
   u8 tx_power ;
   u8 link_margin ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_auth_328 {
   __le16 auth_alg ;
   __le16 auth_transaction ;
   __le16 status_code ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_deauth_329 {
   __le16 reason_code ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_assoc_req_330 {
   __le16 capab_info ;
   __le16 listen_interval ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_assoc_resp_331 {
   __le16 capab_info ;
   __le16 status_code ;
   __le16 aid ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_reassoc_resp_332 {
   __le16 capab_info ;
   __le16 status_code ;
   __le16 aid ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_reassoc_req_333 {
   __le16 capab_info ;
   __le16 listen_interval ;
   u8 current_ap[6U] ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_disassoc_334 {
   __le16 reason_code ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_beacon_335 {
   __le64 timestamp ;
   __le16 beacon_int ;
   __le16 capab_info ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_probe_req_336 {
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_probe_resp_337 {
   __le64 timestamp ;
   __le16 beacon_int ;
   __le16 capab_info ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_wme_action_340 {
   u8 action_code ;
   u8 dialog_token ;
   u8 status_code ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_chan_switch_341 {
   u8 action_code ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_ext_chan_switch_342 {
   u8 action_code ;
   struct ieee80211_ext_chansw_ie data ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_measurement_343 {
   u8 action_code ;
   u8 dialog_token ;
   u8 element_id ;
   u8 length ;
   struct ieee80211_msrment_ie msr_elem ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_addba_req_344 {
   u8 action_code ;
   u8 dialog_token ;
   __le16 capab ;
   __le16 timeout ;
   __le16 start_seq_num ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_addba_resp_345 {
   u8 action_code ;
   u8 dialog_token ;
   __le16 status ;
   __le16 capab ;
   __le16 timeout ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_delba_346 {
   u8 action_code ;
   __le16 params ;
   __le16 reason_code ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_self_prot_347 {
   u8 action_code ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_mesh_action_348 {
   u8 action_code ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_sa_query_349 {
   u8 action ;
   u8 trans_id[2U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_ht_smps_350 {
   u8 action ;
   u8 smps_control ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_ht_notify_cw_351 {
   u8 action_code ;
   u8 chanwidth ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_tdls_discover_resp_352 {
   u8 action_code ;
   u8 dialog_token ;
   __le16 capability ;
   u8 variable[0U] ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_vht_opmode_notif_353 {
   u8 action_code ;
   u8 operating_mode ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_tpc_report_354 {
   u8 action_code ;
   u8 dialog_token ;
   u8 tpc_elem_id ;
   u8 tpc_elem_length ;
   struct ieee80211_tpc_report_ie tpc ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
union __anonunion_u_339 {
   struct __anonstruct_wme_action_340 wme_action ;
   struct __anonstruct_chan_switch_341 chan_switch ;
   struct __anonstruct_ext_chan_switch_342 ext_chan_switch ;
   struct __anonstruct_measurement_343 measurement ;
   struct __anonstruct_addba_req_344 addba_req ;
   struct __anonstruct_addba_resp_345 addba_resp ;
   struct __anonstruct_delba_346 delba ;
   struct __anonstruct_self_prot_347 self_prot ;
   struct __anonstruct_mesh_action_348 mesh_action ;
   struct __anonstruct_sa_query_349 sa_query ;
   struct __anonstruct_ht_smps_350 ht_smps ;
   struct __anonstruct_ht_notify_cw_351 ht_notify_cw ;
   struct __anonstruct_tdls_discover_resp_352 tdls_discover_resp ;
   struct __anonstruct_vht_opmode_notif_353 vht_opmode_notif ;
   struct __anonstruct_tpc_report_354 tpc_report ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct __anonstruct_action_338 {
   u8 category ;
   union __anonunion_u_339 u ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
union __anonunion_u_327 {
   struct __anonstruct_auth_328 auth ;
   struct __anonstruct_deauth_329 deauth ;
   struct __anonstruct_assoc_req_330 assoc_req ;
   struct __anonstruct_assoc_resp_331 assoc_resp ;
   struct __anonstruct_reassoc_resp_332 reassoc_resp ;
   struct __anonstruct_reassoc_req_333 reassoc_req ;
   struct __anonstruct_disassoc_334 disassoc ;
   struct __anonstruct_beacon_335 beacon ;
   struct __anonstruct_probe_req_336 probe_req ;
   struct __anonstruct_probe_resp_337 probe_resp ;
   struct __anonstruct_action_338 action ;
};

#line 856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_mgmt {
   __le16 frame_control ;
   __le16 duration ;
   u8 da[6U] ;
   u8 sa[6U] ;
   u8 bssid[6U] ;
   __le16 seq_ctrl ;
   union __anonunion_u_327 u ;
};

#line 1161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_p2p_noa_desc {
   u8 count ;
   __le32 duration ;
   __le32 interval ;
   __le32 start_time ;
};

#line 1180  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_p2p_noa_attr {
   u8 index ;
   u8 oppps_ctwindow ;
   struct ieee80211_p2p_noa_desc desc[4U] ;
};

#line 1204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_mcs_info {
   u8 rx_mask[10U] ;
   __le16 rx_highest ;
   u8 tx_params ;
   u8 reserved[3U] ;
};

#line 1229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_ht_cap {
   __le16 cap_info ;
   u8 ampdu_params_info ;
   struct ieee80211_mcs_info mcs ;
   __le16 extended_ht_cap_info ;
   __le32 tx_BF_cap_info ;
   u8 antenna_selection_info ;
};

#line 1354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_vht_mcs_info {
   __le16 rx_mcs_map ;
   __le16 rx_highest ;
   __le16 tx_mcs_map ;
   __le16 tx_highest ;
};

#line 1435  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_vht_cap {
   __le32 vht_cap_info ;
   struct ieee80211_vht_mcs_info supp_mcs ;
};

#line 470  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugfs.h"
enum nl80211_iftype {
    NL80211_IFTYPE_UNSPECIFIED = 0,
    NL80211_IFTYPE_ADHOC = 1,
    NL80211_IFTYPE_STATION = 2,
    NL80211_IFTYPE_AP = 3,
    NL80211_IFTYPE_AP_VLAN = 4,
    NL80211_IFTYPE_WDS = 5,
    NL80211_IFTYPE_MONITOR = 6,
    NL80211_IFTYPE_MESH_POINT = 7,
    NL80211_IFTYPE_P2P_CLIENT = 8,
    NL80211_IFTYPE_P2P_GO = 9,
    NL80211_IFTYPE_P2P_DEVICE = 10,
    NL80211_IFTYPE_OCB = 11,
    NUM_NL80211_IFTYPES = 12,
    NL80211_IFTYPE_MAX = 11
};

#line 500  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugfs.h"
struct nl80211_sta_flag_update {
   __u32 mask ;
   __u32 set ;
};

#line 2431  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
enum nl80211_reg_initiator {
    NL80211_REGDOM_SET_BY_CORE = 0,
    NL80211_REGDOM_SET_BY_USER = 1,
    NL80211_REGDOM_SET_BY_DRIVER = 2,
    NL80211_REGDOM_SET_BY_COUNTRY_IE = 3
};

#line 2484 
enum nl80211_dfs_regions {
    NL80211_DFS_UNSET = 0,
    NL80211_DFS_FCC = 1,
    NL80211_DFS_ETSI = 2,
    NL80211_DFS_JP = 3
};

#line 2491 
enum nl80211_user_reg_hint_type {
    NL80211_USER_REG_HINT_USER = 0,
    NL80211_USER_REG_HINT_CELL_BASE = 1,
    NL80211_USER_REG_HINT_INDOOR = 2
};

#line 2524 
enum nl80211_mesh_power_mode {
    NL80211_MESH_POWER_UNKNOWN = 0,
    NL80211_MESH_POWER_ACTIVE = 1,
    NL80211_MESH_POWER_LIGHT_SLEEP = 2,
    NL80211_MESH_POWER_DEEP_SLEEP = 3,
    __NL80211_MESH_POWER_AFTER_LAST = 4,
    NL80211_MESH_POWER_MAX = 3
};

#line 2600 
enum nl80211_channel_type {
    NL80211_CHAN_NO_HT = 0,
    NL80211_CHAN_HT20 = 1,
    NL80211_CHAN_HT40MINUS = 2,
    NL80211_CHAN_HT40PLUS = 3
};

#line 2607 
enum nl80211_chan_width {
    NL80211_CHAN_WIDTH_20_NOHT = 0,
    NL80211_CHAN_WIDTH_20 = 1,
    NL80211_CHAN_WIDTH_40 = 2,
    NL80211_CHAN_WIDTH_80 = 3,
    NL80211_CHAN_WIDTH_80P80 = 4,
    NL80211_CHAN_WIDTH_160 = 5,
    NL80211_CHAN_WIDTH_5 = 6,
    NL80211_CHAN_WIDTH_10 = 7
};

#line 2618 
enum nl80211_bss_scan_width {
    NL80211_BSS_CHAN_WIDTH_20 = 0,
    NL80211_BSS_CHAN_WIDTH_10 = 1,
    NL80211_BSS_CHAN_WIDTH_5 = 2
};

#line 2650 
enum nl80211_auth_type {
    NL80211_AUTHTYPE_OPEN_SYSTEM = 0,
    NL80211_AUTHTYPE_SHARED_KEY = 1,
    NL80211_AUTHTYPE_FT = 2,
    NL80211_AUTHTYPE_NETWORK_EAP = 3,
    NL80211_AUTHTYPE_SAE = 4,
    __NL80211_AUTHTYPE_NUM = 5,
    NL80211_AUTHTYPE_MAX = 4,
    NL80211_AUTHTYPE_AUTOMATIC = 5
};

#line 2668 
enum nl80211_mfp {
    NL80211_MFP_NO = 0,
    NL80211_MFP_REQUIRED = 1
};

#line 3559 
enum nl80211_txrate_gi {
    NL80211_TXRATE_DEFAULT_GI = 0,
    NL80211_TXRATE_FORCE_SGI = 1,
    NL80211_TXRATE_FORCE_LGI = 2
};

#line 3596 
enum nl80211_tx_power_setting {
    NL80211_TX_POWER_AUTOMATIC = 0,
    NL80211_TX_POWER_LIMITED = 1,
    NL80211_TX_POWER_FIXED = 2
};

#line 3734  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_seq {
   __u32 start ;
   __u32 offset ;
   __u32 len ;
};

#line 3871  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token {
   __u32 offset ;
   __u32 len ;
   __u8 token_stream[] ;
};

#line 3883  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token_feature {
   __u32 min_len ;
   __u32 max_len ;
   __u32 bufsize ;
};

#line 4131 
enum nl80211_dfs_state {
    NL80211_DFS_USABLE = 0,
    NL80211_DFS_UNAVAILABLE = 1,
    NL80211_DFS_AVAILABLE = 2
};

#line 4153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_vendor_cmd_info {
   __u32 vendor_id ;
   __u32 subcmd ;
};

#line 4581 
enum environment_cap {
    ENVIRON_ANY = 0,
    ENVIRON_INDOOR = 1,
    ENVIRON_OUTDOOR = 2
};

#line 4587  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct regulatory_request {
   struct callback_head callback_head ;
   int wiphy_idx ;
   enum nl80211_reg_initiator initiator ;
   enum nl80211_user_reg_hint_type user_reg_hint_type ;
   char alpha2[2U] ;
   enum nl80211_dfs_regions dfs_region ;
   bool intersect ;
   bool processed ;
   enum environment_cap country_ie_env ;
   struct list_head list ;
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_freq_range {
   u32 start_freq_khz ;
   u32 end_freq_khz ;
   u32 max_bandwidth_khz ;
};

#line 185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_power_rule {
   u32 max_antenna_gain ;
   u32 max_eirp ;
};

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_reg_rule {
   struct ieee80211_freq_range freq_range ;
   struct ieee80211_power_rule power_rule ;
   u32 flags ;
   u32 dfs_cac_ms ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_regdomain {
   struct callback_head callback_head ;
   u32 n_reg_rules ;
   char alpha2[3U] ;
   enum nl80211_dfs_regions dfs_region ;
   struct ieee80211_reg_rule reg_rules[] ;
};

#line 205 
struct wiphy;

#line 206 
enum ieee80211_band {
    IEEE80211_BAND_2GHZ = 0,
    IEEE80211_BAND_5GHZ = 1,
    IEEE80211_BAND_60GHZ = 2,
    IEEE80211_NUM_BANDS = 3
};

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_channel {
   enum ieee80211_band band ;
   u16 center_freq ;
   u16 hw_value ;
   u32 flags ;
   int max_antenna_gain ;
   int max_power ;
   int max_reg_power ;
   bool beacon_found ;
   u32 orig_flags ;
   int orig_mag ;
   int orig_mpwr ;
   enum nl80211_dfs_state dfs_state ;
   unsigned long dfs_state_entered ;
   unsigned int dfs_cac_ms ;
};

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_rate {
   u32 flags ;
   u16 bitrate ;
   u16 hw_value ;
   u16 hw_value_short ;
};

#line 269  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_sta_ht_cap {
   u16 cap ;
   bool ht_supported ;
   u8 ampdu_factor ;
   u8 ampdu_density ;
   struct ieee80211_mcs_info mcs ;
};

#line 289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_sta_vht_cap {
   bool vht_supported ;
   u32 cap ;
   struct ieee80211_vht_mcs_info vht_mcs ;
};

#line 305  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_supported_band {
   struct ieee80211_channel *channels ;
   struct ieee80211_rate *bitrates ;
   enum ieee80211_band band ;
   int n_channels ;
   int n_bitrates ;
   struct ieee80211_sta_ht_cap ht_cap ;
   struct ieee80211_sta_vht_cap vht_cap ;
};

#line 387  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_chan_def {
   struct ieee80211_channel *chan ;
   enum nl80211_chan_width width ;
   u32 center_freq1 ;
   u32 center_freq2 ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct survey_info {
   struct ieee80211_channel *channel ;
   u64 time ;
   u64 time_busy ;
   u64 time_ext_busy ;
   u64 time_rx ;
   u64 time_tx ;
   u64 time_scan ;
   u32 filled ;
   s8 noise ;
};

#line 608  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_crypto_settings {
   u32 wpa_versions ;
   u32 cipher_group ;
   int n_ciphers_pairwise ;
   u32 ciphers_pairwise[5U] ;
   int n_akm_suites ;
   u32 akm_suites[2U] ;
   bool control_port ;
   __be16 control_port_ethertype ;
   bool control_port_no_encrypt ;
};

#line 671  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct mac_address {
   u8 addr[6U] ;
};

#line 914  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct rate_info {
   u8 flags ;
   u8 mcs ;
   u16 legacy ;
   u8 nss ;
   u8 bw ;
};

#line 964  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct sta_bss_parameters {
   u8 flags ;
   u8 dtim_period ;
   u16 beacon_interval ;
};

#line 989  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_tid_stats {
   u32 filled ;
   u64 rx_msdu ;
   u64 tx_msdu ;
   u64 tx_msdu_retries ;
   u64 tx_msdu_failed ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct station_info {
   u32 filled ;
   u32 connected_time ;
   u32 inactive_time ;
   u64 rx_bytes ;
   u64 tx_bytes ;
   u16 llid ;
   u16 plid ;
   u8 plink_state ;
   s8 signal ;
   s8 signal_avg ;
   u8 chains ;
   s8 chain_signal[4U] ;
   s8 chain_signal_avg[4U] ;
   struct rate_info txrate ;
   struct rate_info rxrate ;
   u32 rx_packets ;
   u32 tx_packets ;
   u32 tx_retries ;
   u32 tx_failed ;
   u32 rx_dropped_misc ;
   struct sta_bss_parameters bss_param ;
   struct nl80211_sta_flag_update sta_flags ;
   int generation ;
   u8 const *assoc_req_ies ;
   size_t assoc_req_ies_len ;
   u32 beacon_loss_count ;
   s64 t_offset ;
   enum nl80211_mesh_power_mode local_pm ;
   enum nl80211_mesh_power_mode peer_pm ;
   enum nl80211_mesh_power_mode nonpeer_pm ;
   u32 expected_throughput ;
   u64 rx_beacon ;
   u8 rx_beacon_signal_avg ;
   struct cfg80211_tid_stats pertid[17U] ;
};

#line 1395  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_ssid {
   u8 ssid[32U] ;
   u8 ssid_len ;
};

#line 1428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_scan_request {
   struct cfg80211_ssid *ssids ;
   int n_ssids ;
   u32 n_channels ;
   enum nl80211_bss_scan_width scan_width ;
   u8 const *ie ;
   size_t ie_len ;
   u32 flags ;
   u32 rates[3U] ;
   struct wireless_dev *wdev ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   struct wiphy *wiphy ;
   unsigned long scan_start ;
   bool aborted ;
   bool notified ;
   bool no_cck ;
   struct ieee80211_channel *channels[0U] ;
};

#line 1491  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_match_set {
   struct cfg80211_ssid ssid ;
   s32 rssi_thold ;
};

#line 1499  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_sched_scan_request {
   struct cfg80211_ssid *ssids ;
   int n_ssids ;
   u32 n_channels ;
   enum nl80211_bss_scan_width scan_width ;
   u32 interval ;
   u8 const *ie ;
   size_t ie_len ;
   u32 flags ;
   struct cfg80211_match_set *match_sets ;
   int n_match_sets ;
   s32 min_rssi_thold ;
   u32 delay ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   struct wiphy *wiphy ;
   struct net_device *dev ;
   unsigned long scan_start ;
   struct callback_head callback_head ;
   u32 owner_nlportid ;
   struct ieee80211_channel *channels[0U] ;
};

#line 1561 
enum cfg80211_signal_type {
    CFG80211_SIGNAL_TYPE_NONE = 0,
    CFG80211_SIGNAL_TYPE_MBM = 1,
    CFG80211_SIGNAL_TYPE_UNSPEC = 2
};

#line 1766  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_ibss_params {
   u8 const *ssid ;
   u8 const *bssid ;
   struct cfg80211_chan_def chandef ;
   u8 const *ie ;
   u8 ssid_len ;
   u8 ie_len ;
   u16 beacon_interval ;
   u32 basic_rates ;
   bool channel_fixed ;
   bool privacy ;
   bool control_port ;
   bool userspace_handles_dfs ;
   int mcast_rate[3U] ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
};

#line 1814  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_connect_params {
   struct ieee80211_channel *channel ;
   struct ieee80211_channel *channel_hint ;
   u8 const *bssid ;
   u8 const *bssid_hint ;
   u8 const *ssid ;
   size_t ssid_len ;
   enum nl80211_auth_type auth_type ;
   u8 const *ie ;
   size_t ie_len ;
   bool privacy ;
   enum nl80211_mfp mfp ;
   struct cfg80211_crypto_settings crypto ;
   u8 const *key ;
   u8 key_len ;
   u8 key_idx ;
   u32 flags ;
   int bg_scan_period ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
   struct ieee80211_vht_cap vht_capa ;
   struct ieee80211_vht_cap vht_capa_mask ;
};

#line 1882  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct __anonstruct_control_366 {
   u32 legacy ;
   u8 ht_mcs[10U] ;
   u16 vht_mcs[8U] ;
   enum nl80211_txrate_gi gi ;
};

#line 1882  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_bitrate_mask {
   struct __anonstruct_control_366 control[3U] ;
};

#line 1916  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_pkt_pattern {
   u8 const *mask ;
   u8 const *pattern ;
   int pattern_len ;
   int pkt_offset ;
};

#line 1933  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_wowlan_tcp {
   struct socket *sock ;
   __be32 src ;
   __be32 dst ;
   u16 src_port ;
   u16 dst_port ;
   u8 dst_mac[6U] ;
   int payload_len ;
   u8 const *payload ;
   struct nl80211_wowlan_tcp_data_seq payload_seq ;
   u32 data_interval ;
   u32 wake_len ;
   u8 const *wake_data ;
   u8 const *wake_mask ;
   u32 tokens_size ;
   struct nl80211_wowlan_tcp_data_token payload_tok ;
};

#line 1968  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_wowlan {
   bool any ;
   bool disconnect ;
   bool magic_pkt ;
   bool gtk_rekey_failure ;
   bool eap_identity_req ;
   bool four_way_handshake ;
   bool rfkill_release ;
   struct cfg80211_pkt_pattern *patterns ;
   struct cfg80211_wowlan_tcp *tcp ;
   int n_patterns ;
   struct cfg80211_sched_scan_request *nd_config ;
};

#line 2086  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_gtk_rekey_data {
   u8 const *kek ;
   u8 const *kck ;
   u8 const *replay_ctr ;
};

#line 2736  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_iface_limit {
   u16 max ;
   u16 types ;
};

#line 2797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_iface_combination {
   struct ieee80211_iface_limit const *limits ;
   u32 num_different_channels ;
   u16 max_interfaces ;
   u8 n_limits ;
   bool beacon_int_infra_match ;
   u8 radar_detect_widths ;
   u8 radar_detect_regions ;
};

#line 2869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_txrx_stypes {
   u16 tx ;
   u16 rx ;
};

#line 2885  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_wowlan_tcp_support {
   struct nl80211_wowlan_tcp_data_token_feature const *tok ;
   u32 data_payload_max ;
   u32 data_interval_max ;
   u32 wake_payload_max ;
   bool seq ;
};

#line 2910  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_wowlan_support {
   u32 flags ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
   int max_nd_match_sets ;
   struct wiphy_wowlan_tcp_support const *tcp ;
};

#line 2935  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_coalesce_support {
   int n_rules ;
   int max_delay ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
};

#line 2960  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_vendor_command {
   struct nl80211_vendor_cmd_info info ;
   u32 flags ;
   int (*doit)(struct wiphy *, struct wireless_dev *, void const *, int ) ;
};

#line 2981  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy {
   u8 perm_addr[6U] ;
   u8 addr_mask[6U] ;
   struct mac_address *addresses ;
   struct ieee80211_txrx_stypes const *mgmt_stypes ;
   struct ieee80211_iface_combination const *iface_combinations ;
   int n_iface_combinations ;
   u16 software_iftypes ;
   u16 n_addresses ;
   u16 interface_modes ;
   u16 max_acl_mac_addrs ;
   u32 flags ;
   u32 regulatory_flags ;
   u32 features ;
   u8 ext_features[1U] ;
   u32 ap_sme_capa ;
   enum cfg80211_signal_type signal_type ;
   int bss_priv_size ;
   u8 max_scan_ssids ;
   u8 max_sched_scan_ssids ;
   u8 max_match_sets ;
   u16 max_scan_ie_len ;
   u16 max_sched_scan_ie_len ;
   int n_cipher_suites ;
   u32 const *cipher_suites ;
   u8 retry_short ;
   u8 retry_long ;
   u32 frag_threshold ;
   u32 rts_threshold ;
   u8 coverage_class ;
   char fw_version[32U] ;
   u32 hw_version ;
   struct wiphy_wowlan_support const *wowlan ;
   struct cfg80211_wowlan *wowlan_config ;
   u16 max_remain_on_channel_duration ;
   u8 max_num_pmkids ;
   u32 available_antennas_tx ;
   u32 available_antennas_rx ;
   u32 probe_resp_offload ;
   u8 const *extended_capabilities ;
   u8 const *extended_capabilities_mask ;
   u8 extended_capabilities_len ;
   void const *privid ;
   struct ieee80211_supported_band *bands[3U] ;
   void (*reg_notifier)(struct wiphy *, struct regulatory_request *) ;
   struct ieee80211_regdomain const *regd ;
   struct device dev ;
   bool registered ;
   struct dentry *debugfsdir ;
   struct ieee80211_ht_cap const *ht_capa_mod_mask ;
   struct ieee80211_vht_cap const *vht_capa_mod_mask ;
   possible_net_t _net ;
   struct iw_handler_def const *wext ;
   struct wiphy_coalesce_support const *coalesce ;
   struct wiphy_vendor_command const *vendor_commands ;
   struct nl80211_vendor_cmd_info const *vendor_events ;
   int n_vendor_commands ;
   int n_vendor_events ;
   u16 max_ap_assoc_sta ;
   u8 max_num_csa_counters ;
   u8 max_adj_channel_rssi_comp ;
   char priv[0U] ;
};

#line 3369 
struct cfg80211_conn;

#line 3370 
struct cfg80211_internal_bss;

#line 3371 
struct cfg80211_cached_keys;

#line 3372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct __anonstruct_wext_367 {
   struct cfg80211_ibss_params ibss ;
   struct cfg80211_connect_params connect ;
   struct cfg80211_cached_keys *keys ;
   u8 const *ie ;
   size_t ie_len ;
   u8 bssid[6U] ;
   u8 prev_bssid[6U] ;
   u8 ssid[32U] ;
   s8 default_key ;
   s8 default_mgmt_key ;
   bool prev_bssid_valid ;
};

#line 3372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wireless_dev {
   struct wiphy *wiphy ;
   enum nl80211_iftype iftype ;
   struct list_head list ;
   struct net_device *netdev ;
   u32 identifier ;
   struct list_head mgmt_registrations ;
   spinlock_t mgmt_registrations_lock ;
   struct mutex mtx ;
   bool use_4addr ;
   bool p2p_started ;
   u8 address[6U] ;
   u8 ssid[32U] ;
   u8 ssid_len ;
   u8 mesh_id_len ;
   u8 mesh_id_up_len ;
   struct cfg80211_conn *conn ;
   struct cfg80211_cached_keys *connect_keys ;
   struct list_head event_list ;
   spinlock_t event_lock ;
   struct cfg80211_internal_bss *current_bss ;
   struct cfg80211_chan_def preset_chandef ;
   struct cfg80211_chan_def chandef ;
   bool ibss_fixed ;
   bool ibss_dfs_possible ;
   bool ps ;
   int ps_timeout ;
   int beacon_interval ;
   u32 ap_unexpected_nlportid ;
   bool cac_started ;
   unsigned long cac_start_time ;
   unsigned int cac_time_ms ;
   u32 owner_nlportid ;
   struct __anonstruct_wext_367 wext ;
};

#line 5244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_tx_queue_params {
   u16 txop ;
   u16 cw_min ;
   u16 cw_max ;
   u8 aifs ;
   bool acm ;
   bool uapsd ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_low_level_stats {
   unsigned int dot11ACKFailureCount ;
   unsigned int dot11RTSFailureCount ;
   unsigned int dot11FCSErrorCount ;
   unsigned int dot11RTSSuccessCount ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_chanctx_conf {
   struct cfg80211_chan_def def ;
   struct cfg80211_chan_def min_def ;
   u8 rx_chains_static ;
   u8 rx_chains_dynamic ;
   bool radar_enabled ;
   u8 drv_priv[0U] ;
};

#line 224 
enum ieee80211_chanctx_switch_mode {
    CHANCTX_SWMODE_REASSIGN_VIF = 0,
    CHANCTX_SWMODE_SWAP_CONTEXTS = 1
};

#line 229 
struct ieee80211_vif;

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_vif_chanctx_switch {
   struct ieee80211_vif *vif ;
   struct ieee80211_chanctx_conf *old_ctx ;
   struct ieee80211_chanctx_conf *new_ctx ;
};

#line 287 
enum ieee80211_event_type {
    RSSI_EVENT = 0,
    MLME_EVENT = 1,
    BAR_RX_EVENT = 2,
    BA_FRAME_TIMEOUT = 3
};

#line 294 
enum ieee80211_rssi_event_data {
    RSSI_EVENT_HIGH = 0,
    RSSI_EVENT_LOW = 1
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_rssi_event {
   enum ieee80211_rssi_event_data data ;
};

#line 369 
enum ieee80211_mlme_event_data {
    AUTH_EVENT = 0,
    ASSOC_EVENT = 1,
    DEAUTH_RX_EVENT = 2,
    DEAUTH_TX_EVENT = 3
};

#line 376 
enum ieee80211_mlme_event_status {
    MLME_SUCCESS = 0,
    MLME_DENIED = 1,
    MLME_TIMEOUT = 2
};

#line 382  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_mlme_event {
   enum ieee80211_mlme_event_data data ;
   enum ieee80211_mlme_event_status status ;
   u16 reason ;
};

#line 407 
struct ieee80211_sta;

#line 407  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_ba_event {
   struct ieee80211_sta *sta ;
   u16 tid ;
   u16 ssn ;
};

#line 419  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
union __anonunion_u_368 {
   struct ieee80211_rssi_event rssi ;
   struct ieee80211_mlme_event mlme ;
   struct ieee80211_ba_event ba ;
};

#line 419  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_event {
   enum ieee80211_event_type type ;
   union __anonunion_u_368 u ;
};

#line 436  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_bss_conf {
   u8 const *bssid ;
   bool assoc ;
   bool ibss_joined ;
   bool ibss_creator ;
   u16 aid ;
   bool use_cts_prot ;
   bool use_short_preamble ;
   bool use_short_slot ;
   bool enable_beacon ;
   u8 dtim_period ;
   u16 beacon_int ;
   u16 assoc_capability ;
   u64 sync_tsf ;
   u32 sync_device_ts ;
   u8 sync_dtim_count ;
   u32 basic_rates ;
   struct ieee80211_rate *beacon_rate ;
   int mcast_rate[3U] ;
   u16 ht_operation_mode ;
   s32 cqm_rssi_thold ;
   u32 cqm_rssi_hyst ;
   struct cfg80211_chan_def chandef ;
   __be32 arp_addr_list[4U] ;
   int arp_addr_cnt ;
   bool qos ;
   bool idle ;
   bool ps ;
   u8 ssid[32U] ;
   size_t ssid_len ;
   bool hidden_ssid ;
   int txpower ;
   enum nl80211_tx_power_setting txpower_type ;
   struct ieee80211_p2p_noa_attr p2p_noa_attr ;
};

#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_tx_rate {
   s8 idx ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) count : 5 ;
   u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(11))) flags : 11 ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_372 {
   struct ieee80211_tx_rate rates[4U] ;
   s8 rts_cts_rate_idx ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_rts : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_cts_prot : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) short_preamble : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skip_table : 1 ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
union __anonunion_371 {
   struct __anonstruct_372 __anonCompField___anonunion_371_97 ;
   unsigned long jiffies ;
};

#line 819 
struct ieee80211_key_conf;

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_control_370 {
   union __anonunion_371 __anonCompField___anonstruct_control_370_98 ;
   struct ieee80211_vif *vif ;
   struct ieee80211_key_conf *hw_key ;
   u32 flags ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_ack_373 {
   u64 cookie ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_status_374 {
   struct ieee80211_tx_rate rates[4U] ;
   s32 ack_signal ;
   u8 ampdu_ack_len ;
   u8 ampdu_len ;
   u8 antenna ;
   u16 tx_time ;
   void *status_driver_data[2U] ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_375 {
   struct ieee80211_tx_rate driver_rates[4U] ;
   u8 pad[4U] ;
   void *rate_driver_data[3U] ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
union __anonunion_369 {
   struct __anonstruct_control_370 control ;
   struct __anonstruct_ack_373 ack ;
   struct __anonstruct_status_374 status ;
   struct __anonstruct_375 __anonCompField___anonunion_369_99 ;
   void *driver_data[5U] ;
};

#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_tx_info {
   u32 flags ;
   u8 band ;
   u8 hw_queue ;
   u16 ack_frame_id ;
   union __anonunion_369 __anonCompField_ieee80211_tx_info_100 ;
};

#line 896  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_scan_ies {
   u8 const *ies[3U] ;
   size_t len[3U] ;
   u8 const *common_ies ;
   size_t common_ie_len ;
};

#line 923 
struct ieee80211_rx_status;

#line 997  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_rx_status {
   u64 mactime ;
   u32 device_timestamp ;
   u32 ampdu_reference ;
   u32 flag ;
   u16 freq ;
   u8 vht_flag ;
   u8 rate_idx ;
   u8 vht_nss ;
   u8 rx_flags ;
   u8 band ;
   u8 antenna ;
   s8 signal ;
   u8 chains ;
   s8 chain_signal[4U] ;
   u8 ampdu_delimiter_crc ;
};

#line 1174 
enum ieee80211_smps_mode {
    IEEE80211_SMPS_AUTOMATIC = 0,
    IEEE80211_SMPS_OFF = 1,
    IEEE80211_SMPS_STATIC = 2,
    IEEE80211_SMPS_DYNAMIC = 3,
    IEEE80211_SMPS_NUM_MODES = 4
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_conf {
   u32 flags ;
   int power_level ;
   int dynamic_ps_timeout ;
   int max_sleep_period ;
   u16 listen_interval ;
   u8 ps_dtim_period ;
   u8 long_frame_max_tx_count ;
   u8 short_frame_max_tx_count ;
   struct cfg80211_chan_def chandef ;
   bool radar_enabled ;
   enum ieee80211_smps_mode smps_mode ;
};

#line 1285  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_channel_switch {
   u64 timestamp ;
   u32 device_timestamp ;
   bool block_tx ;
   struct cfg80211_chan_def chandef ;
   u8 count ;
};

#line 1316 
struct ieee80211_txq;

#line 1316  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_vif {
   enum nl80211_iftype type ;
   struct ieee80211_bss_conf bss_conf ;
   u8 addr[6U] ;
   bool p2p ;
   bool csa_active ;
   u8 cab_queue ;
   u8 hw_queue[4U] ;
   struct ieee80211_txq *txq ;
   struct ieee80211_chanctx_conf *chanctx_conf ;
   u32 driver_flags ;
   struct dentry *debugfs_dir ;
   u8 drv_priv[0U] ;
};

#line 1432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_key_conf {
   atomic64_t tx_pn ;
   u32 cipher ;
   u8 icv_len ;
   u8 iv_len ;
   u8 hw_key_idx ;
   u8 flags ;
   s8 keyidx ;
   u8 keylen ;
   u8 key[0U] ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_tkip_377 {
   u32 iv32 ;
   u16 iv16 ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_ccmp_378 {
   u8 pn[6U] ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_aes_cmac_379 {
   u8 pn[6U] ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_aes_gmac_380 {
   u8 pn[6U] ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_gcmp_381 {
   u8 pn[6U] ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_hw_382 {
   u8 seq[16U] ;
   u8 seq_len ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
union __anonunion_376 {
   struct __anonstruct_tkip_377 tkip ;
   struct __anonstruct_ccmp_378 ccmp ;
   struct __anonstruct_aes_cmac_379 aes_cmac ;
   struct __anonstruct_aes_gmac_380 aes_gmac ;
   struct __anonstruct_gcmp_381 gcmp ;
   struct __anonstruct_hw_382 hw ;
};

#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_key_seq {
   union __anonunion_376 __anonCompField_ieee80211_key_seq_101 ;
};

#line 1547  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_cipher_scheme {
   u32 cipher ;
   u16 iftype ;
   u8 hdr_len ;
   u8 pn_len ;
   u8 pn_off ;
   u8 key_idx_off ;
   u8 key_idx_mask ;
   u8 key_idx_shift ;
   u8 mic_len ;
};

#line 1577 
enum set_key_cmd {
    SET_KEY = 0,
    DISABLE_KEY = 1
};

#line 1582 
enum ieee80211_sta_state {
    IEEE80211_STA_NOTEXIST = 0,
    IEEE80211_STA_NONE = 1,
    IEEE80211_STA_AUTH = 2,
    IEEE80211_STA_ASSOC = 3,
    IEEE80211_STA_AUTHORIZED = 4
};

#line 1590 
enum ieee80211_sta_rx_bandwidth {
    IEEE80211_STA_RX_BW_20 = 0,
    IEEE80211_STA_RX_BW_40 = 1,
    IEEE80211_STA_RX_BW_80 = 2,
    IEEE80211_STA_RX_BW_160 = 3
};

#line 1597  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct __anonstruct_rate_383 {
   s8 idx ;
   u8 count ;
   u8 count_cts ;
   u8 count_rts ;
   u16 flags ;
};

#line 1597  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_sta_rates {
   struct callback_head callback_head ;
   struct __anonstruct_rate_383 rate[4U] ;
};

#line 1645  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_sta {
   u32 supp_rates[3U] ;
   u8 addr[6U] ;
   u16 aid ;
   struct ieee80211_sta_ht_cap ht_cap ;
   struct ieee80211_sta_vht_cap vht_cap ;
   bool wme ;
   u8 uapsd_queues ;
   u8 max_sp ;
   u8 rx_nss ;
   enum ieee80211_sta_rx_bandwidth bandwidth ;
   enum ieee80211_smps_mode smps_mode ;
   struct ieee80211_sta_rates *rates ;
   bool tdls ;
   bool tdls_initiator ;
   bool mfp ;
   struct ieee80211_txq *txq[16U] ;
   u8 drv_priv[0U] ;
};

#line 1703 
enum sta_notify_cmd {
    STA_NOTIFY_SLEEP = 0,
    STA_NOTIFY_AWAKE = 1
};

#line 1708  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_tx_control {
   struct ieee80211_sta *sta ;
};

#line 1726  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_txq {
   struct ieee80211_vif *vif ;
   struct ieee80211_sta *sta ;
   u8 tid ;
   u8 ac ;
   u8 drv_priv[0U] ;
};

#line 1748 
enum ieee80211_hw_flags {
    IEEE80211_HW_HAS_RATE_CONTROL = 0,
    IEEE80211_HW_RX_INCLUDES_FCS = 1,
    IEEE80211_HW_HOST_BROADCAST_PS_BUFFERING = 2,
    IEEE80211_HW_SIGNAL_UNSPEC = 3,
    IEEE80211_HW_SIGNAL_DBM = 4,
    IEEE80211_HW_NEED_DTIM_BEFORE_ASSOC = 5,
    IEEE80211_HW_SPECTRUM_MGMT = 6,
    IEEE80211_HW_AMPDU_AGGREGATION = 7,
    IEEE80211_HW_SUPPORTS_PS = 8,
    IEEE80211_HW_PS_NULLFUNC_STACK = 9,
    IEEE80211_HW_SUPPORTS_DYNAMIC_PS = 10,
    IEEE80211_HW_MFP_CAPABLE = 11,
    IEEE80211_HW_WANT_MONITOR_VIF = 12,
    IEEE80211_HW_NO_AUTO_VIF = 13,
    IEEE80211_HW_SW_CRYPTO_CONTROL = 14,
    IEEE80211_HW_SUPPORT_FAST_XMIT = 15,
    IEEE80211_HW_REPORTS_TX_ACK_STATUS = 16,
    IEEE80211_HW_CONNECTION_MONITOR = 17,
    IEEE80211_HW_QUEUE_CONTROL = 18,
    IEEE80211_HW_SUPPORTS_PER_STA_GTK = 19,
    IEEE80211_HW_AP_LINK_PS = 20,
    IEEE80211_HW_TX_AMPDU_SETUP_IN_HW = 21,
    IEEE80211_HW_SUPPORTS_RC_TABLE = 22,
    IEEE80211_HW_P2P_DEV_ADDR_FOR_INTF = 23,
    IEEE80211_HW_TIMING_BEACON_ONLY = 24,
    IEEE80211_HW_SUPPORTS_HT_CCK_RATES = 25,
    IEEE80211_HW_CHANCTX_STA_CSA = 26,
    IEEE80211_HW_SUPPORTS_CLONED_SKBS = 27,
    IEEE80211_HW_SINGLE_SCAN_ON_ALL_BANDS = 28,
    NUM_IEEE80211_HW_FLAGS = 29
};

#line 1781  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_hw {
   struct ieee80211_conf conf ;
   struct wiphy *wiphy ;
   char const *rate_control_algorithm ;
   void *priv ;
   unsigned long flags[1U] ;
   unsigned int extra_tx_headroom ;
   unsigned int extra_beacon_tailroom ;
   int vif_data_size ;
   int sta_data_size ;
   int chanctx_data_size ;
   int txq_data_size ;
   u16 queues ;
   u16 max_listen_interval ;
   s8 max_signal ;
   u8 max_rates ;
   u8 max_report_rates ;
   u8 max_rate_tries ;
   u8 max_rx_aggregation_subframes ;
   u8 max_tx_aggregation_subframes ;
   u8 offchannel_tx_hw_queue ;
   u8 radiotap_mcs_details ;
   u16 radiotap_vht_details ;
   netdev_features_t netdev_features ;
   u8 uapsd_queues ;
   u8 uapsd_max_sp_len ;
   u8 n_cipher_schemes ;
   struct ieee80211_cipher_scheme const *cipher_schemes ;
   int txq_ac_max_pending ;
};

#line 2070  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_scan_request {
   struct ieee80211_scan_ies ies ;
   struct cfg80211_scan_request req ;
};

#line 2084  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_tdls_ch_sw_params {
   struct ieee80211_sta *sta ;
   struct cfg80211_chan_def *chandef ;
   u8 action_code ;
   u32 status ;
   u32 timestamp ;
   u16 switch_time ;
   u16 switch_timeout ;
   struct sk_buff *tmpl_skb ;
   u32 ch_sw_tm_ie ;
};

#line 2194 
enum ieee80211_ampdu_mlme_action {
    IEEE80211_AMPDU_RX_START = 0,
    IEEE80211_AMPDU_RX_STOP = 1,
    IEEE80211_AMPDU_TX_START = 2,
    IEEE80211_AMPDU_TX_STOP_CONT = 3,
    IEEE80211_AMPDU_TX_STOP_FLUSH = 4,
    IEEE80211_AMPDU_TX_STOP_FLUSH_CONT = 5,
    IEEE80211_AMPDU_TX_OPERATIONAL = 6
};

#line 2204 
enum ieee80211_frame_release_type {
    IEEE80211_FRAME_RELEASE_PSPOLL = 0,
    IEEE80211_FRAME_RELEASE_UAPSD = 1
};

#line 2216 
enum ieee80211_roc_type {
    IEEE80211_ROC_TYPE_NORMAL = 0,
    IEEE80211_ROC_TYPE_MGMT_TX = 1
};

#line 2221 
enum ieee80211_reconfig_type {
    IEEE80211_RECONFIG_TYPE_RESTART = 0,
    IEEE80211_RECONFIG_TYPE_SUSPEND = 1
};

#line 2226  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct ieee80211_ops {
   void (*tx)(struct ieee80211_hw *, struct ieee80211_tx_control *, struct sk_buff *) ;
   int (*start)(struct ieee80211_hw *) ;
   void (*stop)(struct ieee80211_hw *) ;
   int (*suspend)(struct ieee80211_hw *, struct cfg80211_wowlan *) ;
   int (*resume)(struct ieee80211_hw *) ;
   void (*set_wakeup)(struct ieee80211_hw *, bool ) ;
   int (*add_interface)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*change_interface)(struct ieee80211_hw *, struct ieee80211_vif *, enum nl80211_iftype , bool ) ;
   void (*remove_interface)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*config)(struct ieee80211_hw *, u32 ) ;
   void (*bss_info_changed)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_bss_conf *, u32 ) ;
   int (*start_ap)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*stop_ap)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   u64 (*prepare_multicast)(struct ieee80211_hw *, struct netdev_hw_addr_list *) ;
   void (*configure_filter)(struct ieee80211_hw *, unsigned int , unsigned int *, u64 ) ;
   int (*set_tim)(struct ieee80211_hw *, struct ieee80211_sta *, bool ) ;
   int (*set_key)(struct ieee80211_hw *, enum set_key_cmd , struct ieee80211_vif *, struct ieee80211_sta *, struct ieee80211_key_conf *) ;
   void (*update_tkip_key)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_key_conf *, struct ieee80211_sta *, u32 , u16 *) ;
   void (*set_rekey_data)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_gtk_rekey_data *) ;
   void (*set_default_unicast_key)(struct ieee80211_hw *, struct ieee80211_vif *, int ) ;
   int (*hw_scan)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_scan_request *) ;
   void (*cancel_hw_scan)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*sched_scan_start)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_sched_scan_request *, struct ieee80211_scan_ies *) ;
   int (*sched_scan_stop)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*sw_scan_start)(struct ieee80211_hw *, struct ieee80211_vif *, u8 const *) ;
   void (*sw_scan_complete)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*get_stats)(struct ieee80211_hw *, struct ieee80211_low_level_stats *) ;
   void (*get_key_seq)(struct ieee80211_hw *, struct ieee80211_key_conf *, struct ieee80211_key_seq *) ;
   int (*set_frag_threshold)(struct ieee80211_hw *, u32 ) ;
   int (*set_rts_threshold)(struct ieee80211_hw *, u32 ) ;
   int (*sta_add)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   int (*sta_remove)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_add_debugfs)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct dentry *) ;
   void (*sta_remove_debugfs)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct dentry *) ;
   void (*sta_notify)(struct ieee80211_hw *, struct ieee80211_vif *, enum sta_notify_cmd , struct ieee80211_sta *) ;
   int (*sta_state)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, enum ieee80211_sta_state , enum ieee80211_sta_state ) ;
   void (*sta_pre_rcu_remove)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_rc_update)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, u32 ) ;
   void (*sta_rate_tbl_update)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_statistics)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct station_info *) ;
   int (*conf_tx)(struct ieee80211_hw *, struct ieee80211_vif *, u16 , struct ieee80211_tx_queue_params const *) ;
   u64 (*get_tsf)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*set_tsf)(struct ieee80211_hw *, struct ieee80211_vif *, u64 ) ;
   void (*reset_tsf)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*tx_last_beacon)(struct ieee80211_hw *) ;
   int (*ampdu_action)(struct ieee80211_hw *, struct ieee80211_vif *, enum ieee80211_ampdu_mlme_action , struct ieee80211_sta *, u16 , u16 *, u8 ) ;
   int (*get_survey)(struct ieee80211_hw *, int , struct survey_info *) ;
   void (*rfkill_poll)(struct ieee80211_hw *) ;
   void (*set_coverage_class)(struct ieee80211_hw *, s16 ) ;
   int (*testmode_cmd)(struct ieee80211_hw *, struct ieee80211_vif *, void *, int ) ;
   int (*testmode_dump)(struct ieee80211_hw *, struct sk_buff *, struct netlink_callback *, void *, int ) ;
   void (*flush)(struct ieee80211_hw *, struct ieee80211_vif *, u32 , bool ) ;
   void (*channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *) ;
   int (*set_antenna)(struct ieee80211_hw *, u32 , u32 ) ;
   int (*get_antenna)(struct ieee80211_hw *, u32 *, u32 *) ;
   int (*remain_on_channel)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel *, int , enum ieee80211_roc_type ) ;
   int (*cancel_remain_on_channel)(struct ieee80211_hw *) ;
   int (*set_ringparam)(struct ieee80211_hw *, u32 , u32 ) ;
   void (*get_ringparam)(struct ieee80211_hw *, u32 *, u32 *, u32 *, u32 *) ;
   bool (*tx_frames_pending)(struct ieee80211_hw *) ;
   int (*set_bitrate_mask)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_bitrate_mask const *) ;
   void (*event_callback)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_event const *) ;
   void (*allow_buffered_frames)(struct ieee80211_hw *, struct ieee80211_sta *, u16 , int , enum ieee80211_frame_release_type , bool ) ;
   void (*release_buffered_frames)(struct ieee80211_hw *, struct ieee80211_sta *, u16 , int , enum ieee80211_frame_release_type , bool ) ;
   int (*get_et_sset_count)(struct ieee80211_hw *, struct ieee80211_vif *, int ) ;
   void (*get_et_stats)(struct ieee80211_hw *, struct ieee80211_vif *, struct ethtool_stats *, u64 *) ;
   void (*get_et_strings)(struct ieee80211_hw *, struct ieee80211_vif *, u32 , u8 *) ;
   void (*mgd_prepare_tx)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*mgd_protect_tdls_discover)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*add_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *) ;
   void (*remove_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *) ;
   void (*change_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *, u32 ) ;
   int (*assign_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_chanctx_conf *) ;
   void (*unassign_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_chanctx_conf *) ;
   int (*switch_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif_chanctx_switch *, int , enum ieee80211_chanctx_switch_mode ) ;
   void (*reconfig_complete)(struct ieee80211_hw *, enum ieee80211_reconfig_type ) ;
   void (*ipv6_addr_change)(struct ieee80211_hw *, struct ieee80211_vif *, struct inet6_dev *) ;
   void (*channel_switch_beacon)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_chan_def *) ;
   int (*pre_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *) ;
   int (*post_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*join_ibss)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*leave_ibss)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   u32 (*get_expected_throughput)(struct ieee80211_sta *) ;
   int (*get_txpower)(struct ieee80211_hw *, struct ieee80211_vif *, int *) ;
   int (*tdls_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, u8 , struct cfg80211_chan_def *, struct sk_buff *, u32 ) ;
   void (*tdls_cancel_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*tdls_recv_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_tdls_ch_sw_params *) ;
   void (*wake_tx_queue)(struct ieee80211_hw *, struct ieee80211_txq *) ;
};

#line 5433  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
struct firmware {
   size_t size ;
   u8 const *data ;
   struct page **pages ;
   void *priv ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct rxd_ops {
   int rxd_size ;
   void (*rxd_init)(void *, dma_addr_t ) ;
   void (*rxd_refill)(void *, dma_addr_t , int ) ;
   int (*rxd_process)(void *, struct ieee80211_rx_status *, __le16 *, s8 *) ;
};

#line 126  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_device_info {
   char *part_name ;
   char *helper_image ;
   char *fw_image_sta ;
   char *fw_image_ap ;
   struct rxd_ops *ap_rxd_ops ;
   u32 fw_api_ap ;
};

#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct __anonstruct_buf_385 {
   struct sk_buff *skb ;
   dma_addr_t dma ;
};

#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_rx_queue {
   int rxd_count ;
   int head ;
   int tail ;
   void *rxd ;
   dma_addr_t rxd_dma ;
   struct __anonstruct_buf_385 *buf ;
};

#line 153 
struct mwl8k_tx_desc;

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_tx_queue {
   int head ;
   int tail ;
   unsigned int len ;
   struct mwl8k_tx_desc *txd ;
   dma_addr_t txd_dma ;
   struct sk_buff **skb ;
};

#line 173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_ampdu_stream {
   struct ieee80211_sta *sta ;
   u8 tid ;
   u8 state ;
   u8 idx ;
};

#line 180  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_priv {
   struct ieee80211_hw *hw ;
   struct pci_dev *pdev ;
   int irq ;
   struct mwl8k_device_info *device_info ;
   void *sram ;
   void *regs ;
   struct firmware const *fw_helper ;
   struct firmware const *fw_ucode ;
   bool ap_fw ;
   struct rxd_ops *rxd_ops ;
   struct ieee80211_supported_band band_24 ;
   struct ieee80211_channel channels_24[14U] ;
   struct ieee80211_rate rates_24[13U] ;
   struct ieee80211_supported_band band_50 ;
   struct ieee80211_channel channels_50[4U] ;
   struct ieee80211_rate rates_50[8U] ;
   u32 ap_macids_supported ;
   u32 sta_macids_supported ;
   u8 num_ampdu_queues ;
   spinlock_t stream_lock ;
   struct mwl8k_ampdu_stream ampdu[8U] ;
   struct work_struct watchdog_ba_handle ;
   struct mutex fw_mutex ;
   struct task_struct *fw_mutex_owner ;
   struct task_struct *hw_restart_owner ;
   int fw_mutex_depth ;
   struct completion *hostcmd_wait ;
   atomic_t watchdog_event_pending ;
   spinlock_t tx_lock ;
   struct completion *tx_wait ;
   u32 macids_used ;
   struct list_head vif_list ;
   u32 *cookie ;
   dma_addr_t cookie_dma ;
   u16 num_mcaddrs ;
   u8 hw_rev ;
   u32 fw_rev ;
   u32 caps ;
   int pending_tx_pkts ;
   struct mwl8k_rx_queue rxq[1U] ;
   struct mwl8k_tx_queue txq[12U] ;
   u32 txq_offset[12U] ;
   bool radio_on ;
   bool radio_short_preamble ;
   bool sniffer_enabled ;
   bool wmm_enabled ;
   bool capture_beacon ;
   u8 capture_bssid[6U] ;
   struct sk_buff *beacon_skb ;
   struct work_struct finalize_join_worker ;
   struct tasklet_struct poll_tx_task ;
   struct tasklet_struct poll_rx_task ;
   s8 noise ;
   struct ieee80211_tx_queue_params wmm_params[4U] ;
   struct work_struct fw_reload ;
   bool hw_restart_in_progress ;
   unsigned int fw_state ;
   char *fw_pref ;
   char *fw_alt ;
   bool is_8764 ;
   struct completion firmware_loading_complete ;
   u32 running_bsses ;
   bool sw_scan_start ;
   struct ieee80211_channel *acs_chan ;
   unsigned long channel_time ;
   struct survey_info survey[18U] ;
};

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct __anonstruct_wep_key_conf_386 {
   u8 enabled ;
   u8 key[37U] ;
};

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_vif {
   struct list_head list ;
   struct ieee80211_vif *vif ;
   int macid ;
   u16 seqno ;
   struct __anonstruct_wep_key_conf_386 wep_key_conf[4U] ;
   u8 bssid[6U] ;
   bool is_hw_crypto_enabled ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct tx_traffic_info {
   u32 start_time ;
   u32 pkts ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_sta {
   u8 peer_id ;
   u8 is_ampdu_allowed ;
   struct tx_traffic_info tx_stats[8U] ;
};

#line 580  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_pkt {
   __le16 code ;
   __le16 length ;
   __u8 seq_num ;
   __u8 macid ;
   __le16 result ;
   char payload[0U] ;
};

#line 795  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_dma_data {
   __le16 fwlen ;
   struct ieee80211_hdr wh ;
   char data[0U] ;
};

#line 928  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_rxd_ap {
   __le16 pkt_len ;
   __u8 sq2 ;
   __u8 rate ;
   __le32 pkt_phys_addr ;
   __le32 next_rxd_phys_addr ;
   __le16 qos_control ;
   __le16 htsig2 ;
   __le32 hw_rssi_info ;
   __le32 hw_noise_floor_info ;
   __u8 noise_floor ;
   __u8 pad0[3U] ;
   __u8 rssi ;
   __u8 rx_status ;
   __u8 channel ;
   __u8 rx_ctrl ;
};

#line 1037  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_rxd_sta {
   __le16 pkt_len ;
   __u8 link_quality ;
   __u8 noise_level ;
   __le32 pkt_phys_addr ;
   __le32 next_rxd_phys_addr ;
   __le16 qos_control ;
   __le16 rate_info ;
   __le32 pad0[4U] ;
   __u8 rssi ;
   __u8 channel ;
   __le16 pad1 ;
   __u8 rx_ctrl ;
   __u8 rx_status ;
   __u8 pad2[2U] ;
};

#line 1405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_tx_desc {
   __le32 status ;
   __u8 data_rate ;
   __u8 tx_priority ;
   __le16 qos_control ;
   __le32 pkt_phys_addr ;
   __le16 pkt_len ;
   __u8 dest_MAC_addr[6U] ;
   __le32 next_txd_phys_addr ;
   __le32 timestamp ;
   __le16 rate_info ;
   __u8 peer_id ;
   __u8 tx_frag_cnt ;
};

#line 2330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_get_hw_spec_sta {
   struct mwl8k_cmd_pkt header ;
   __u8 hw_rev ;
   __u8 host_interface ;
   __le16 num_mcaddrs ;
   __u8 perm_addr[6U] ;
   __le16 region_code ;
   __le32 fw_rev ;
   __le32 ps_cookie ;
   __le32 caps ;
   __u8 mcs_bitmap[16U] ;
   __le32 rx_queue_ptr ;
   __le32 num_tx_queues ;
   __le32 tx_queue_ptrs[4U] ;
   __le32 caps2 ;
   __le32 num_tx_desc_per_queue ;
   __le32 total_rxd ;
};

#line 2479  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_get_hw_spec_ap {
   struct mwl8k_cmd_pkt header ;
   __u8 hw_rev ;
   __u8 host_interface ;
   __le16 num_wcb ;
   __le16 num_mcaddrs ;
   __u8 perm_addr[6U] ;
   __le16 region_code ;
   __le16 num_antenna ;
   __le32 fw_rev ;
   __le32 wcbbase0 ;
   __le32 rxwrptr ;
   __le32 rxrdptr ;
   __le32 ps_cookie ;
   __le32 wcbbase1 ;
   __le32 wcbbase2 ;
   __le32 wcbbase3 ;
   __le32 fw_api_version ;
   __le32 caps ;
   __le32 num_of_ampdu_queues ;
   __le32 wcbbase_ampdu[8U] ;
};

#line 2573  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_set_hw_spec {
   struct mwl8k_cmd_pkt header ;
   __u8 hw_rev ;
   __u8 host_interface ;
   __le16 num_mcaddrs ;
   __u8 perm_addr[6U] ;
   __le16 region_code ;
   __le32 fw_rev ;
   __le32 ps_cookie ;
   __le32 caps ;
   __le32 rx_queue_ptr ;
   __le32 num_tx_queues ;
   __le32 tx_queue_ptrs[12U] ;
   __le32 flags ;
   __le32 num_tx_desc_per_queue ;
   __le32 total_rxd ;
};

#line 2650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_mac_multicast_adr {
   struct mwl8k_cmd_pkt header ;
   __le16 action ;
   __le16 numaddr ;
   __u8 addr[0U][6U] ;
};

#line 2709  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_get_stat {
   struct mwl8k_cmd_pkt header ;
   __le32 stats[64U] ;
};

#line 2751  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_radio_control {
   struct mwl8k_cmd_pkt header ;
   __le16 action ;
   __le16 control ;
   __le16 radio_on ;
};

#line 2810  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_rf_tx_power {
   struct mwl8k_cmd_pkt header ;
   __le16 action ;
   __le16 support_level ;
   __le16 current_level ;
   __le16 reserved ;
   __le16 power_level_list[8U] ;
};

#line 2844  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_tx_power {
   struct mwl8k_cmd_pkt header ;
   __le16 action ;
   __le16 band ;
   __le16 channel ;
   __le16 bw ;
   __le16 sub_ch ;
   __le16 power_level_list[12U] ;
};

#line 2905  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_rf_antenna {
   struct mwl8k_cmd_pkt header ;
   __le16 antenna ;
   __le16 mode ;
};

#line 2938  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_set_beacon {
   struct mwl8k_cmd_pkt header ;
   __le16 beacon_len ;
   __u8 beacon[0U] ;
};

#line 2968  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_set_pre_scan {
   struct mwl8k_cmd_pkt header ;
};

#line 2993  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_bbp_reg_access {
   struct mwl8k_cmd_pkt header ;
   __le16 action ;
   __le16 offset ;
   u8 value ;
   u8 rsrv[3U] ;
};

#line 3034  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_set_post_scan {
   struct mwl8k_cmd_pkt header ;
   __le32 isibss ;
   __u8 bssid[6U] ;
};

#line 3119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_set_rf_channel {
   struct mwl8k_cmd_pkt header ;
   __le16 action ;
   __u8 current_channel ;
   __le32 channel_flags ;
};

#line 3186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_update_set_aid {
   struct mwl8k_cmd_pkt header ;
   __le16 aid ;
   __u8 bssid[6U] ;
   __le16 protection_mode ;
   __u8 supp_rates[14U] ;
};

#line 3263  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_set_rate {
   struct mwl8k_cmd_pkt header ;
   __u8 legacy_rates[14U] ;
   __u8 mcs_set[16U] ;
   __u8 reserved[16U] ;
};

#line 3297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_finalize_join {
   struct mwl8k_cmd_pkt header ;
   __le32 sleep_interval ;
   __u8 beacon_data[128U] ;
};

#line 3338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_set_rts_threshold {
   struct mwl8k_cmd_pkt header ;
   __le16 action ;
   __le16 threshold ;
};

#line 3368  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_set_slot {
   struct mwl8k_cmd_pkt header ;
   __le16 action ;
   __u8 short_slot ;
};

#line 3397  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct __anonstruct_ap_399 {
   __le32 log_cw_max ;
   __le32 log_cw_min ;
   __u8 aifs ;
   __u8 txq ;
};

#line 3397  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct __anonstruct_sta_400 {
   __u8 log_cw_max ;
   __u8 log_cw_min ;
   __u8 aifs ;
   __u8 txq ;
};

#line 3397  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
union __anonunion_398 {
   struct __anonstruct_ap_399 ap ;
   struct __anonstruct_sta_400 sta ;
};

#line 3397  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_set_edca_params {
   struct mwl8k_cmd_pkt header ;
   __le16 action ;
   __le16 txop ;
   union __anonunion_398 __anonCompField_mwl8k_cmd_set_edca_params_102 ;
};

#line 3482  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_set_wmm_mode {
   struct mwl8k_cmd_pkt header ;
   __le16 action ;
};

#line 3513  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_mimo_config {
   struct mwl8k_cmd_pkt header ;
   __le32 action ;
   __u8 rx_antenna_map ;
   __u8 tx_antenna_map ;
};

#line 3544  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct __anonstruct_rate_entry_401 {
   __le32 is_ht_rate ;
   __le32 enable_retry ;
   __le32 rate ;
   __le32 retry_count ;
};

#line 3544  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_use_fixed_rate_sta {
   struct mwl8k_cmd_pkt header ;
   __le32 action ;
   __le32 allow_rate_drop ;
   __le32 num_rates ;
   struct __anonstruct_rate_entry_401 rate_entry[8U] ;
   __le32 rate_type ;
   __le32 reserved1 ;
   __le32 reserved2 ;
};

#line 3586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_rate_entry_ap {
   __le32 is_ht_rate ;
   __le32 enable_retry ;
   __le32 rate ;
   __le32 retry_count ;
};

#line 3601  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_use_fixed_rate_ap {
   struct mwl8k_cmd_pkt header ;
   __le32 action ;
   __le32 allow_rate_drop ;
   __le32 num_rates ;
   struct mwl8k_rate_entry_ap rate_entry[4U] ;
   u8 multicast_rate ;
   u8 multicast_rate_type ;
   u8 management_rate ;
};

#line 3627  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_enable_sniffer {
   struct mwl8k_cmd_pkt header ;
   __le32 action ;
};

#line 3654  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct __anonstruct_mbss_403 {
   __le16 mac_type ;
   __u8 mac_addr[6U] ;
};

#line 3654  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
union __anonunion_402 {
   struct __anonstruct_mbss_403 mbss ;
   __u8 mac_addr[6U] ;
};

#line 3654  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_update_mac_addr {
   struct mwl8k_cmd_pkt header ;
   union __anonunion_402 __anonCompField_mwl8k_cmd_update_mac_addr_103 ;
};

#line 3736  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_set_rate_adapt_mode {
   struct mwl8k_cmd_pkt header ;
   __le16 action ;
   __le16 mode ;
};

#line 3765  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_get_watchdog_bitmap {
   struct mwl8k_cmd_pkt header ;
   u8 bitmap ;
};

#line 3844  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_bss_start {
   struct mwl8k_cmd_pkt header ;
   __le32 enable ;
};

#line 3910  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_create_ba_stream {
   __le32 flags ;
   __le32 idle_thrs ;
   __le32 bar_thrs ;
   __le32 window_size ;
   u8 peer_mac_addr[6U] ;
   u8 dialog_token ;
   u8 tid ;
   u8 queue_id ;
   u8 param_info ;
   __le32 ba_context ;
   u8 reset_seq_no_flag ;
   __le16 curr_seq_no ;
   u8 sta_src_mac_addr[6U] ;
};

#line 3938  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_destroy_ba_stream {
   __le32 flags ;
   __le32 ba_context ;
};

#line 3943  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
union __anonunion_404 {
   struct mwl8k_create_ba_stream create_params ;
   struct mwl8k_destroy_ba_stream destroy_params ;
};

#line 3943  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_bastream {
   struct mwl8k_cmd_pkt header ;
   __le32 action ;
   union __anonunion_404 __anonCompField_mwl8k_cmd_bastream_104 ;
};

#line 4050  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_set_new_stn {
   struct mwl8k_cmd_pkt header ;
   __le16 aid ;
   __u8 mac_addr[6U] ;
   __le16 stn_id ;
   __le16 action ;
   __le16 rsvd ;
   __le32 legacy_rates ;
   __u8 ht_rates[4U] ;
   __le16 cap_info ;
   __le16 ht_capabilities_info ;
   __u8 mac_ht_param_info ;
   __u8 rev ;
   __u8 control_channel ;
   __u8 add_channel ;
   __le16 op_mode ;
   __le16 stbc ;
   __u8 add_qos_info ;
   __u8 is_qos_sta ;
   __le32 fw_sta_ptr ;
};

#line 4182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_update_encryption {
   struct mwl8k_cmd_pkt header ;
   __le32 action ;
   __le32 reserved ;
   __u8 mac_addr[6U] ;
   __u8 encr_type ;
};

#line 4198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_set_key {
   struct mwl8k_cmd_pkt header ;
   __le32 action ;
   __le32 reserved ;
   __le16 length ;
   __le16 key_type_id ;
   __le32 key_info ;
   __le32 key_id ;
   __le16 key_len ;
   __u8 key_material[16U] ;
   __u8 tkip_tx_mic_key[8U] ;
   __u8 tkip_rx_mic_key[8U] ;
   __le16 tkip_rsc_low ;
   __le32 tkip_rsc_high ;
   __le16 tkip_tsc_low ;
   __le32 tkip_tsc_high ;
   __u8 mac_addr[6U] ;
};

#line 4447  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct ewc_ht_info {
   __le16 control1 ;
   __le16 control2 ;
   __le16 control3 ;
};

#line 4456  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct peer_capability_info {
   __u8 peer_type ;
   __le16 basic_caps ;
   __u8 ht_support ;
   __le16 ht_caps ;
   __u8 extended_ht_caps ;
   struct ewc_ht_info ewc_info ;
   __u8 legacy_rates[12U] ;
   __u8 ht_rates[16U] ;
   __u8 pad[16U] ;
   __u8 interop ;
   __u8 pad2 ;
   __u8 station_id ;
   __le16 amsdu_enabled ;
};

#line 4485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct mwl8k_cmd_update_stadb {
   struct mwl8k_cmd_pkt header ;
   __le32 action ;
   __u8 peer_addr[6U] ;
   __le32 reserved ;
   struct peer_capability_info peer_info ;
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 1911  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct ldv_struct_free_irq_8 {
   int arg0 ;
   int signal_pending ;
};

#line 18  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_ieee80211_scenario_11 {
   struct ieee80211_hw *arg0 ;
   int signal_pending ;
};

#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_interrupt_scenario_12 {
   enum irqreturn (*arg2)(int , void *) ;
   enum irqreturn (*arg1)(int , void *) ;
   void *arg3 ;
   int arg0 ;
   int signal_pending ;
};

#line 31  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_pci_scenario_10 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};
void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/fvtp/.tmp_mwl8k.c"
void ldv_inline_asm(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
void ldv_atomic_inc(atomic_t *v);


#line 8 
void ldv_atomic_dec(atomic_t *v);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void __set_bit(long nr, unsigned long volatile *addr)
{
  
#line 96 
  ldv_inline_asm();
  
#line 97 
  return;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int variable_test_bit(long nr, unsigned long const volatile *addr)
{
  int oldbit;
  
#line 317 
  ldv_inline_asm();
  
#line 323 
  return oldbit;
}


#line 396  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int ffs(int x)
{
  int __retres;
  int r;
  
#line 399 
  ldv_inline_asm();
  
#line 423 
  __retres = r + 1;
  
#line 423 
  return __retres;
}


#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/arch_hweight.h"
__inline static unsigned int __arch_hweight32(unsigned int w)
{
  
#line 26 
  unsigned int res = 0U;
  
#line 27 
  ldv_inline_asm();
  
#line 32 
  return res;
}


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
int ____ilog2_NaN(void);


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
__inline static int __ilog2_u32(u32 n)
{
  int __retres;
  int tmp;
  
#line 34 
  tmp = ffs((int)n);
  
#line 34 
  __retres = tmp + -1;
  
#line 34 
  return __retres;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
void __dynamic_dev_dbg(struct _ddebug *, struct device const *, char const * , ...);


#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
void ___might_sleep(char const *, int, int);


#line 178 
void __might_sleep(char const *, int, int);


#line 405 
int snprintf(char *, size_t, char const * , ...);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list)
{
  
#line 27 
  list->next = list;
  
#line 28 
  list->prev = list;
  
#line 29 
  return;
}


#line 48 
void __list_add(struct list_head *, struct list_head *, struct list_head *);


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_add_tail(struct list_head *new, struct list_head *head)
{
  
#line 77 
  __list_add(new,head->prev,head);
  
#line 78 
  return;
}


#line 113 
void list_del(struct list_head *);


#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static int list_empty(struct list_head const *head)
{
  int __retres;
  
#line 189 
  __retres = (struct list_head const *)head->next == head;
  
#line 189 
  return __retres;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
void __bad_percpu_size(void);


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bug.h"
void warn_slowpath_null(char const *, int const);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/current.h"
__inline static struct task_struct *get_current(void)
{
  struct task_struct *tmp;
  {
    struct task_struct *pfo_ret__;
    
#line 14 
    switch (8UL) {
      case (unsigned long)1: 
#line 14 
      ;
      
#line 15 
      ldv_inline_asm();
      
#line 14 
      goto ldv_3477;
      case (unsigned long)2: 
#line 14 
      ;
      
#line 15 
      ldv_inline_asm();
      
#line 14 
      goto ldv_3477;
      case (unsigned long)4: 
#line 14 
      ;
      
#line 15 
      ldv_inline_asm();
      
#line 14 
      goto ldv_3477;
      case (unsigned long)8: 
#line 14 
      ;
      
#line 15 
      ldv_inline_asm();
      
#line 14 
      goto ldv_3477;
      default: 
#line 14 
      ;
      
#line 14 
      __bad_percpu_size();
    }
    ldv_3477: 
#line 14 
    ;
    
#line 14 
    tmp = pfo_ret__;
  }
  
#line 14 
  return tmp;
}


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 60 
void *memmove(void *, void const *, size_t);


#line 63 
int memcmp(void const *, void const *, size_t);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static int atomic_read(atomic_t const *v)
{
  int __retres;
  int const volatile *tmp;
  {
    
#line 27 
    int const __var = 0;
    
#line 27 
    tmp = (int const volatile *)(& v->counter);
  }
  
#line 27 
  __retres = *tmp;
  
#line 27 
  return __retres;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static void atomic_set(atomic_t *v, int i)
{
  
#line 39 
  v->counter = i;
  
#line 40 
  return;
}


#line 98 
static void atomic_inc(atomic_t *v);


#line 114 
static void atomic_dec(atomic_t *v);


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_add(int val)
{
  int tmp;
  
#line 72 
  if (0 != 0 && (val == 1 || val == -1)) 
#line 72 
                                         tmp = val; else 
#line 72 
                                                         tmp = 0;
  
#line 72 
  int const pao_ID__ = tmp;
  
#line 72 
  switch (4UL) {
    case (unsigned long)1: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)2: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)4: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)8: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    default: 
#line 72 
    ;
    
#line 72 
    __bad_percpu_size();
  }
  ldv_6377: 
#line 72 
  ;
  
#line 74 
  return;
}


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_sub(int val)
{
  int tmp;
  
#line 77 
  if (0 != 0 && (- val == 1 || - val == -1)) 
#line 77 
                                             tmp = - val; else 
#line 77 
                                                               tmp = 0;
  
#line 77 
  int const pao_ID__ = tmp;
  
#line 77 
  switch (4UL) {
    case (unsigned long)1: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)2: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)4: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)8: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    default: 
#line 77 
    ;
    
#line 77 
    __bad_percpu_size();
  }
  ldv_6389: 
#line 77 
  ;
  
#line 79 
  return;
}


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lockdep_init_map(struct lockdep_map *, char const *, struct lock_class_key *, int);


#line 333 
void lock_acquire(struct lockdep_map *, unsigned int, int, int, int, struct lockdep_map *, unsigned long);


#line 337 
void lock_release(struct lockdep_map *, int, unsigned long);


#line 545 
void lockdep_rcu_suspicious(char const *, int const, char const *);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 30 
void _raw_spin_lock_bh(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 42 
void _raw_spin_unlock_bh(raw_spinlock_t *);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_78(spinlock_t *lock);


#line 362 
static void ldv_spin_lock_81(spinlock_t *lock);


#line 366 
static void ldv_spin_lock_84(spinlock_t *lock);


#line 370 
static void ldv_spin_lock_88(spinlock_t *lock);


#line 374 
static void ldv_spin_lock_93(spinlock_t *lock);


#line 378 
static void ldv_spin_lock_95(spinlock_t *lock);


#line 382 
static void ldv_spin_lock_97(spinlock_t *lock);


#line 386 
static void ldv_spin_lock_99(spinlock_t *lock);


#line 390 
static void ldv_spin_lock_111(spinlock_t *lock);


#line 394 
static void ldv_spin_lock_113(spinlock_t *lock);


#line 398 
static void ldv_spin_lock_115(spinlock_t *lock);


#line 402 
static void ldv_spin_lock_117(spinlock_t *lock);


#line 406 
static void ldv_spin_lock_119(spinlock_t *lock);


#line 410 
static void ldv_spin_lock_121(spinlock_t *lock);


#line 411  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh(spinlock_t *lock)
{
  
#line 413 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 414 
  return;
}


#line 439 
static void ldv_spin_lock_bh_72(spinlock_t *lock);


#line 443 
static void ldv_spin_lock_bh_74(spinlock_t *lock);


#line 447 
static void ldv_spin_lock_bh_76(spinlock_t *lock);


#line 451 
static void ldv_spin_lock_bh_83(spinlock_t *lock);


#line 455 
static void ldv_spin_lock_bh_104(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 407 
static void ldv_spin_unlock_79(spinlock_t *lock);


#line 411 
static void ldv_spin_unlock_80(spinlock_t *lock);


#line 415 
static void ldv_spin_unlock_82(spinlock_t *lock);


#line 419 
static void ldv_spin_unlock_85(spinlock_t *lock);


#line 423 
static void ldv_spin_unlock_89(spinlock_t *lock);


#line 427 
static void ldv_spin_unlock_94(spinlock_t *lock);


#line 431 
static void ldv_spin_unlock_96(spinlock_t *lock);


#line 435 
static void ldv_spin_unlock_98(spinlock_t *lock);


#line 439 
static void ldv_spin_unlock_100(spinlock_t *lock);


#line 443 
static void ldv_spin_unlock_112(spinlock_t *lock);


#line 447 
static void ldv_spin_unlock_114(spinlock_t *lock);


#line 451 
static void ldv_spin_unlock_116(spinlock_t *lock);


#line 455 
static void ldv_spin_unlock_118(spinlock_t *lock);


#line 459 
static void ldv_spin_unlock_120(spinlock_t *lock);


#line 463 
static void ldv_spin_unlock_122(spinlock_t *lock);


#line 464  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh(spinlock_t *lock)
{
  
#line 466 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 467 
  return;
}


#line 492 
static void ldv_spin_unlock_bh_73(spinlock_t *lock);


#line 496 
static void ldv_spin_unlock_bh_75(spinlock_t *lock);


#line 500 
static void ldv_spin_unlock_bh_77(spinlock_t *lock);


#line 504 
static void ldv_spin_unlock_bh_86(spinlock_t *lock);


#line 508 
static void ldv_spin_unlock_bh_87(spinlock_t *lock);


#line 512 
static void ldv_spin_unlock_bh_105(spinlock_t *lock);


#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_mutex_lock_90(struct mutex *ldv_func_arg1);


#line 43 
void ldv_mutex_model_lock(struct mutex *, char *);


#line 44 
int ldv_mutex_model_is_locked(struct mutex *, char *);


#line 45 
void ldv_mutex_model_unlock(struct mutex *, char *);


#line 78 
void ldv_spin_model_lock(char *);


#line 79 
void ldv_spin_model_unlock(char *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 24 
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 284 
unsigned int jiffies_to_msecs(unsigned long const);


#line 292 
unsigned long __msecs_to_jiffies(unsigned int const);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long _msecs_to_jiffies(unsigned int const m)
{
  unsigned long __retres;
  
#line 301 
  __retres = (unsigned long)(((long)m + 3L) / 4L);
  
#line 301 
  return __retres;
}


#line 354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long msecs_to_jiffies(unsigned int const m)
{
  unsigned long __retres;
  
#line 356 
  if (0 != 0) {
    unsigned long tmp;
    
#line 357 
    if ((int)m < 0) {
      
#line 358 
      __retres = 4611686018427387902UL;
      
#line 358 
      goto return_label;
    }
    else ;
    
#line 359 
    tmp = _msecs_to_jiffies(m);
    
#line 359 
    __retres = tmp;
    
#line 359 
    goto return_label;
  }
  else {
    unsigned long tmp_0;
    
#line 361 
    tmp_0 = __msecs_to_jiffies(m);
    
#line 361 
    __retres = tmp_0;
    
#line 361 
    goto return_label;
  }
  return_label: 
#line 356 
                return __retres;
}


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
void __init_waitqueue_head(wait_queue_head_t *, char const *, struct lock_class_key *);


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/completion.h"
__inline static void init_completion(struct completion *x)
{
  
#line 75 
  x->done = 0U;
  {
    struct lock_class_key __key;
    
#line 76 
    __init_waitqueue_head(& x->wait,"&x->wait",& __key);
  }
  
#line 78 
  return;
}


#line 91 
void wait_for_completion(struct completion *);


#line 95 
unsigned long wait_for_completion_timeout(struct completion *, unsigned long);


#line 106 
void complete(struct completion *);


#line 268  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void __rcu_read_lock(void)
{
  
#line 270 
  __preempt_count_add(1);
  
#line 271 
  ldv_inline_asm();
  
#line 272 
  return;
}


#line 273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void __rcu_read_unlock(void)
{
  
#line 275 
  ldv_inline_asm();
  
#line 275 
  __preempt_count_sub(1);
  
#line 276 
  return;
}


#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcutree.h"
bool rcu_is_watching(void);


#line 447  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_lock_acquire(struct lockdep_map *map)
{
  __here_0: 
#line 449 
  ;
  
#line 449 
  ;
  
#line 449 
  lock_acquire(map,0U,0,2,0,(struct lockdep_map *)0,(unsigned long)((void *)0));
  
#line 451 
  return;
}


#line 452  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_lock_release(struct lockdep_map *map)
{
  __here_0: 
#line 454 
  ;
  
#line 454 
  ;
  
#line 454 
  lock_release(map,1,(unsigned long)((void *)0));
  
#line 456 
  return;
}


#line 457 
extern struct lockdep_map rcu_lock_map;


#line 461 
int debug_lockdep_rcu_enabled(void);


#line 843  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_read_lock(void)
{
  
#line 845 
  __rcu_read_lock();
  
#line 847 
  rcu_lock_acquire(& rcu_lock_map);
  {
    bool __warned;
    int tmp;
    
#line 848 
    tmp = debug_lockdep_rcu_enabled();
    
#line 848 
    if (tmp != 0) {
      
#line 848 
      if (! __warned) {
        int tmp_1;
        bool tmp_0;
        
#line 848 
        tmp_0 = rcu_is_watching();
        
#line 848 
        if (tmp_0) 
#line 848 
                   tmp_1 = 0; else 
#line 848 
                                   tmp_1 = 1;
        
#line 848 
        if (tmp_1) {
          
#line 848 
          __warned = (_Bool)1;
          
#line 848 
          lockdep_rcu_suspicious("include/linux/rcupdate.h",849,"rcu_read_lock() used illegally while idle");
        }
        else ;
      }
      else ;
    }
    else ;
  }
  
#line 851 
  return;
}


#line 897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_read_unlock(void)
{
  {
    bool __warned;
    int tmp;
    
#line 899 
    tmp = debug_lockdep_rcu_enabled();
    
#line 899 
    if (tmp != 0) {
      
#line 899 
      if (! __warned) {
        int tmp_1;
        bool tmp_0;
        
#line 899 
        tmp_0 = rcu_is_watching();
        
#line 899 
        if (tmp_0) 
#line 899 
                   tmp_1 = 0; else 
#line 899 
                                   tmp_1 = 1;
        
#line 899 
        if (tmp_1) {
          
#line 899 
          __warned = (_Bool)1;
          
#line 899 
          lockdep_rcu_suspicious("include/linux/rcupdate.h",900,"rcu_read_unlock() used illegally while idle");
        }
        else ;
      }
      else ;
    }
    else ;
  }
  
#line 902 
  __rcu_read_unlock();
  
#line 903 
  rcu_lock_release(& rcu_lock_map);
  
#line 904 
  return;
}


#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
void __init_work(struct work_struct *, int);


#line 444 
bool cancel_work_sync(struct work_struct *);


#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
void __mutex_init(struct mutex *, char const *, struct lock_class_key *);


#line 141 
static int ldv_mutex_is_locked_103(struct mutex *lock);


#line 193 
static void ldv_mutex_unlock_91(struct mutex *ldv_func_arg1);


#line 197 
static void ldv_mutex_unlock_92(struct mutex *ldv_func_arg1);


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val, void volatile *addr)
{
  
#line 68 
  ldv_inline_asm();
  
#line 69 
  return;
}


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/iomap.h"
unsigned int ioread32(void *);


#line 37 
void iowrite32(u32, void *);


#line 76 
void pci_iounmap(struct pci_dev *, void *);


#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci_iomap.h"
void *pci_iomap(struct pci_dev *, int, unsigned long);


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static int ldv_request_irq_108(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 145 
static int ldv_request_irq_123(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 157 
static void ldv_free_irq_109(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 161 
static void ldv_free_irq_110(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 165 
static void ldv_free_irq_124(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 169 
static void ldv_free_irq_125(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
__inline static void tasklet_unlock_wait(struct tasklet_struct *t)
{
  int tmp;
  
#line 521 
  goto ldv_16551;
  ldv_16550: 
#line 522 
  ;
  
#line 523 
  ldv_inline_asm();
  ldv_16551: 
#line 524 
  ;
  
#line 521 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& t->state));
  
#line 521 
  if (tmp != 0) 
#line 523 
                goto ldv_16550; else 
#line 526 
                                     goto ldv_16552;
  ldv_16552: 
#line 527 
  ;
  
#line 528 
  return;
}


#line 540 
static void ldv_tasklet_schedule_101(struct tasklet_struct *t);


#line 544 
static void ldv_tasklet_schedule_102(struct tasklet_struct *t);


#line 548 
static void ldv_tasklet_schedule_106(struct tasklet_struct *t);


#line 552 
static void ldv_tasklet_schedule_107(struct tasklet_struct *t);


#line 576  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
__inline static void tasklet_disable_nosync(struct tasklet_struct *t)
{
  
#line 578 
  atomic_inc(& t->count);
  
#line 579 
  ldv_inline_asm();
  
#line 580 
  return;
}


#line 582  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
__inline static void tasklet_disable(struct tasklet_struct *t)
{
  
#line 584 
  tasklet_disable_nosync(t);
  
#line 585 
  tasklet_unlock_wait(t);
  
#line 586 
  ldv_inline_asm();
  
#line 587 
  return;
}


#line 589  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
__inline static void tasklet_enable(struct tasklet_struct *t)
{
  
#line 591 
  ldv_inline_asm();
  
#line 592 
  atomic_dec(& t->count);
  
#line 593 
  return;
}


#line 595 
void tasklet_kill(struct tasklet_struct *);


#line 601 
static void ldv_tasklet_init_126(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3);


#line 605 
static void ldv_tasklet_init_127(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 2903  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
int _cond_resched(void);


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 1006 
void device_release_driver(struct device *);


#line 1074 
void dev_printk(char const *, struct device const *, char const * , ...);


#line 1083 
void dev_err(struct device const *, char const * , ...);


#line 1085 
void dev_warn(struct device const *, char const * , ...);


#line 1087 
void dev_notice(struct device const *, char const * , ...);


#line 1089 
void _dev_info(struct device const *, char const * , ...);


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 418 
static void *kmalloc(size_t size, gfp_t flags);


#line 542 
static void *kcalloc(size_t n, size_t size, gfp_t flags);


#line 581 
static void *kzalloc(size_t size, gfp_t flags);


#line 951  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
int pci_enable_device(struct pci_dev *);


#line 968 
void pci_disable_device(struct pci_dev *);


#line 971 
void pci_set_master(struct pci_dev *);


#line 1094 
int pci_request_regions(struct pci_dev *, char const *);


#line 1096 
void pci_release_regions(struct pci_dev *);


#line 1146 
static int ldv___pci_register_driver_131(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3);


#line 1158 
static void ldv_pci_unregister_driver_132(struct pci_driver *ldv_func_arg1);


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 42 
void debug_dma_mapping_error(struct device *, dma_addr_t);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
{
  int __retres;
  
#line 49 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 50 
  debug_dma_mapping_error(dev,dma_addr);
  
#line 51 
  if (ops->mapping_error != (int (*)(struct device *, dma_addr_t ))0) {
    int tmp_0;
    
#line 52 
    tmp_0 = (*(ops->mapping_error))(dev,dma_addr);
    
#line 52 
    __retres = tmp_0;
    
#line 52 
    goto return_label;
  }
  else ;
  
#line 54 
  __retres = dma_addr == 0ULL;
  return_label: 
#line 54 
                return __retres;
}


#line 131 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static void *dma_zalloc_coherent(struct device *dev, size_t size, dma_addr_t *dma_handle, gfp_t flag)
{
  
#line 186 
  void *ret = dma_alloc_attrs(dev,size,dma_handle,flag | 32768U,(struct dma_attrs *)0);
  
#line 188 
  return ret;
}


#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void *pci_alloc_consistent(struct pci_dev *hwdev, size_t size, dma_addr_t *dma_handle)
{
  void *tmp_0;
  struct device *tmp;
  
#line 19 
  ;
  
#line 19 
  ;
  
#line 19 
  if (hwdev != (struct pci_dev *)0) 
#line 19 
                                    tmp = & hwdev->dev; else 
#line 19 
                                                             tmp = (struct device *)0;
  
#line 19 
  tmp_0 = dma_alloc_attrs(tmp,size,dma_handle,32U,(struct dma_attrs *)0);
  
#line 19 
  return tmp_0;
}


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void *pci_zalloc_consistent(struct pci_dev *hwdev, size_t size, dma_addr_t *dma_handle)
{
  void *tmp_0;
  struct device *tmp;
  
#line 26 
  ;
  
#line 26 
  ;
  
#line 26 
  if (hwdev != (struct pci_dev *)0) 
#line 26 
                                    tmp = & hwdev->dev; else 
#line 26 
                                                             tmp = (struct device *)0;
  
#line 26 
  tmp_0 = dma_zalloc_coherent(tmp,size,dma_handle,32U);
  
#line 26 
  return tmp_0;
}


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_free_consistent(struct pci_dev *hwdev, size_t size, void *vaddr, dma_addr_t dma_handle)
{
  struct device *tmp;
  
#line 34 
  ;
  
#line 34 
  ;
  
#line 34 
  ;
  
#line 34 
  if (hwdev != (struct pci_dev *)0) 
#line 34 
                                    tmp = & hwdev->dev; else 
#line 34 
                                                             tmp = (struct device *)0;
  
#line 34 
  dma_free_attrs(tmp,size,vaddr,dma_handle,(struct dma_attrs *)0);
  
#line 35 
  return;
}


#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static dma_addr_t pci_map_single(struct pci_dev *hwdev, void *ptr, size_t size, int direction)
{
  dma_addr_t tmp_0;
  struct device *tmp;
  
#line 40 
  ;
  
#line 40 
  ;
  
#line 40 
  ;
  
#line 40 
  if (hwdev != (struct pci_dev *)0) 
#line 40 
                                    tmp = & hwdev->dev; else 
#line 40 
                                                             tmp = (struct device *)0;
  
#line 40 
  tmp_0 = dma_map_single_attrs(tmp,ptr,size,(enum dma_data_direction)direction,(struct dma_attrs *)0);
  
#line 40 
  return tmp_0;
}


#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_unmap_single(struct pci_dev *hwdev, dma_addr_t dma_addr, size_t size, int direction)
{
  struct device *tmp;
  
#line 47 
  ;
  
#line 47 
  ;
  
#line 47 
  ;
  
#line 47 
  if (hwdev != (struct pci_dev *)0) 
#line 47 
                                    tmp = & hwdev->dev; else 
#line 47 
                                                             tmp = (struct device *)0;
  
#line 47 
  dma_unmap_single_attrs(tmp,dma_addr,size,(enum dma_data_direction)direction,(struct dma_attrs *)0);
  
#line 48 
  return;
}


#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_dma_mapping_error(struct pci_dev *pdev, dma_addr_t dma_addr)
{
  int tmp;
  
#line 109 
  tmp = dma_mapping_error(& pdev->dev,dma_addr);
  
#line 109 
  return tmp;
}


#line 1471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void *pci_get_drvdata(struct pci_dev *pdev)
{
  void *tmp;
  
#line 1473 
  tmp = dev_get_drvdata((struct device const *)(& pdev->dev));
  
#line 1473 
  return tmp;
}


#line 1476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void pci_set_drvdata(struct pci_dev *pdev, void *data)
{
  
#line 1478 
  dev_set_drvdata(& pdev->dev,data);
  
#line 1479 
  return;
}


#line 1484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static char const *pci_name(struct pci_dev const *pdev)
{
  char const *tmp;
  
#line 1486 
  tmp = dev_name(& pdev->dev);
  
#line 1486 
  return tmp;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __const_udelay(unsigned long);


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
void msleep(unsigned int);


#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
int net_ratelimit(void);


#line 772  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
void kfree_skb(struct sk_buff *);


#line 775 
void consume_skb(struct sk_buff *);


#line 843 
struct sk_buff *skb_copy(struct sk_buff const *, gfp_t);


#line 852 
int pskb_expand_head(struct sk_buff *, int, int, gfp_t);


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1698 
unsigned char *skb_push(struct sk_buff *, unsigned int);


#line 1706 
unsigned char *skb_pull(struct sk_buff *, unsigned int);


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2159 
  tmp = __netdev_alloc_skb(dev,length,32U);
  
#line 2159 
  return tmp;
}


#line 2170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *dev_alloc_skb(unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2172 
  tmp = netdev_alloc_skb((struct net_device *)0,length);
  
#line 2172 
  return tmp;
}


#line 3295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static u16 skb_get_queue_mapping(struct sk_buff const *skb)
{
  u16 __retres;
  
#line 3297 
  __retres = skb->queue_mapping;
  
#line 3297 
  return __retres;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 114 
  u32 a = *((u32 const *)addr);
  
#line 121 
  __retres = (_Bool)((a & 1U) != 0U);
  
#line 121 
  return __retres;
}


#line 244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_zero_addr(u8 *addr)
{
  
#line 246 
  memset((void *)addr,0,6UL);
  
#line 247 
  return;
}


#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool ether_addr_equal_64bits(u8 const *addr1, u8 const *addr2)
{
  bool __retres;
  
#line 343 
  u64 fold = *((u64 const *)addr1) ^ *((u64 const *)addr2);
  
#line 348 
  __retres = (_Bool)(fold << 16 == 0ULL);
  
#line 348 
  return __retres;
}


#line 271  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_has_a4(__le16 fc)
{
  int __retres;
  
#line 273 
  __le16 tmp = (unsigned short)768U;
  
#line 274 
  __retres = ((int)fc & (int)tmp) == (int)tmp;
  
#line 274 
  return __retres;
}


#line 317  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_has_protected(__le16 fc)
{
  int __retres;
  
#line 319 
  __retres = ((int)fc & 16384) != 0;
  
#line 319 
  return __retres;
}


#line 335  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_mgmt(__le16 fc)
{
  int __retres;
  
#line 337 
  __retres = ((int)fc & 12) == 0;
  
#line 337 
  return __retres;
}


#line 345  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_ctl(__le16 fc)
{
  int __retres;
  
#line 347 
  __retres = ((int)fc & 12) == 4;
  
#line 347 
  return __retres;
}


#line 355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_data(__le16 fc)
{
  int __retres;
  
#line 357 
  __retres = ((int)fc & 12) == 8;
  
#line 357 
  return __retres;
}


#line 365  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_data_qos(__le16 fc)
{
  int __retres;
  
#line 371 
  __retres = ((int)fc & 140) == 136;
  
#line 371 
  return __retres;
}


#line 453  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_beacon(__le16 fc)
{
  int __retres;
  
#line 455 
  __retres = ((int)fc & 252) == 128;
  
#line 455 
  return __retres;
}


#line 483  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_auth(__le16 fc)
{
  int __retres;
  
#line 485 
  __retres = ((int)fc & 252) == 176;
  
#line 485 
  return __retres;
}


#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static int ieee80211_is_action(__le16 fc)
{
  int __retres;
  
#line 505 
  __retres = ((int)fc & 252) == 208;
  
#line 505 
  return __retres;
}


#line 2329  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
__inline static u8 *ieee80211_get_qos_ctl(struct ieee80211_hdr *hdr)
{
  u8 *__retres;
  int tmp;
  
#line 2331 
  tmp = ieee80211_has_a4((unsigned short)((int)hdr->frame_control));
  
#line 2331 
  if (tmp != 0) {
    
#line 2332 
    __retres = (u8 *)hdr + 30U;
    
#line 2332 
    goto return_label;
  }
  else {
    
#line 2334 
    __retres = (u8 *)hdr + 24U;
    
#line 2334 
    goto return_label;
  }
  return_label: 
#line 2331 
                return __retres;
}


#line 411  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
__inline static enum nl80211_channel_type cfg80211_get_chandef_type(struct cfg80211_chan_def const *chandef)
{
  enum nl80211_channel_type __retres;
  
#line 413 
  switch ((unsigned int)chandef->width) {
    case (unsigned int)0: 
#line 414 
    ;
    
#line 415 
    __retres = NL80211_CHAN_NO_HT;
    
#line 415 
    goto return_label;
    case (unsigned int)1: 
#line 416 
    ;
    
#line 417 
    __retres = NL80211_CHAN_HT20;
    
#line 417 
    goto return_label;
    case (unsigned int)2: 
#line 418 
    ;
    
#line 419 
    if (chandef->center_freq1 > (unsigned int)(chandef->chan)->center_freq) {
      
#line 420 
      __retres = NL80211_CHAN_HT40PLUS;
      
#line 420 
      goto return_label;
    }
    else ;
    
#line 421 
    __retres = NL80211_CHAN_HT40MINUS;
    
#line 421 
    goto return_label;
    default: 
#line 422 
    ;
    {
      
#line 423 
      int __ret_warn_on = 1;
      
#line 423 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 423 
                                            warn_slowpath_null("include/net/cfg80211.h",423); else ;
      
#line 423 
      long tmp = (long)(__ret_warn_on != 0);
    }
    
#line 424 
    __retres = NL80211_CHAN_NO_HT;
    
#line 424 
    goto return_label;
  }
  return_label: 
#line 413 
                return __retres;
}


#line 3281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
__inline static void set_wiphy_dev(struct wiphy *wiphy, struct device *dev)
{
  
#line 3283 
  wiphy->dev.parent = dev;
  
#line 3284 
  return;
}


#line 3528 
int ieee80211_channel_to_frequency(int, enum ieee80211_band);


#line 3689 
unsigned int ieee80211_hdrlen(__le16);


#line 3775 
u8 const *cfg80211_find_ie(u8, u8 const *, int);


#line 918  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static struct ieee80211_tx_info *IEEE80211_SKB_CB(struct sk_buff *skb)
{
  struct ieee80211_tx_info *__retres;
  
#line 920 
  __retres = (struct ieee80211_tx_info *)(& skb->cb);
  
#line 920 
  return __retres;
}


#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static struct ieee80211_rx_status *IEEE80211_SKB_RXCB(struct sk_buff *skb)
{
  struct ieee80211_rx_status *__retres;
  
#line 925 
  __retres = (struct ieee80211_rx_status *)(& skb->cb);
  
#line 925 
  return __retres;
}


#line 947 
void __compiletime_assert_948(void);


#line 949 
void __compiletime_assert_950(void);


#line 951 
void __compiletime_assert_951(void);


#line 956 
void __compiletime_assert_957(void);


#line 943  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static void ieee80211_tx_info_clear_status(struct ieee80211_tx_info *info)
{
  int i;
  {
    
#line 947 
    bool __cond = (_Bool)0;
    
#line 947 
    if ((int)__cond != 0) 
#line 947 
                          __compiletime_assert_948(); else ;
  }
  {
    
#line 949 
    bool __cond_0 = (_Bool)0;
    
#line 949 
    if ((int)__cond_0 != 0) 
#line 949 
                            __compiletime_assert_950(); else ;
  }
  {
    
#line 951 
    bool __cond_1 = (_Bool)0;
    
#line 951 
    if ((int)__cond_1 != 0) 
#line 951 
                            __compiletime_assert_951(); else ;
  }
  
#line 953 
  i = 0;
  
#line 953 
  goto ldv_50663;
  ldv_50662: 
#line 954 
  ;
  
#line 954 
  info->__anonCompField_ieee80211_tx_info_100.status.rates[i].count = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))))0U;
  
#line 953 
  i += 1;
  ldv_50663: 
#line 954 
  ;
  
#line 953 
  if (i <= 3) 
#line 955 
              goto ldv_50662; else 
#line 958 
                                   goto ldv_50664;
  ldv_50664: 
#line 959 
  ;
  {
    
#line 956 
    bool __cond_2 = (_Bool)0;
    
#line 956 
    if ((int)__cond_2 != 0) 
#line 956 
                            __compiletime_assert_957(); else ;
  }
  
#line 958 
  memset((void *)(& info->__anonCompField_ieee80211_tx_info_100.status.ampdu_ack_len),0,24UL);
  
#line 959 
  return;
}


#line 2058  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static bool _ieee80211_hw_check(struct ieee80211_hw *hw, enum ieee80211_hw_flags flg)
{
  bool __retres;
  int tmp_1;
  
#line 2061 
  if (0 != 0) {
    int tmp;
    
#line 2061 
    tmp = constant_test_bit((long)flg,(unsigned long const volatile *)(& hw->flags));
    
#line 2061 
    tmp_1 = tmp != 0;
  }
  else {
    int tmp_0;
    
#line 2061 
    tmp_0 = variable_test_bit((long)flg,(unsigned long const volatile *)(& hw->flags));
    
#line 2061 
    tmp_1 = tmp_0 != 0;
  }
  
#line 2061 
  __retres = (_Bool)(tmp_1 != 0);
  
#line 2061 
  return __retres;
}


#line 2065  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static void _ieee80211_hw_set(struct ieee80211_hw *hw, enum ieee80211_hw_flags flg)
{
  
#line 2068 
  __set_bit((long)flg,(unsigned long volatile *)(& hw->flags));
  
#line 2069 
  return;
}


#line 2131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static void SET_IEEE80211_DEV(struct ieee80211_hw *hw, struct device *dev)
{
  
#line 2133 
  set_wiphy_dev(hw->wiphy,dev);
  
#line 2134 
  return;
}


#line 2142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static void SET_IEEE80211_PERM_ADDR(struct ieee80211_hw *hw, u8 *addr)
{
  
#line 2144 
  memcpy((void *)(& (hw->wiphy)->perm_addr),(void const *)addr,6UL);
  
#line 2145 
  return;
}


#line 3520 
static struct ieee80211_hw *ldv_ieee80211_alloc_hw_128(size_t priv_data_len, struct ieee80211_ops const *ops);


#line 3521 
int ieee80211_register_hw(struct ieee80211_hw *);


#line 3671 
void ieee80211_unregister_hw(struct ieee80211_hw *);


#line 3685 
static void ldv_ieee80211_free_hw_129(struct ieee80211_hw *ldv_func_arg1);


#line 3689 
static void ldv_ieee80211_free_hw_130(struct ieee80211_hw *ldv_func_arg1);


#line 3696 
void ieee80211_restart_hw(struct ieee80211_hw *);


#line 3749 
void ieee80211_rx_irqsafe(struct ieee80211_hw *, struct sk_buff *);


#line 3943 
void ieee80211_tx_status_irqsafe(struct ieee80211_hw *, struct sk_buff *);


#line 4020 
struct sk_buff *ieee80211_beacon_get_tim(struct ieee80211_hw *, struct ieee80211_vif *, u16 *, u16 *);


#line 4033  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/mac80211.h"
__inline static struct sk_buff *ieee80211_beacon_get(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  struct sk_buff *tmp;
  
#line 4036 
  tmp = ieee80211_beacon_get_tim(hw,vif,(u16 *)0U,(u16 *)0U);
  
#line 4036 
  return tmp;
}


#line 4495 
void ieee80211_stop_queues(struct ieee80211_hw *);


#line 4503 
void ieee80211_wake_queues(struct ieee80211_hw *);


#line 4666 
void ieee80211_queue_work(struct ieee80211_hw *, struct work_struct *);


#line 4694 
int ieee80211_start_tx_ba_session(struct ieee80211_sta *, u16, u16);


#line 4707 
void ieee80211_start_tx_ba_cb_irqsafe(struct ieee80211_vif *, u8 const *, u16);


#line 4721 
int ieee80211_stop_tx_ba_session(struct ieee80211_sta *, u16);


#line 4733 
void ieee80211_stop_tx_ba_cb_irqsafe(struct ieee80211_vif *, u8 const *, u16);


#line 4747 
struct ieee80211_sta *ieee80211_find_sta(struct ieee80211_vif *, u8 const *);


#line 4772 
struct ieee80211_sta *ieee80211_find_sta_by_ifaddr(struct ieee80211_hw *, u8 const *, u8 const *);


#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/firmware.h"
int request_firmware(struct firmware const **, char const *, struct device *);


#line 44 
int request_firmware_nowait(struct module *, bool, char const *, struct device *, gfp_t, void *, void (*)(struct firmware const *, void *));


#line 51 
void release_firmware(struct firmware const *);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static bool ap_mode_default;

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static struct ieee80211_channel const mwl8k_channels_24[14U] = {{.band = IEEE80211_BAND_2GHZ, .center_freq = (unsigned short)2412U, .hw_value = (unsigned short)1U, .flags = 0U, .max_antenna_gain = 0, .max_power = 0, .max_reg_power = 0, .beacon_found = (_Bool)0, .orig_flags = 0U, .orig_mag = 0, .orig_mpwr = 0, .dfs_state = 0, .dfs_state_entered = 0UL, .dfs_cac_ms = 0U}, {.band = IEEE80211_BAND_2GHZ, .center_freq = (unsigned short)2417U, .hw_value = (unsigned short)2U, .flags = 0U, .max_antenna_gain = 0, .max_power = 0, .max_reg_power = 0, .beacon_found = (_Bool)0, .orig_flags = 0U, .orig_mag = 0, .orig_mpwr = 0, .dfs_state = 0, .dfs_state_entered = 0UL, .dfs_cac_ms = 0U}, {.band = IEEE80211_BAND_2GHZ, .center_freq = (unsigned short)2422U, .hw_value = (unsigned short)3U, .flags = 0U, .max_antenna_gain = 0, .max_power = 0, .max_reg_power = 0, .beacon_found = (_Bool)0, .orig_flags = 0U, .orig_mag = 0, .orig_mpwr = 0, .dfs_state = 0, .dfs_state_entered = 0UL, .dfs_cac_ms = 0U}, {.band = IEEE80211_BAND_2GHZ, .center_freq = (unsigned short)2427U, .hw_value = (unsigned short)4U, .flags = 0U, .max_antenna_gain = 0, .max_power = 0, .max_reg_power = 0, .beacon_found = (_Bool)0, .orig_flags = 0U, .orig_mag = 0, .orig_mpwr = 0, .dfs_state = 0, .dfs_state_entered = 0UL, .dfs_cac_ms = 0U}, {.band = IEEE80211_BAND_2GHZ, .center_freq = (unsigned short)2432U, .hw_value = (unsigned short)5U, .flags = 0U, .max_antenna_gain = 0, .max_power = 0, .max_reg_power = 0, .beacon_found = (_Bool)0, .orig_flags = 0U, .orig_mag = 0, .orig_mpwr = 0, .dfs_state = 0, .dfs_state_entered = 0UL, .dfs_cac_ms = 0U}, {.band = IEEE80211_BAND_2GHZ, .center_freq = (unsigned short)2437U, .hw_value = (unsigned short)6U, .flags = 0U, .max_antenna_gain = 0, .max_power = 0, .max_reg_power = 0, .beacon_found = (_Bool)0, .orig_flags = 0U, .orig_mag = 0, .orig_mpwr = 0, .dfs_state = 0, .dfs_state_entered = 0UL, .dfs_cac_ms = 0U}, {.band = IEEE80211_BAND_2GHZ, .center_freq = (unsigned short)2442U, .hw_value = (unsigned short)7U, .flags = 0U, .max_antenna_gain = 0, .max_power = 0, .max_reg_power = 0, .beacon_found = (_Bool)0, .orig_flags = 0U, .orig_mag = 0, .orig_mpwr = 0, .dfs_state = 0, .dfs_state_entered = 0UL, .dfs_cac_ms = 0U}, {.band = IEEE80211_BAND_2GHZ, .center_freq = (unsigned short)2447U, .hw_value = (unsigned short)8U, .flags = 0U, .max_antenna_gain = 0, .max_power = 0, .max_reg_power = 0, .beacon_found = (_Bool)0, .orig_flags = 0U, .orig_mag = 0, .orig_mpwr = 0, .dfs_state = 0, .dfs_state_entered = 0UL, .dfs_cac_ms = 0U}, {.band = IEEE80211_BAND_2GHZ, .center_freq = (unsigned short)2452U, .hw_value = (unsigned short)9U, .flags = 0U, .max_antenna_gain = 0, .max_power = 0, .max_reg_power = 0, .beacon_found = (_Bool)0, .orig_flags = 0U, .orig_mag = 0, .orig_mpwr = 0, .dfs_state = 0, .dfs_state_entered = 0UL, .dfs_cac_ms = 0U}, {.band = IEEE80211_BAND_2GHZ, .center_freq = (unsigned short)2457U, .hw_value = (unsigned short)10U, .flags = 0U, .max_antenna_gain = 0, .max_power = 0, .max_reg_power = 0, .beacon_found = (_Bool)0, .orig_flags = 0U, .orig_mag = 0, .orig_mpwr = 0, .dfs_state = 0, .dfs_state_entered = 0UL, .dfs_cac_ms = 0U}, {.band = IEEE80211_BAND_2GHZ, .center_freq = (unsigned short)2462U, .hw_value = (unsigned short)11U, .flags = 0U, .max_antenna_gain = 0, .max_power = 0, .max_reg_power = 0, .beacon_found = (_Bool)0, .orig_flags = 0U, .orig_mag = 0, .orig_mpwr = 0, .dfs_state = 0, .dfs_state_entered = 0UL, .dfs_cac_ms = 0U}, {.band = IEEE80211_BAND_2GHZ, .center_freq = (unsigned short)2467U, .hw_value = (unsigned short)12U, .flags = 0U, .max_antenna_gain = 0, .max_power = 0, .max_reg_power = 0, .beacon_found = (_Bool)0, .orig_flags = 0U, .orig_mag = 0, .orig_mpwr = 0, .dfs_state = 0, .dfs_state_entered = 0UL, .dfs_cac_ms = 0U}, {.band = IEEE80211_BAND_2GHZ, .center_freq = (unsigned short)2472U, .hw_value = (unsigned short)13U, .flags = 0U, .max_antenna_gain = 0, .max_power = 0, .max_reg_power = 0, .beacon_found = (_Bool)0, .orig_flags = 0U, .orig_mag = 0, .orig_mpwr = 0, .dfs_state = 0, .dfs_state_entered = 0UL, .dfs_cac_ms = 0U}, {.band = IEEE80211_BAND_2GHZ, .center_freq = (unsigned short)2484U, .hw_value = (unsigned short)14U, .flags = 0U, .max_antenna_gain = 0, .max_power = 0, .max_reg_power = 0, .beacon_found = (_Bool)0, .orig_flags = 0U, .orig_mag = 0, .orig_mpwr = 0, .dfs_state = 0, .dfs_state_entered = 0UL, .dfs_cac_ms = 0U}};

#line 365  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static struct ieee80211_rate const mwl8k_rates_24[13U] = {{.flags = 0U, .bitrate = (unsigned short)10U, .hw_value = (unsigned short)2U, .hw_value_short = (unsigned short)0}, {.flags = 0U, .bitrate = (unsigned short)20U, .hw_value = (unsigned short)4U, .hw_value_short = (unsigned short)0}, {.flags = 0U, .bitrate = (unsigned short)55U, .hw_value = (unsigned short)11U, .hw_value_short = (unsigned short)0}, {.flags = 0U, .bitrate = (unsigned short)110U, .hw_value = (unsigned short)22U, .hw_value_short = (unsigned short)0}, {.flags = 0U, .bitrate = (unsigned short)220U, .hw_value = (unsigned short)44U, .hw_value_short = (unsigned short)0}, {.flags = 0U, .bitrate = (unsigned short)60U, .hw_value = (unsigned short)12U, .hw_value_short = (unsigned short)0}, {.flags = 0U, .bitrate = (unsigned short)90U, .hw_value = (unsigned short)18U, .hw_value_short = (unsigned short)0}, {.flags = 0U, .bitrate = (unsigned short)120U, .hw_value = (unsigned short)24U, .hw_value_short = (unsigned short)0}, {.flags = 0U, .bitrate = (unsigned short)180U, .hw_value = (unsigned short)36U, .hw_value_short = (unsigned short)0}, {.flags = 0U, .bitrate = (unsigned short)240U, .hw_value = (unsigned short)48U, .hw_value_short = (unsigned short)0}, {.flags = 0U, .bitrate = (unsigned short)360U, .hw_value = (unsigned short)72U, .hw_value_short = (unsigned short)0}, {.flags = 0U, .bitrate = (unsigned short)480U, .hw_value = (unsigned short)96U, .hw_value_short = (unsigned short)0}, {.flags = 0U, .bitrate = (unsigned short)540U, .hw_value = (unsigned short)108U, .hw_value_short = (unsigned short)0}};

#line 381  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static struct ieee80211_channel const mwl8k_channels_50[4U] = {{.band = IEEE80211_BAND_5GHZ, .center_freq = (unsigned short)5180U, .hw_value = (unsigned short)36U, .flags = 0U, .max_antenna_gain = 0, .max_power = 0, .max_reg_power = 0, .beacon_found = (_Bool)0, .orig_flags = 0U, .orig_mag = 0, .orig_mpwr = 0, .dfs_state = 0, .dfs_state_entered = 0UL, .dfs_cac_ms = 0U}, {.band = IEEE80211_BAND_5GHZ, .center_freq = (unsigned short)5200U, .hw_value = (unsigned short)40U, .flags = 0U, .max_antenna_gain = 0, .max_power = 0, .max_reg_power = 0, .beacon_found = (_Bool)0, .orig_flags = 0U, .orig_mag = 0, .orig_mpwr = 0, .dfs_state = 0, .dfs_state_entered = 0UL, .dfs_cac_ms = 0U}, {.band = IEEE80211_BAND_5GHZ, .center_freq = (unsigned short)5220U, .hw_value = (unsigned short)44U, .flags = 0U, .max_antenna_gain = 0, .max_power = 0, .max_reg_power = 0, .beacon_found = (_Bool)0, .orig_flags = 0U, .orig_mag = 0, .orig_mpwr = 0, .dfs_state = 0, .dfs_state_entered = 0UL, .dfs_cac_ms = 0U}, {.band = IEEE80211_BAND_5GHZ, .center_freq = (unsigned short)5240U, .hw_value = (unsigned short)48U, .flags = 0U, .max_antenna_gain = 0, .max_power = 0, .max_reg_power = 0, .beacon_found = (_Bool)0, .orig_flags = 0U, .orig_mag = 0, .orig_mpwr = 0, .dfs_state = 0, .dfs_state_entered = 0UL, .dfs_cac_ms = 0U}};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static struct ieee80211_rate const mwl8k_rates_50[8U] = {{.flags = 0U, .bitrate = (unsigned short)60U, .hw_value = (unsigned short)12U, .hw_value_short = (unsigned short)0}, {.flags = 0U, .bitrate = (unsigned short)90U, .hw_value = (unsigned short)18U, .hw_value_short = (unsigned short)0}, {.flags = 0U, .bitrate = (unsigned short)120U, .hw_value = (unsigned short)24U, .hw_value_short = (unsigned short)0}, {.flags = 0U, .bitrate = (unsigned short)180U, .hw_value = (unsigned short)36U, .hw_value_short = (unsigned short)0}, {.flags = 0U, .bitrate = (unsigned short)240U, .hw_value = (unsigned short)48U, .hw_value_short = (unsigned short)0}, {.flags = 0U, .bitrate = (unsigned short)360U, .hw_value = (unsigned short)72U, .hw_value_short = (unsigned short)0}, {.flags = 0U, .bitrate = (unsigned short)480U, .hw_value = (unsigned short)96U, .hw_value_short = (unsigned short)0}, {.flags = 0U, .bitrate = (unsigned short)540U, .hw_value = (unsigned short)108U, .hw_value_short = (unsigned short)0}};

#line 439  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static char const *mwl8k_cmd_name(__le16 cmd, char *buf, int bufsize)
{
  char const *__retres;
  
#line 441 
  u16 command = cmd;
  
#line 447 
  switch ((int)command & -32769) {
    case 1: 
#line 448 
    ;
    
#line 448 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"CODE_DNLD");
    
#line 448 
    __retres = (char const *)buf;
    
#line 448 
    goto return_label;
    case 3: 
#line 449 
    ;
    
#line 449 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"GET_HW_SPEC");
    
#line 449 
    __retres = (char const *)buf;
    
#line 449 
    goto return_label;
    case 4: 
#line 450 
    ;
    
#line 450 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"SET_HW_SPEC");
    
#line 450 
    __retres = (char const *)buf;
    
#line 450 
    goto return_label;
    case 16: 
#line 451 
    ;
    
#line 451 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"MAC_MULTICAST_ADR");
    
#line 451 
    __retres = (char const *)buf;
    
#line 451 
    goto return_label;
    case 20: 
#line 452 
    ;
    
#line 452 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"GET_STAT");
    
#line 452 
    __retres = (char const *)buf;
    
#line 452 
    goto return_label;
    case 28: 
#line 453 
    ;
    
#line 453 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"RADIO_CONTROL");
    
#line 453 
    __retres = (char const *)buf;
    
#line 453 
    goto return_label;
    case 30: 
#line 454 
    ;
    
#line 454 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"RF_TX_POWER");
    
#line 454 
    __retres = (char const *)buf;
    
#line 454 
    goto return_label;
    case 31: 
#line 455 
    ;
    
#line 455 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"TX_POWER");
    
#line 455 
    __retres = (char const *)buf;
    
#line 455 
    goto return_label;
    case 32: 
#line 456 
    ;
    
#line 456 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"RF_ANTENNA");
    
#line 456 
    __retres = (char const *)buf;
    
#line 456 
    goto return_label;
    case 256: 
#line 457 
    ;
    
#line 457 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"SET_BEACON");
    
#line 457 
    __retres = (char const *)buf;
    
#line 457 
    goto return_label;
    case 263: 
#line 458 
    ;
    
#line 458 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"SET_PRE_SCAN");
    
#line 458 
    __retres = (char const *)buf;
    
#line 458 
    goto return_label;
    case 264: 
#line 459 
    ;
    
#line 459 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"SET_POST_SCAN");
    
#line 459 
    __retres = (char const *)buf;
    
#line 459 
    goto return_label;
    case 266: 
#line 460 
    ;
    
#line 460 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"SET_RF_CHANNEL");
    
#line 460 
    __retres = (char const *)buf;
    
#line 460 
    goto return_label;
    case 269: 
#line 461 
    ;
    
#line 461 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"SET_AID");
    
#line 461 
    __retres = (char const *)buf;
    
#line 461 
    goto return_label;
    case 272: 
#line 462 
    ;
    
#line 462 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"SET_RATE");
    
#line 462 
    __retres = (char const *)buf;
    
#line 462 
    goto return_label;
    case 273: 
#line 463 
    ;
    
#line 463 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"SET_FINALIZE_JOIN");
    
#line 463 
    __retres = (char const *)buf;
    
#line 463 
    goto return_label;
    case 275: 
#line 464 
    ;
    
#line 464 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"RTS_THRESHOLD");
    
#line 464 
    __retres = (char const *)buf;
    
#line 464 
    goto return_label;
    case 276: 
#line 465 
    ;
    
#line 465 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"SET_SLOT");
    
#line 465 
    __retres = (char const *)buf;
    
#line 465 
    goto return_label;
    case 277: 
#line 466 
    ;
    
#line 466 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"SET_EDCA_PARAMS");
    
#line 466 
    __retres = (char const *)buf;
    
#line 466 
    goto return_label;
    case 291: 
#line 467 
    ;
    
#line 467 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"SET_WMM_MODE");
    
#line 467 
    __retres = (char const *)buf;
    
#line 467 
    goto return_label;
    case 293: 
#line 468 
    ;
    
#line 468 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"MIMO_CONFIG");
    
#line 468 
    __retres = (char const *)buf;
    
#line 468 
    goto return_label;
    case 294: 
#line 469 
    ;
    
#line 469 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"USE_FIXED_RATE");
    
#line 469 
    __retres = (char const *)buf;
    
#line 469 
    goto return_label;
    case 336: 
#line 470 
    ;
    
#line 470 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"ENABLE_SNIFFER");
    
#line 470 
    __retres = (char const *)buf;
    
#line 470 
    goto return_label;
    case 514: 
#line 471 
    ;
    
#line 471 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"SET_MAC_ADDR");
    
#line 471 
    __retres = (char const *)buf;
    
#line 471 
    goto return_label;
    case 515: 
#line 472 
    ;
    
#line 472 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"SET_RATEADAPT_MODE");
    
#line 472 
    __retres = (char const *)buf;
    
#line 472 
    goto return_label;
    case 4352: 
#line 473 
    ;
    
#line 473 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"BSS_START");
    
#line 473 
    __retres = (char const *)buf;
    
#line 473 
    goto return_label;
    case 4369: 
#line 474 
    ;
    
#line 474 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"SET_NEW_STN");
    
#line 474 
    __retres = (char const *)buf;
    
#line 474 
    goto return_label;
    case 4386: 
#line 475 
    ;
    
#line 475 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"UPDATE_ENCRYPTION");
    
#line 475 
    __retres = (char const *)buf;
    
#line 475 
    goto return_label;
    case 4387: 
#line 476 
    ;
    
#line 476 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"UPDATE_STADB");
    
#line 476 
    __retres = (char const *)buf;
    
#line 476 
    goto return_label;
    case 4389: 
#line 477 
    ;
    
#line 477 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"BASTREAM");
    
#line 477 
    __retres = (char const *)buf;
    
#line 477 
    goto return_label;
    case 517: 
#line 478 
    ;
    
#line 478 
    snprintf(buf,(unsigned long)bufsize,"%s",(char *)"GET_WATCHDOG_BITMAP");
    
#line 478 
    __retres = (char const *)buf;
    
#line 478 
    goto return_label;
    default: 
#line 479 
    ;
    
#line 480 
    snprintf(buf,(unsigned long)bufsize,"0x%x",(int)cmd);
  }
  
#line 484 
  __retres = (char const *)buf;
  return_label: 
#line 484 
                return __retres;
}


#line 488  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_hw_reset(struct mwl8k_priv *priv)
{
  
#line 490 
  iowrite32(32768U,priv->regs + 3096U);
  
#line 492 
  iowrite32(32768U,priv->regs + 3096U);
  
#line 494 
  msleep(20U);
  
#line 495 
  return;
}


#line 498  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_release_fw(struct firmware const **fw)
{
  
#line 500 
  if (*fw == (struct firmware const *)0) 
#line 501 
                                         goto return_label; else ;
  
#line 502 
  release_firmware(*fw);
  
#line 503 
  *fw = (struct firmware const *)0;
  return_label: 
#line 504 
                return;
}


#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_release_firmware(struct mwl8k_priv *priv)
{
  
#line 508 
  mwl8k_release_fw(& priv->fw_ucode);
  
#line 509 
  mwl8k_release_fw(& priv->fw_helper);
  
#line 510 
  return;
}


#line 513 
static void mwl8k_fw_state_machine(struct firmware const *fw, void *context);


#line 522  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_request_fw(struct mwl8k_priv *priv, char const *fname, struct firmware const **fw, bool nowait)
{
  int __retres;
  
#line 527 
  if (*fw != (struct firmware const *)0) 
#line 528 
                                         mwl8k_release_fw(fw); else ;
  
#line 530 
  if ((int)nowait != 0) {
    int tmp;
    
#line 531 
    tmp = request_firmware_nowait(& __this_module,(_Bool)1,fname,& (priv->pdev)->dev,208U,(void *)priv,& mwl8k_fw_state_machine);
    
#line 531 
    __retres = tmp;
    
#line 531 
    goto return_label;
  }
  else {
    int tmp_0;
    
#line 535 
    tmp_0 = request_firmware(fw,fname,& (priv->pdev)->dev);
    
#line 535 
    __retres = tmp_0;
    
#line 535 
    goto return_label;
  }
  return_label: 
#line 530 
                return __retres;
}


#line 538  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_request_firmware(struct mwl8k_priv *priv, char *fw_image, bool nowait)
{
  int __retres;
  int rc;
  
#line 541 
  struct mwl8k_device_info *di = priv->device_info;
  
#line 544 
  if (di->helper_image != (char *)0) {
    
#line 545 
    if ((int)nowait != 0) 
#line 546 
                          rc = mwl8k_request_fw(priv,(char const *)di->helper_image,& priv->fw_helper,(_Bool)1); else 
                                                                    
#line 549 
                                                                    rc = mwl8k_request_fw(priv,(char const *)di->helper_image,& priv->fw_helper,(_Bool)0);
    
#line 551 
    if (rc != 0) {
      char const *tmp;
      
#line 552 
      ;
      
#line 552 
      tmp = pci_name((struct pci_dev const *)priv->pdev);
      
#line 552 
      printk("\001",tmp,di->helper_image);
    }
    else ;
    
#line 555 
    if (rc != 0 || (int)nowait != 0) {
      
#line 556 
      __retres = rc;
      
#line 556 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 559 
  if ((int)nowait != 0) {
    
#line 564 
    priv->fw_state = 1U;
    
#line 565 
    rc = mwl8k_request_fw(priv,(char const *)fw_image,& priv->fw_ucode,(_Bool)1);
  }
  else 
#line 569 
       rc = mwl8k_request_fw(priv,(char const *)fw_image,& priv->fw_ucode,(_Bool)0);
  
#line 571 
  if (rc != 0) {
    char const *tmp_0;
    
#line 572 
    ;
    
#line 572 
    tmp_0 = pci_name((struct pci_dev const *)priv->pdev);
    
#line 572 
    printk("\001",tmp_0,fw_image);
    
#line 574 
    mwl8k_release_fw(& priv->fw_helper);
    
#line 575 
    __retres = rc;
    
#line 575 
    goto return_label;
  }
  else ;
  
#line 578 
  __retres = 0;
  return_label: 
#line 578 
                return __retres;
}


#line 594  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_send_fw_load_cmd(struct mwl8k_priv *priv, void *data, int length)
{
  int __retres;
  dma_addr_t dma_addr;
  int loops;
  int tmp;
  int tmp_0;
  
#line 596 
  void *regs = priv->regs;
  
#line 600 
  dma_addr = pci_map_single(priv->pdev,data,(unsigned long)length,1);
  
#line 601 
  tmp = pci_dma_mapping_error(priv->pdev,dma_addr);
  
#line 601 
  if (tmp != 0) {
    
#line 602 
    __retres = -12;
    
#line 602 
    goto return_label;
  }
  else ;
  
#line 604 
  iowrite32((unsigned int)dma_addr,regs + 3088U);
  
#line 605 
  iowrite32(0U,regs + 3092U);
  
#line 606 
  iowrite32(2U,regs + 3096U);
  
#line 608 
  iowrite32(1048576U,regs + 3096U);
  
#line 611 
  loops = 1000;
  ldv_52246: 
#line 612 
  ;
  {
    u32 int_code;
    
#line 614 
    if ((int)priv->is_8764 != 0) {
      
#line 615 
      int_code = ioread32(regs + 3100U);
      
#line 617 
      if (int_code == 0U) 
#line 618 
                          goto ldv_52244; else ;
    }
    else {
      
#line 620 
      int_code = ioread32(regs + 3092U);
      
#line 621 
      if (int_code == 5U) {
        
#line 622 
        iowrite32(0U,regs + 3092U);
        
#line 623 
        goto ldv_52244;
      }
      else ;
    }
    
#line 626 
    ___might_sleep("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c",626,0);
    
#line 626 
    _cond_resched();
    
#line 627 
    __const_udelay(4295UL);
  }
  
#line 628 
  loops -= 1;
  
#line 628 
  if (loops != 0) 
#line 630 
                  goto ldv_52246; else 
#line 633 
                                       goto ldv_52244;
  ldv_52244: 
#line 634 
  ;
  
#line 630 
  pci_unmap_single(priv->pdev,dma_addr,(unsigned long)length,1);
  
#line 632 
  if (loops != 0) 
#line 632 
                  tmp_0 = 0; else 
#line 632 
                                  tmp_0 = -110;
  
#line 632 
  __retres = tmp_0;
  return_label: 
#line 632 
                return __retres;
}


#line 635  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_load_fw_image(struct mwl8k_priv *priv, u8 const *data, size_t length)
{
  int __retres;
  struct mwl8k_cmd_pkt *cmd;
  int done;
  
#line 640 
  int rc = 0;
  
#line 642 
  cmd = (struct mwl8k_cmd_pkt *)kmalloc(264UL,208U);
  
#line 643 
  if (cmd == (struct mwl8k_cmd_pkt *)0) {
    
#line 644 
    __retres = -12;
    
#line 644 
    goto return_label;
  }
  else ;
  
#line 646 
  cmd->code = (unsigned short)1U;
  
#line 647 
  cmd->seq_num = (unsigned char)0U;
  
#line 648 
  cmd->macid = (unsigned char)0U;
  
#line 649 
  cmd->result = (unsigned short)0U;
  
#line 651 
  done = 0;
  
#line 652 
  goto ldv_52258;
  ldv_52257: 
#line 653 
  ;
  {
    unsigned long tmp_0;
    
#line 653 
    if (256UL < length) 
#line 653 
                        tmp_0 = 256UL; else 
#line 653 
                                            tmp_0 = length;
    
#line 653 
    int block_size = (int)tmp_0;
    
#line 655 
    memcpy((void *)(& cmd->payload),(void const *)(data + done),(unsigned long)block_size);
    
#line 656 
    cmd->length = (unsigned short)block_size;
    
#line 658 
    rc = mwl8k_send_fw_load_cmd(priv,(void *)cmd,(int)((unsigned int)block_size + 8U));
    
#line 660 
    if (rc != 0) 
#line 661 
                 goto ldv_52256; else ;
    
#line 663 
    done += block_size;
    
#line 664 
    length -= (unsigned long)block_size;
  }
  ldv_52258: 
#line 666 
  ;
  
#line 652 
  if (length != 0UL) 
#line 654 
                     goto ldv_52257; else 
#line 657 
                                          goto ldv_52256;
  ldv_52256: 
#line 658 
  ;
  
#line 667 
  if (rc == 0) {
    
#line 668 
    cmd->length = (unsigned short)0U;
    
#line 669 
    rc = mwl8k_send_fw_load_cmd(priv,(void *)cmd,8);
  }
  else ;
  
#line 672 
  kfree((void const *)cmd);
  
#line 674 
  __retres = rc;
  return_label: 
#line 674 
                return __retres;
}


#line 677  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_feed_fw_image(struct mwl8k_priv *priv, u8 const *data, size_t length)
{
  int __retres;
  unsigned char *buffer;
  int may_continue;
  u32 done;
  u32 prev_block_size;
  
#line 681 
  int rc = 0;
  
#line 684 
  buffer = (unsigned char *)kmalloc(1024UL,208U);
  
#line 685 
  if (buffer == (unsigned char *)0U) {
    
#line 686 
    __retres = -12;
    
#line 686 
    goto return_label;
  }
  else ;
  
#line 688 
  done = 0U;
  
#line 689 
  prev_block_size = 0U;
  
#line 690 
  may_continue = 1000;
  
#line 691 
  goto ldv_52271;
  ldv_52272: 
#line 692 
  ;
  {
    u32 block_size;
    
#line 694 
    block_size = ioread32(priv->regs + 3136U);
    
#line 695 
    if ((block_size & 1U) != 0U) {
      
#line 696 
      block_size &= 4294967294U;
      
#line 697 
      may_continue -= 1;
    }
    else {
      
#line 699 
      done += prev_block_size;
      
#line 700 
      length -= (unsigned long)prev_block_size;
    }
    
#line 703 
    if (block_size > 1024U || (unsigned long)block_size > length) {
      
#line 704 
      rc = -75;
      
#line 705 
      goto ldv_52270;
    }
    else ;
    
#line 708 
    if (length == 0UL) {
      
#line 709 
      rc = 0;
      
#line 710 
      goto ldv_52270;
    }
    else ;
    
#line 713 
    if (block_size == 0U) {
      
#line 714 
      rc = -71;
      
#line 715 
      may_continue -= 1;
      
#line 716 
      __const_udelay(4295UL);
      
#line 717 
      goto ldv_52271;
    }
    else ;
    
#line 720 
    prev_block_size = block_size;
    
#line 721 
    memcpy((void *)buffer,(void const *)(data + done),(unsigned long)block_size);
    
#line 723 
    rc = mwl8k_send_fw_load_cmd(priv,(void *)buffer,(int)block_size);
    
#line 724 
    if (rc != 0) 
#line 725 
                 goto ldv_52270; else ;
  }
  ldv_52271: 
#line 727 
  ;
  
#line 691 
  if (may_continue > 0) 
#line 693 
                        goto ldv_52272; else 
#line 696 
                                             goto ldv_52270;
  ldv_52270: 
#line 697 
  ;
  
#line 728 
  if (rc == 0 && length != 0UL) 
#line 729 
                                rc = -121; else ;
  
#line 731 
  kfree((void const *)buffer);
  
#line 733 
  __retres = rc;
  return_label: 
#line 733 
                return __retres;
}


#line 736  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_load_firmware(struct ieee80211_hw *hw)
{
  int __retres;
  int rc;
  int loops;
  int tmp_1;
  int tmp_3;
  
#line 738 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 739 
  struct firmware const *fw = priv->fw_ucode;
  
#line 743 
  tmp_1 = memcmp((void const *)fw->data,(void const *)"\001\000\000\000",4UL);
  
#line 743 
  if (tmp_1 == 0) {
    
#line 743 
    if (! priv->is_8764) {
      
#line 744 
      struct firmware const *helper = priv->fw_helper;
      
#line 746 
      if (helper == (struct firmware const *)0) {
        char const *tmp;
        
#line 747 
        tmp = pci_name((struct pci_dev const *)priv->pdev);
        
#line 747 
        printk("\001",tmp);
        
#line 749 
        __retres = -22;
        
#line 749 
        goto return_label;
      }
      else ;
      
#line 752 
      rc = mwl8k_load_fw_image(priv,helper->data,helper->size);
      
#line 753 
      if (rc != 0) {
        char const *tmp_0;
        
#line 754 
        tmp_0 = pci_name((struct pci_dev const *)priv->pdev);
        
#line 754 
        printk("\001",tmp_0);
        
#line 756 
        __retres = rc;
        
#line 756 
        goto return_label;
      }
      else ;
      
#line 758 
      msleep(20U);
      
#line 760 
      rc = mwl8k_feed_fw_image(priv,fw->data,fw->size);
    }
    else 
#line 743 
         goto _LAND;
  }
  else {
    _LAND: 
#line 762 
    ;
    
#line 762 
    if ((int)priv->is_8764 != 0) 
#line 763 
                                 rc = mwl8k_feed_fw_image(priv,fw->data,fw->size); else 
                                                                    
#line 765 
                                                                    rc = mwl8k_load_fw_image(priv,fw->data,fw->size);
  }
  
#line 768 
  if (rc != 0) {
    char const *tmp_2;
    
#line 769 
    tmp_2 = pci_name((struct pci_dev const *)priv->pdev);
    
#line 769 
    printk("\001",tmp_2);
    
#line 771 
    __retres = rc;
    
#line 771 
    goto return_label;
  }
  else ;
  
#line 774 
  iowrite32(90U,priv->regs + 3088U);
  
#line 776 
  loops = 500000;
  ldv_52284: 
#line 777 
  ;
  {
    u32 ready_code;
    
#line 780 
    ready_code = ioread32(priv->regs + 3092U);
    
#line 781 
    if (ready_code == 4059231397U) {
      
#line 782 
      priv->ap_fw = (_Bool)1;
      
#line 783 
      goto ldv_52282;
    }
    else 
      
#line 784 
      if (ready_code == 4042388212U) {
        
#line 785 
        priv->ap_fw = (_Bool)0;
        
#line 786 
        goto ldv_52282;
      }
      else ;
    
#line 789 
    ___might_sleep("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c",789,0);
    
#line 789 
    _cond_resched();
    
#line 790 
    __const_udelay(4295UL);
  }
  
#line 791 
  loops -= 1;
  
#line 791 
  if (loops != 0) 
#line 793 
                  goto ldv_52284; else 
#line 796 
                                       goto ldv_52282;
  ldv_52282: 
#line 797 
  ;
  
#line 793 
  if (loops != 0) 
#line 793 
                  tmp_3 = 0; else 
#line 793 
                                  tmp_3 = -110;
  
#line 793 
  __retres = tmp_3;
  return_label: 
#line 793 
                return __retres;
}


#line 805  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
__inline static void mwl8k_remove_dma_header(struct sk_buff *skb, __le16 qos)
{
  struct mwl8k_dma_data *tr;
  int hdrlen;
  unsigned int tmp;
  
#line 810 
  tr = (struct mwl8k_dma_data *)skb->data;
  
#line 811 
  tmp = ieee80211_hdrlen((unsigned short)((int)tr->wh.frame_control));
  
#line 811 
  hdrlen = (int)tmp;
  
#line 813 
  if (hdrlen != 30) {
    int tmp_0;
    
#line 814 
    tmp_0 = ieee80211_is_data_qos((unsigned short)((int)tr->wh.frame_control));
    
#line 814 
    if (tmp_0 != 0) {
      
#line 815 
      memmove((void *)(& tr->data) + - hdrlen,(void const *)(& tr->wh),(unsigned long)(hdrlen + -2));
      
#line 816 
      *((__le16 *)(& tr->data) + 18446744073709551614U) = qos;
    }
    else 
#line 818 
         memmove((void *)(& tr->data) + - hdrlen,(void const *)(& tr->wh),(unsigned long)hdrlen);
  }
  else ;
  
#line 822 
  if (hdrlen != 32) 
#line 823 
                    skb_pull(skb,32U - (unsigned int)hdrlen); else ;
  
#line 824 
  return;
}


#line 829  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_add_dma_header(struct mwl8k_priv *priv, struct sk_buff *skb, int head_pad, int tail_pad)
{
  struct ieee80211_hdr *wh;
  int hdrlen;
  int reqd_hdrlen;
  struct mwl8k_dma_data *tr;
  unsigned int tmp;
  int tmp_1;
  
#line 843 
  wh = (struct ieee80211_hdr *)skb->data;
  
#line 845 
  tmp = ieee80211_hdrlen((unsigned short)((int)wh->frame_control));
  
#line 845 
  hdrlen = (int)tmp;
  
#line 851 
  if ((int)priv->ap_fw != 0 && (unsigned int)hdrlen <= 17U) {
    int tmp_0;
    
#line 853 
    tmp_0 = pskb_expand_head(skb,8,0,32U);
    
#line 853 
    if (tmp_0 != 0) {
      
#line 855 
      dev_err((struct device const *)(& ((priv->hw)->wiphy)->dev),"Failed to reallocate TX buffer\n");
      
#line 857 
      goto return_label;
    }
    else ;
    
#line 859 
    skb->truesize += 8U;
  }
  else ;
  
#line 862 
  reqd_hdrlen = (int)((unsigned int)head_pad + 32U);
  
#line 864 
  if (hdrlen != reqd_hdrlen) 
#line 865 
                             skb_push(skb,(unsigned int)(reqd_hdrlen - hdrlen)); else ;
  
#line 867 
  tmp_1 = ieee80211_is_data_qos((unsigned short)((int)wh->frame_control));
  
#line 867 
  if (tmp_1 != 0) 
#line 868 
                  hdrlen += -2; else ;
  
#line 870 
  tr = (struct mwl8k_dma_data *)skb->data;
  
#line 871 
  if (& tr->wh != wh) 
#line 872 
                      memmove((void *)(& tr->wh),(void const *)wh,(unsigned long)hdrlen); else ;
  
#line 873 
  if (hdrlen != 30) 
#line 874 
                    memset((void *)(& tr->wh) + hdrlen,0,30UL - (unsigned long)hdrlen); else ;
  
#line 881 
  tr->fwlen = (unsigned short)((unsigned int)((int)((unsigned short)skb->len) + (int)((unsigned short)tail_pad)) + 65504U);
  return_label: 
#line 882 
                return;
}


#line 884  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_encapsulate_tx_frame(struct mwl8k_priv *priv, struct sk_buff *skb)
{
  struct ieee80211_hdr *wh;
  struct ieee80211_tx_info *tx_info;
  struct ieee80211_key_conf *key_conf;
  int data_pad;
  int tmp;
  
#line 891 
  int head_pad = 0;
  
#line 893 
  wh = (struct ieee80211_hdr *)skb->data;
  
#line 895 
  tx_info = IEEE80211_SKB_CB(skb);
  
#line 897 
  key_conf = (struct ieee80211_key_conf *)0;
  
#line 898 
  tmp = ieee80211_is_data((unsigned short)((int)wh->frame_control));
  
#line 898 
  if (tmp != 0) 
#line 899 
                key_conf = tx_info->__anonCompField_ieee80211_tx_info_100.control.hw_key; else ;
  
#line 910 
  data_pad = 0;
  
#line 911 
  if (key_conf != (struct ieee80211_key_conf *)0) {
    
#line 912 
    head_pad = (int)key_conf->iv_len;
    
#line 913 
    switch (key_conf->cipher) {
      case (u32)1027073: 
#line 914 
      ;
      case (u32)1027077: 
#line 915 
      ;
      
#line 916 
      data_pad = 4;
      
#line 917 
      goto ldv_52316;
      case (u32)1027074: 
#line 918 
      ;
      
#line 919 
      data_pad = 12;
      
#line 920 
      goto ldv_52316;
      case (u32)1027076: 
#line 921 
      ;
      
#line 922 
      data_pad = 8;
      
#line 923 
      goto ldv_52316;
    }
    ldv_52316: 
#line 925 
    ;
  }
  else ;
  
#line 926 
  mwl8k_add_dma_header(priv,skb,head_pad,data_pad);
  
#line 927 
  return;
}


#line 963  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_rxd_ap_init(void *_rxd, dma_addr_t next_dma_addr)
{
  
#line 965 
  struct mwl8k_rxd_ap *rxd = (struct mwl8k_rxd_ap *)_rxd;
  
#line 967 
  rxd->next_rxd_phys_addr = (unsigned int)next_dma_addr;
  
#line 968 
  rxd->rx_ctrl = (unsigned char)128U;
  
#line 969 
  return;
}


#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_rxd_ap_refill(void *_rxd, dma_addr_t addr, int len)
{
  
#line 973 
  struct mwl8k_rxd_ap *rxd = (struct mwl8k_rxd_ap *)_rxd;
  
#line 975 
  rxd->pkt_len = (unsigned short)len;
  
#line 976 
  rxd->pkt_phys_addr = (unsigned int)addr;
  
#line 977 
  ldv_inline_asm();
  
#line 978 
  rxd->rx_ctrl = (unsigned char)0U;
  
#line 979 
  return;
}


#line 982  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_rxd_ap_process(void *_rxd, struct ieee80211_rx_status *status, __le16 *qos, s8 *noise)
{
  int __retres;
  int tmp;
  
#line 985 
  struct mwl8k_rxd_ap *rxd = (struct mwl8k_rxd_ap *)_rxd;
  
#line 987 
  if ((int)rxd->rx_ctrl >= 0) {
    
#line 988 
    __retres = -1;
    
#line 988 
    goto return_label;
  }
  else ;
  
#line 989 
  ldv_inline_asm();
  
#line 991 
  memset((void *)status,0,40UL);
  
#line 993 
  status->signal = (signed char)(- ((int)rxd->rssi));
  
#line 994 
  *noise = (signed char)(- ((int)rxd->noise_floor));
  
#line 996 
  if ((int)rxd->rate < 0) {
    
#line 997 
    status->flag |= 512U;
    
#line 998 
    if (((int)rxd->rate & 64) != 0) 
#line 999 
                                    status->flag |= 1024U; else ;
    
#line 1000 
    status->rate_idx = (unsigned char)((unsigned int)rxd->rate & 63U);
  }
  else {
    int i;
    
#line 1004 
    i = 0;
    
#line 1004 
    goto ldv_52359;
    ldv_52358: 
#line 1005 
    ;
    
#line 1005 
    if ((int)mwl8k_rates_24[i].hw_value == (int)((unsigned short)rxd->rate)) {
      
#line 1006 
      status->rate_idx = (unsigned char)i;
      
#line 1007 
      goto ldv_52357;
    }
    else ;
    
#line 1004 
    i += 1;
    ldv_52359: 
#line 1005 
    ;
    
#line 1004 
    if ((unsigned int)i <= 12U) 
#line 1006 
                                goto ldv_52358; else 
#line 1009 
                                                     goto ldv_52357;
    ldv_52357: 
#line 1010 
    ;
  }
  
#line 1012 
  if ((unsigned int)rxd->channel > 14U) {
    
#line 1013 
    status->band = (unsigned char)1U;
    
#line 1014 
    if ((status->flag & 512U) == 0U) 
#line 1015 
                                     status->rate_idx = (unsigned char)((unsigned int)status->rate_idx + 251U); else ;
  }
  else 
#line 1017 
       status->band = (unsigned char)0U;
  
#line 1019 
  tmp = ieee80211_channel_to_frequency((int)rxd->channel,(enum ieee80211_band)status->band);
  
#line 1019 
  status->freq = (unsigned short)tmp;
  
#line 1022 
  *qos = rxd->qos_control;
  
#line 1024 
  if ((unsigned int)rxd->rx_status + 128U <= 126U && ((int)rxd->rx_status & 2) != 0) 
    
#line 1027 
    status->flag |= 1U; else ;
  
#line 1029 
  __retres = (int)rxd->pkt_len;
  return_label: 
#line 1029 
                return __retres;
}


#line 1032  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static struct rxd_ops rxd_ap_ops = {.rxd_size = 32, .rxd_init = & mwl8k_rxd_ap_init, .rxd_refill = & mwl8k_rxd_ap_refill, .rxd_process = & mwl8k_rxd_ap_process};

#line 1073  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_rxd_sta_init(void *_rxd, dma_addr_t next_dma_addr)
{
  
#line 1075 
  struct mwl8k_rxd_sta *rxd = (struct mwl8k_rxd_sta *)_rxd;
  
#line 1077 
  rxd->next_rxd_phys_addr = (unsigned int)next_dma_addr;
  
#line 1078 
  rxd->rx_ctrl = (unsigned char)2U;
  
#line 1079 
  return;
}


#line 1081  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_rxd_sta_refill(void *_rxd, dma_addr_t addr, int len)
{
  
#line 1083 
  struct mwl8k_rxd_sta *rxd = (struct mwl8k_rxd_sta *)_rxd;
  
#line 1085 
  rxd->pkt_len = (unsigned short)len;
  
#line 1086 
  rxd->pkt_phys_addr = (unsigned int)addr;
  
#line 1087 
  ldv_inline_asm();
  
#line 1088 
  rxd->rx_ctrl = (unsigned char)0U;
  
#line 1089 
  return;
}


#line 1092  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_rxd_sta_process(void *_rxd, struct ieee80211_rx_status *status, __le16 *qos, s8 *noise)
{
  int __retres;
  u16 rate_info;
  int tmp;
  
#line 1095 
  struct mwl8k_rxd_sta *rxd = (struct mwl8k_rxd_sta *)_rxd;
  
#line 1098 
  if (((int)rxd->rx_ctrl & 2) == 0) {
    
#line 1099 
    __retres = -1;
    
#line 1099 
    goto return_label;
  }
  else ;
  
#line 1100 
  ldv_inline_asm();
  
#line 1102 
  rate_info = rxd->rate_info;
  
#line 1104 
  memset((void *)status,0,40UL);
  
#line 1106 
  status->signal = (signed char)(- ((int)rxd->rssi));
  
#line 1107 
  *noise = (signed char)(- ((int)rxd->noise_level));
  
#line 1108 
  status->antenna = (unsigned char)((unsigned int)((unsigned char)((int)rate_info >> 11)) & 3U);
  
#line 1109 
  status->rate_idx = (unsigned char)((unsigned int)((unsigned char)((int)rate_info >> 3)) & 63U);
  
#line 1111 
  if ((int)rate_info < 0) 
#line 1112 
                          status->flag |= 256U; else ;
  
#line 1113 
  if (((int)rate_info & 4) != 0) 
#line 1114 
                                 status->flag |= 1024U; else ;
  
#line 1115 
  if (((int)rate_info & 2) != 0) 
#line 1116 
                                 status->flag |= 2048U; else ;
  
#line 1117 
  if (((int)rate_info & 1) != 0) 
#line 1118 
                                 status->flag |= 512U; else ;
  
#line 1120 
  if ((unsigned int)rxd->channel > 14U) {
    
#line 1121 
    status->band = (unsigned char)1U;
    
#line 1122 
    if ((status->flag & 512U) == 0U) 
#line 1123 
                                     status->rate_idx = (unsigned char)((unsigned int)status->rate_idx + 251U); else ;
  }
  else 
#line 1125 
       status->band = (unsigned char)0U;
  
#line 1127 
  tmp = ieee80211_channel_to_frequency((int)rxd->channel,(enum ieee80211_band)status->band);
  
#line 1127 
  status->freq = (unsigned short)tmp;
  
#line 1130 
  *qos = rxd->qos_control;
  
#line 1131 
  if (((int)rxd->rx_ctrl & 4) != 0 && ((int)rxd->rx_ctrl & 8) != 0) 
#line 1133 
                                                                    status->flag |= 1U; else ;
  
#line 1135 
  __retres = (int)rxd->pkt_len;
  return_label: 
#line 1135 
                return __retres;
}


#line 1138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static struct rxd_ops rxd_sta_ops = {.rxd_size = 40, .rxd_init = & mwl8k_rxd_sta_init, .rxd_refill = & mwl8k_rxd_sta_refill, .rxd_process = & mwl8k_rxd_sta_process};

#line 1149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_rxq_init(struct ieee80211_hw *hw, int index)
{
  int __retres;
  int size;
  int i;
  
#line 1151 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 1152 
  struct mwl8k_rx_queue *rxq = (struct mwl8k_rx_queue *)(& priv->rxq) + index;
  
#line 1156 
  rxq->rxd_count = 0;
  
#line 1157 
  rxq->head = 0;
  
#line 1158 
  rxq->tail = 0;
  
#line 1160 
  size = (priv->rxd_ops)->rxd_size * 256;
  
#line 1162 
  rxq->rxd = pci_zalloc_consistent(priv->pdev,(unsigned long)size,& rxq->rxd_dma);
  
#line 1163 
  if (rxq->rxd == (void *)0) {
    
#line 1164 
    dev_err((struct device const *)(& (hw->wiphy)->dev),"failed to alloc RX descriptors\n");
    
#line 1165 
    __retres = -12;
    
#line 1165 
    goto return_label;
  }
  else ;
  
#line 151 
  rxq->buf = (struct __anonstruct_buf_385 *)kcalloc(256UL,16UL,208U);
  
#line 1169 
  if (rxq->buf == (struct __anonstruct_buf_385 *)0) {
    
#line 1170 
    pci_free_consistent(priv->pdev,(unsigned long)size,rxq->rxd,rxq->rxd_dma);
    
#line 1171 
    __retres = -12;
    
#line 1171 
    goto return_label;
  }
  else ;
  
#line 1174 
  i = 0;
  
#line 1174 
  goto ldv_52409;
  ldv_52408: 
#line 1175 
  ;
  {
    int desc_size;
    void *rxd;
    int nexti;
    dma_addr_t next_dma_addr;
    
#line 1180 
    desc_size = (priv->rxd_ops)->rxd_size;
    
#line 1181 
    rxd = rxq->rxd + (priv->rxd_ops)->rxd_size * i;
    
#line 1183 
    nexti = i + 1;
    
#line 1184 
    if (nexti == 256) 
#line 1185 
                      nexti = 0; else ;
    
#line 1186 
    next_dma_addr = rxq->rxd_dma + (unsigned long long)(nexti * desc_size);
    
#line 1188 
    (*((priv->rxd_ops)->rxd_init))(rxd,next_dma_addr);
  }
  
#line 1174 
  i += 1;
  ldv_52409: 
#line 1175 
  ;
  
#line 1174 
  if (i <= 255) 
#line 1176 
                goto ldv_52408; else 
#line 1179 
                                     goto ldv_52410;
  ldv_52410: 
#line 1180 
  ;
  
#line 1191 
  __retres = 0;
  return_label: 
#line 1191 
                return __retres;
}


#line 1194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int rxq_refill(struct ieee80211_hw *hw, int index, int limit)
{
  int refilled;
  
#line 1196 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 1197 
  struct mwl8k_rx_queue *rxq = (struct mwl8k_rx_queue *)(& priv->rxq) + index;
  
#line 1200 
  refilled = 0;
  
#line 1201 
  goto ldv_52425;
  ldv_52424: 
#line 1202 
  ;
  {
    struct sk_buff *skb;
    dma_addr_t addr;
    int rx;
    void *rxd;
    int tmp;
    
#line 1207 
    skb = dev_alloc_skb(3800U);
    
#line 1208 
    if (skb == (struct sk_buff *)0) 
#line 1209 
                                    goto ldv_52423; else ;
    
#line 1211 
    addr = pci_map_single(priv->pdev,(void *)skb->data,3800UL,2);
    
#line 1214 
    rxq->rxd_count += 1;
    
#line 1215 
    tmp = rxq->tail;
    
#line 1215 
    rxq->tail += 1;
    
#line 1215 
    rx = tmp;
    
#line 1216 
    if (rxq->tail == 256) 
#line 1217 
                          rxq->tail = 0; else ;
    
#line 1218 
    (rxq->buf + rx)->skb = skb;
    
#line 1219 
    (rxq->buf + rx)->dma = addr;
    
#line 1221 
    rxd = rxq->rxd + (priv->rxd_ops)->rxd_size * rx;
    
#line 1222 
    (*((priv->rxd_ops)->rxd_refill))(rxd,addr,3800);
    
#line 1224 
    refilled += 1;
  }
  ldv_52425: 
#line 1226 
  ;
  
#line 1201 
  if (rxq->rxd_count <= 255) {
    int tmp_0;
    
#line 1201 
    tmp_0 = limit;
    
#line 1201 
    limit -= 1;
    
#line 1201 
    ;
    
#line 1201 
    if (tmp_0 != 0) 
#line 1203 
                    goto ldv_52424; else 
#line 1206 
                                         goto ldv_52423;
  }
  else 
#line 1206 
       goto ldv_52423;
  ldv_52423: 
#line 1207 
  ;
  
#line 1227 
  return refilled;
}


#line 1231  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_rxq_deinit(struct ieee80211_hw *hw, int index)
{
  int i;
  
#line 1233 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 1234 
  struct mwl8k_rx_queue *rxq = (struct mwl8k_rx_queue *)(& priv->rxq) + index;
  
#line 1237 
  if (rxq->rxd == (void *)0) 
#line 1238 
                             goto return_label; else ;
  
#line 1240 
  i = 0;
  
#line 1240 
  goto ldv_52434;
  ldv_52433: 
#line 1241 
  ;
  
#line 1241 
  if ((rxq->buf + i)->skb != (struct sk_buff *)0) {
    
#line 1242 
    pci_unmap_single(priv->pdev,(rxq->buf + i)->dma,3800UL,2);
    
#line 1245 
    (rxq->buf + i)->dma = 0ULL;
    
#line 1247 
    kfree_skb((rxq->buf + i)->skb);
    
#line 1248 
    (rxq->buf + i)->skb = (struct sk_buff *)0;
  }
  else ;
  
#line 1240 
  i += 1;
  ldv_52434: 
#line 1241 
  ;
  
#line 1240 
  if (i <= 255) 
#line 1242 
                goto ldv_52433; else 
#line 1245 
                                     goto ldv_52435;
  ldv_52435: 
#line 1246 
  ;
  
#line 1252 
  kfree((void const *)rxq->buf);
  
#line 1253 
  rxq->buf = (struct __anonstruct_buf_385 *)0;
  
#line 1255 
  pci_free_consistent(priv->pdev,(unsigned long)((priv->rxd_ops)->rxd_size * 256),rxq->rxd,rxq->rxd_dma);
  
#line 1258 
  rxq->rxd = (void *)0;
  return_label: 
#line 1259 
                return;
}


#line 1267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
__inline static int mwl8k_capture_bssid(struct mwl8k_priv *priv, struct ieee80211_hdr *wh)
{
  int tmp_1;
  
#line 1270 
  if ((int)priv->capture_beacon != 0) {
    int tmp;
    
#line 1269 
    tmp = ieee80211_is_beacon((unsigned short)((int)wh->frame_control));
    
#line 1269 
    if (tmp != 0) {
      bool tmp_0;
      
#line 1270 
      tmp_0 = ether_addr_equal_64bits((u8 const *)(& wh->addr3),(u8 const *)(& priv->capture_bssid));
      
#line 1270 
      if ((int)tmp_0 != 0) 
#line 1270 
                           tmp_1 = 1; else 
#line 1270 
                                           tmp_1 = 0;
    }
    else 
#line 1270 
         tmp_1 = 0;
  }
  else 
#line 1270 
       tmp_1 = 0;
  
#line 1270 
  return tmp_1;
}


#line 1274  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
__inline static void mwl8k_save_beacon(struct ieee80211_hw *hw, struct sk_buff *skb)
{
  
#line 1277 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 1279 
  priv->capture_beacon = (_Bool)0;
  
#line 1280 
  eth_zero_addr((u8 *)(& priv->capture_bssid));
  
#line 1287 
  priv->beacon_skb = skb_copy((struct sk_buff const *)skb,32U);
  
#line 1288 
  if (priv->beacon_skb != (struct sk_buff *)0) 
#line 1289 
                                               ieee80211_queue_work(hw,& priv->finalize_join_worker); else ;
  
#line 1290 
  return;
}


#line 1292  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
__inline static struct mwl8k_vif *mwl8k_find_vif_bss(struct list_head *vif_list, u8 *bssid)
{
  struct mwl8k_vif *__retres;
  struct mwl8k_vif *mwl8k_vif;
  struct mwl8k_vif *tmp;
  int tmp_0;
  struct mwl8k_vif *tmp_1;
  {
    
#line 1297 
    struct list_head const *__mptr = (struct list_head const *)vif_list->next;
    
#line 1297 
    tmp = (struct mwl8k_vif *)__mptr;
  }
  
#line 1297 
  mwl8k_vif = tmp;
  
#line 1297 
  goto ldv_52455;
  ldv_52454: 
#line 1298 
  ;
  
#line 1299 
  tmp_0 = memcmp((void const *)bssid,(void const *)(& mwl8k_vif->bssid),6UL);
  
#line 1299 
  if (tmp_0 == 0) {
    
#line 1301 
    __retres = mwl8k_vif;
    
#line 1301 
    goto return_label;
  }
  else ;
  {
    
#line 1297 
    struct list_head const *__mptr_0 = (struct list_head const *)mwl8k_vif->list.next;
    
#line 1297 
    tmp_1 = (struct mwl8k_vif *)__mptr_0;
  }
  
#line 1297 
  mwl8k_vif = tmp_1;
  ldv_52455: 
#line 1299 
  ;
  
#line 1297 
  if (& mwl8k_vif->list != vif_list) 
#line 1299 
                                     goto ldv_52454; else 
#line 1302 
                                                          goto ldv_52456;
  ldv_52456: 
#line 1303 
  ;
  
#line 1304 
  __retres = (struct mwl8k_vif *)0;
  return_label: 
#line 1304 
                return __retres;
}


#line 1307  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int rxq_process(struct ieee80211_hw *hw, int index, int limit)
{
  int processed;
  
#line 1309 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 1310 
  struct mwl8k_vif *mwl8k_vif = (struct mwl8k_vif *)0;
  
#line 1311 
  struct mwl8k_rx_queue *rxq = (struct mwl8k_rx_queue *)(& priv->rxq) + index;
  
#line 1314 
  processed = 0;
  
#line 1315 
  goto ldv_52475;
  ldv_52474: 
#line 1316 
  ;
  {
    struct sk_buff *skb;
    void *rxd;
    int pkt_len;
    struct ieee80211_rx_status status;
    struct ieee80211_hdr *wh;
    __le16 qos;
    int tmp;
    int tmp_1;
    struct ieee80211_rx_status *tmp_2;
    
#line 1323 
    skb = (rxq->buf + rxq->head)->skb;
    
#line 1324 
    if (skb == (struct sk_buff *)0) 
#line 1325 
                                    goto ldv_52472; else ;
    
#line 1327 
    rxd = rxq->rxd + rxq->head * (priv->rxd_ops)->rxd_size;
    
#line 1329 
    pkt_len = (*((priv->rxd_ops)->rxd_process))(rxd,& status,& qos,& priv->noise);
    
#line 1331 
    if (pkt_len < 0) 
#line 1332 
                     goto ldv_52472; else ;
    
#line 1334 
    (rxq->buf + rxq->head)->skb = (struct sk_buff *)0;
    
#line 1336 
    pci_unmap_single(priv->pdev,(rxq->buf + rxq->head)->dma,3800UL,2);
    
#line 1339 
    (rxq->buf + rxq->head)->dma = 0ULL;
    
#line 1341 
    rxq->head += 1;
    
#line 1342 
    if (rxq->head == 256) 
#line 1343 
                          rxq->head = 0; else ;
    
#line 1345 
    rxq->rxd_count -= 1;
    
#line 1347 
    wh = & ((struct mwl8k_dma_data *)skb->data)->wh;
    
#line 1354 
    tmp = mwl8k_capture_bssid(priv,(struct ieee80211_hdr *)skb->data);
    
#line 1354 
    if (tmp != 0) 
#line 1355 
                  mwl8k_save_beacon(hw,skb); else ;
    
#line 1357 
    tmp_1 = ieee80211_has_protected((unsigned short)((int)wh->frame_control));
    
#line 1357 
    if (tmp_1 != 0) {
      
#line 1363 
      mwl8k_vif = mwl8k_find_vif_bss(& priv->vif_list,(u8 *)(& wh->addr1));
      
#line 1366 
      if (mwl8k_vif != (struct mwl8k_vif *)0 && (int)mwl8k_vif->is_hw_crypto_enabled != 0) {
        int tmp_0;
        
#line 1381 
        if ((status.flag & 1U) != 0U) {
          struct mwl8k_dma_data *tr;
          
#line 1383 
          tr = (struct mwl8k_dma_data *)skb->data;
          
#line 1384 
          memset((void *)(& tr->data),0,4UL);
          
#line 1385 
          pkt_len += 4;
        }
        else ;
        
#line 1388 
        tmp_0 = ieee80211_is_auth((unsigned short)((int)wh->frame_control));
        
#line 1388 
        if (tmp_0 == 0) 
#line 1389 
                        status.flag |= 26U; else ;
      }
      else ;
    }
    else ;
    
#line 1395 
    skb_put(skb,(unsigned int)pkt_len);
    
#line 1396 
    mwl8k_remove_dma_header(skb,(unsigned short)((int)qos));
    
#line 1397 
    tmp_2 = IEEE80211_SKB_RXCB(skb);
    
#line 1397 
    memcpy((void *)tmp_2,(void const *)(& status),40UL);
    
#line 1398 
    ieee80211_rx_irqsafe(hw,skb);
    
#line 1400 
    processed += 1;
  }
  ldv_52475: 
#line 1402 
  ;
  
#line 1315 
  if (rxq->rxd_count != 0) {
    int tmp_3;
    
#line 1315 
    tmp_3 = limit;
    
#line 1315 
    limit -= 1;
    
#line 1315 
    ;
    
#line 1315 
    if (tmp_3 != 0) 
#line 1317 
                    goto ldv_52474; else 
#line 1320 
                                         goto ldv_52472;
  }
  else 
#line 1320 
       goto ldv_52472;
  ldv_52472: 
#line 1321 
  ;
  
#line 1403 
  return processed;
}


#line 1440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_txq_init(struct ieee80211_hw *hw, int index)
{
  int __retres;
  int size;
  int i;
  
#line 1442 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 1443 
  struct mwl8k_tx_queue *txq = (struct mwl8k_tx_queue *)(& priv->txq) + index;
  
#line 1447 
  txq->len = 0U;
  
#line 1448 
  txq->head = 0;
  
#line 1449 
  txq->tail = 0;
  
#line 1451 
  size = 4096;
  
#line 1453 
  txq->txd = (struct mwl8k_tx_desc *)pci_zalloc_consistent(priv->pdev,(unsigned long)size,& txq->txd_dma);
  
#line 1454 
  if (txq->txd == (struct mwl8k_tx_desc *)0) {
    
#line 1455 
    dev_err((struct device const *)(& (hw->wiphy)->dev),"failed to alloc TX descriptors\n");
    
#line 1456 
    __retres = -12;
    
#line 1456 
    goto return_label;
  }
  else ;
  
#line 1459 
  txq->skb = (struct sk_buff **)kcalloc(128UL,8UL,208U);
  
#line 1460 
  if (txq->skb == (struct sk_buff **)0) {
    
#line 1461 
    pci_free_consistent(priv->pdev,(unsigned long)size,(void *)txq->txd,txq->txd_dma);
    
#line 1462 
    __retres = -12;
    
#line 1462 
    goto return_label;
  }
  else ;
  
#line 1465 
  i = 0;
  
#line 1465 
  goto ldv_52499;
  ldv_52498: 
#line 1466 
  ;
  {
    struct mwl8k_tx_desc *tx_desc;
    int nexti;
    
#line 1469 
    tx_desc = txq->txd + i;
    
#line 1470 
    nexti = (i + 1) % 128;
    
#line 1472 
    tx_desc->status = 0U;
    
#line 1473 
    tx_desc->next_txd_phys_addr = (unsigned int)txq->txd_dma + (unsigned int)((unsigned long)nexti) * 32U;
  }
  
#line 1465 
  i += 1;
  ldv_52499: 
#line 1466 
  ;
  
#line 1465 
  if (i <= 127) 
#line 1467 
                goto ldv_52498; else 
#line 1470 
                                     goto ldv_52500;
  ldv_52500: 
#line 1471 
  ;
  
#line 1477 
  __retres = 0;
  return_label: 
#line 1477 
                return __retres;
}


#line 1480  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
__inline static void mwl8k_tx_start(struct mwl8k_priv *priv)
{
  
#line 1482 
  iowrite32(1U,priv->regs + 3096U);
  
#line 1484 
  iowrite32(1048576U,priv->regs + 3096U);
  
#line 1486 
  ioread32(priv->regs + 3092U);
  
#line 1487 
  return;
}


#line 1489  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_dump_tx_rings(struct ieee80211_hw *hw)
{
  int i;
  
#line 1491 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 1494 
  i = 0;
  
#line 1494 
  goto ldv_52520;
  ldv_52519: 
#line 1495 
  ;
  {
    int desc;
    
#line 1495 
    struct mwl8k_tx_queue *txq = (struct mwl8k_tx_queue *)(& priv->txq) + i;
    
#line 1496 
    int fw_owned = 0;
    
#line 1497 
    int drv_owned = 0;
    
#line 1498 
    int unused = 0;
    
#line 1501 
    desc = 0;
    
#line 1501 
    goto ldv_52517;
    ldv_52516: 
#line 1502 
    ;
    {
      u32 status;
      
#line 1502 
      struct mwl8k_tx_desc *tx_desc = txq->txd + desc;
      
#line 1505 
      status = tx_desc->status;
      
#line 1506 
      if (status < (u32)0) 
#line 1507 
                           fw_owned += 1; else 
#line 1509 
                                               drv_owned += 1;
      
#line 1511 
      if ((unsigned int)tx_desc->pkt_len == 0U) 
#line 1512 
                                                unused += 1; else ;
    }
    
#line 1501 
    desc += 1;
    ldv_52517: 
#line 1502 
    ;
    
#line 1501 
    if (desc <= 127) 
#line 1503 
                     goto ldv_52516; else 
#line 1506 
                                          goto ldv_52518;
    ldv_52518: 
#line 1507 
    ;
    
#line 1515 
    dev_err((struct device const *)(& (hw->wiphy)->dev),"txq[%d] len=%d head=%d tail=%d ",i,txq->len,txq->head,txq->tail,fw_owned,drv_owned,unused);
  }
  
#line 1494 
  i += 1;
  ldv_52520: 
#line 1495 
  ;
  
#line 1494 
  if ((int)priv->num_ampdu_queues + 4 > i) 
#line 1496 
                                           goto ldv_52519; else 
#line 1499 
                                                                goto ldv_52521;
  ldv_52521: 
#line 1500 
  ;
  
#line 1501 
  return;
}


#line 1529  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_tx_wait_empty(struct ieee80211_hw *hw)
{
  int __retres;
  struct completion tmp;
  int retry;
  int rc;
  int tmp_1;
  
#line 1531 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 1532 
  init_completion(& tmp);
  
#line 1532 
  struct completion tx_wait = tx_wait;
  
#line 1536 
  __might_sleep("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c",1536,0);
  
#line 1543 
  if ((int)priv->hw_restart_in_progress != 0) {
    struct task_struct *tmp_0;
    
#line 1544 
    tmp_0 = get_current();
    
#line 1544 
    ;
    
#line 1544 
    if (priv->hw_restart_owner == tmp_0) {
      
#line 1545 
      __retres = 0;
      
#line 1545 
      goto return_label;
    }
    else {
      
#line 1547 
      __retres = -16;
      
#line 1547 
      goto return_label;
    }
  }
  else ;
  
#line 1550 
  tmp_1 = atomic_read((atomic_t const *)(& priv->watchdog_event_pending));
  
#line 1550 
  if (tmp_1 != 0) {
    
#line 1551 
    __retres = 0;
    
#line 1551 
    goto return_label;
  }
  else ;
  
#line 1557 
  if (priv->pending_tx_pkts == 0) {
    
#line 1558 
    __retres = 0;
    
#line 1558 
    goto return_label;
  }
  else ;
  
#line 1560 
  retry = 1;
  
#line 1561 
  rc = 0;
  
#line 1563 
  ldv_spin_lock_bh_72(& priv->tx_lock);
  
#line 1564 
  priv->tx_wait = & tx_wait;
  
#line 1565 
  goto ldv_52535;
  ldv_52536: 
#line 1566 
  ;
  {
    int oldcount;
    unsigned long timeout;
    unsigned long tmp_2;
    int tmp_3;
    
#line 1569 
    oldcount = priv->pending_tx_pkts;
    
#line 1571 
    ldv_spin_unlock_bh_73(& priv->tx_lock);
    
#line 1572 
    tmp_2 = msecs_to_jiffies(5000U);
    
#line 1572 
    timeout = wait_for_completion_timeout(& tx_wait,tmp_2);
    
#line 1575 
    tmp_3 = atomic_read((atomic_t const *)(& priv->watchdog_event_pending));
    
#line 1575 
    if (tmp_3 != 0) {
      
#line 1576 
      ldv_spin_lock_bh_74(& priv->tx_lock);
      
#line 1577 
      priv->tx_wait = (struct completion *)0;
      
#line 1578 
      ldv_spin_unlock_bh_75(& priv->tx_lock);
      
#line 1579 
      __retres = 0;
      
#line 1579 
      goto return_label;
    }
    else ;
    
#line 1582 
    ldv_spin_lock_bh_76(& priv->tx_lock);
    
#line 1584 
    if (timeout != 0UL || priv->pending_tx_pkts == 0) {
      {
        
#line 1585 
        int __ret_warn_on = priv->pending_tx_pkts != 0;
        
#line 1585 
        if ((long)(__ret_warn_on != 0) != 0L) 
#line 1585 
                                              warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c",1585); else ;
        
#line 1585 
        long tmp_4 = (long)(__ret_warn_on != 0);
      }
      
#line 1586 
      if (retry != 0) 
#line 1587 
                      dev_notice((struct device const *)(& (hw->wiphy)->dev),"tx rings drained\n"); else ;
      
#line 1588 
      goto ldv_52534;
    }
    else ;
    
#line 1591 
    if (retry != 0) {
      
#line 1592 
      mwl8k_tx_start(priv);
      
#line 1593 
      retry = 0;
      
#line 1594 
      goto ldv_52535;
    }
    else ;
    
#line 1597 
    if (priv->pending_tx_pkts < oldcount) {
      
#line 1598 
      dev_notice((struct device const *)(& (hw->wiphy)->dev),"waiting for tx rings to drain (%d -> %d pkts)\n",oldcount,priv->pending_tx_pkts);
      
#line 1601 
      retry = 1;
      
#line 1602 
      goto ldv_52535;
    }
    else ;
    
#line 1605 
    priv->tx_wait = (struct completion *)0;
    
#line 1607 
    dev_err((struct device const *)(& (hw->wiphy)->dev),"tx rings stuck for %d ms\n",5000);
    
#line 1609 
    mwl8k_dump_tx_rings(hw);
    
#line 1610 
    priv->hw_restart_in_progress = (_Bool)1;
    
#line 1611 
    ieee80211_queue_work(hw,& priv->fw_reload);
    
#line 1613 
    rc = -110;
  }
  ldv_52535: 
#line 1615 
  ;
  
#line 1565 
  if (rc == 0) 
#line 1567 
               goto ldv_52536; else 
#line 1570 
                                    goto ldv_52534;
  ldv_52534: 
#line 1571 
  ;
  
#line 1615 
  priv->tx_wait = (struct completion *)0;
  
#line 1616 
  ldv_spin_unlock_bh_77(& priv->tx_lock);
  
#line 1618 
  __retres = rc;
  return_label: 
#line 1618 
                return __retres;
}


#line 1626  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_tid_queue_mapping(u8 tid)
{
  int __retres;
  
#line 1628 
  if ((long)((unsigned int)tid > 7U) != 0L) {
    
#line 1630 
    ldv_inline_asm();
    
#line 1628 
    ;
  }
  else ;
  
#line 1630 
  switch ((int)tid) {
    case 0: 
#line 1631 
    ;
    case 3: 
#line 1632 
    ;
    
#line 1633 
    __retres = 2;
    
#line 1633 
    goto return_label;
    case 1: 
#line 1634 
    ;
    case 2: 
#line 1635 
    ;
    
#line 1636 
    __retres = 3;
    
#line 1636 
    goto return_label;
    case 4: 
#line 1637 
    ;
    case 5: 
#line 1638 
    ;
    
#line 1639 
    __retres = 1;
    
#line 1639 
    goto return_label;
    case 6: 
#line 1640 
    ;
    case 7: 
#line 1641 
    ;
    
#line 1642 
    __retres = 0;
    
#line 1642 
    goto return_label;
    default: 
#line 1643 
    ;
    
#line 1644 
    __retres = -1;
    
#line 1644 
    goto return_label;
  }
  return_label: 
#line 1630 
                return __retres;
}


#line 1657  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_txq_reclaim(struct ieee80211_hw *hw, int index, int limit, int force)
{
  int processed;
  
#line 1659 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 1660 
  struct mwl8k_tx_queue *txq = (struct mwl8k_tx_queue *)(& priv->txq) + index;
  
#line 1663 
  processed = 0;
  
#line 1664 
  goto ldv_52571;
  ldv_52570: 
#line 1665 
  ;
  {
    int tx;
    struct mwl8k_tx_desc *tx_desc;
    unsigned long addr;
    int size;
    struct sk_buff *skb;
    struct ieee80211_tx_info *info;
    u32 status;
    struct ieee80211_sta *sta;
    u16 rate_info;
    struct ieee80211_hdr *wh;
    int tmp;
    
#line 1673 
    struct mwl8k_sta *sta_info = (struct mwl8k_sta *)0;
    
#line 1677 
    tx = txq->head;
    
#line 1678 
    tx_desc = txq->txd + tx;
    
#line 1680 
    status = tx_desc->status;
    
#line 1682 
    if (status < (u32)0) {
      
#line 1683 
      if (force == 0) 
#line 1684 
                      goto ldv_52569; else ;
      
#line 1685 
      tx_desc->status &= 2147483647U;
    }
    else ;
    
#line 1689 
    txq->head = (tx + 1) % 128;
    
#line 1690 
    if ((long)(txq->len == 0U) != 0L) {
      
#line 1692 
      ldv_inline_asm();
      
#line 1690 
      ;
    }
    else ;
    
#line 1691 
    txq->len -= 1U;
    
#line 1692 
    priv->pending_tx_pkts -= 1;
    
#line 1694 
    addr = (unsigned long)tx_desc->pkt_phys_addr;
    
#line 1695 
    size = (int)tx_desc->pkt_len;
    
#line 1696 
    skb = *(txq->skb + tx);
    
#line 1697 
    *(txq->skb + tx) = (struct sk_buff *)0;
    
#line 1699 
    if ((long)(skb == (struct sk_buff *)0) != 0L) {
      
#line 1701 
      ldv_inline_asm();
      
#line 1699 
      ;
    }
    else ;
    
#line 1700 
    pci_unmap_single(priv->pdev,(unsigned long long)addr,(unsigned long)size,1);
    
#line 1702 
    mwl8k_remove_dma_header(skb,(unsigned short)((int)tx_desc->qos_control));
    
#line 1704 
    wh = (struct ieee80211_hdr *)skb->data;
    
#line 1707 
    tx_desc->pkt_phys_addr = 0U;
    
#line 1708 
    tx_desc->pkt_len = (unsigned short)0U;
    
#line 1710 
    info = IEEE80211_SKB_CB(skb);
    
#line 1711 
    tmp = ieee80211_is_data((unsigned short)((int)wh->frame_control));
    
#line 1711 
    if (tmp != 0) {
      
#line 1712 
      rcu_read_lock();
      
#line 1713 
      sta = ieee80211_find_sta_by_ifaddr(hw,(u8 const *)(& wh->addr1),(u8 const *)(& wh->addr2));
      
#line 1715 
      if (sta != (struct ieee80211_sta *)0) {
        
#line 1716 
        sta_info = (struct mwl8k_sta *)(& sta->drv_priv);
        
#line 1717 
        if ((long)(sta_info == (struct mwl8k_sta *)0) != 0L) {
          
#line 1719 
          ldv_inline_asm();
          
#line 1717 
          ;
        }
        else ;
        
#line 1718 
        rate_info = tx_desc->rate_info;
        
#line 1724 
        if ((((int)rate_info >> 3) & 63) <= 0 || ((int)rate_info & 1) == 0) 
          
#line 1726 
          sta_info->is_ampdu_allowed = (unsigned char)0U; else 
#line 1728 
                                                               sta_info->is_ampdu_allowed = (unsigned char)1U;
      }
      else ;
      
#line 1731 
      rcu_read_unlock();
    }
    else ;
    
#line 1734 
    ieee80211_tx_info_clear_status(info);
    
#line 1739 
    info->__anonCompField_ieee80211_tx_info_100.status.rates[0].idx = (signed char)(-1);
    
#line 1740 
    info->__anonCompField_ieee80211_tx_info_100.status.rates[0].count = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))))1U;
    
#line 1742 
    if ((status & 7U) != 0U) 
#line 1743 
                             info->flags |= 512U; else ;
    
#line 1745 
    ieee80211_tx_status_irqsafe(hw,skb);
    
#line 1747 
    processed += 1;
  }
  ldv_52571: 
#line 1749 
  ;
  
#line 1664 
  if (txq->len != 0U) {
    int tmp_0;
    
#line 1664 
    tmp_0 = limit;
    
#line 1664 
    limit -= 1;
    
#line 1664 
    ;
    
#line 1664 
    if (tmp_0 != 0) 
#line 1666 
                    goto ldv_52570; else 
#line 1669 
                                         goto ldv_52569;
  }
  else 
#line 1669 
       goto ldv_52569;
  ldv_52569: 
#line 1670 
  ;
  
#line 1750 
  return processed;
}


#line 1754  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_txq_deinit(struct ieee80211_hw *hw, int index)
{
  
#line 1756 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 1757 
  struct mwl8k_tx_queue *txq = (struct mwl8k_tx_queue *)(& priv->txq) + index;
  
#line 1759 
  if (txq->txd == (struct mwl8k_tx_desc *)0) 
#line 1760 
                                             goto return_label; else ;
  
#line 1762 
  mwl8k_txq_reclaim(hw,index,2147483647,1);
  
#line 1764 
  kfree((void const *)txq->skb);
  
#line 1765 
  txq->skb = (struct sk_buff **)0;
  
#line 1767 
  pci_free_consistent(priv->pdev,4096UL,(void *)txq->txd,txq->txd_dma);
  
#line 1770 
  txq->txd = (struct mwl8k_tx_desc *)0;
  return_label: 
#line 1771 
                return;
}


#line 1775  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static struct mwl8k_ampdu_stream *mwl8k_add_stream(struct ieee80211_hw *hw, struct ieee80211_sta *sta, u8 tid)
{
  struct mwl8k_ampdu_stream *__retres;
  struct mwl8k_ampdu_stream *stream;
  int i;
  
#line 1778 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 1781 
  i = 0;
  
#line 1781 
  goto ldv_52587;
  ldv_52586: 
#line 1782 
  ;
  
#line 1782 
  stream = & priv->ampdu[i];
  
#line 1783 
  if ((unsigned int)stream->state == 0U) {
    
#line 1784 
    stream->sta = sta;
    
#line 1785 
    stream->state = (unsigned char)1U;
    
#line 1786 
    stream->tid = tid;
    
#line 1787 
    stream->idx = (unsigned char)i;
    
#line 1788 
    dev_printk("\001",(struct device const *)(& (hw->wiphy)->dev),"Added a new stream for %pM %d",(u8 *)(& sta->addr),(int)tid);
    
#line 1790 
    __retres = stream;
    
#line 1790 
    goto return_label;
  }
  else ;
  
#line 1781 
  i += 1;
  ldv_52587: 
#line 1782 
  ;
  
#line 1781 
  if (i <= 6) 
#line 1783 
              goto ldv_52586; else 
#line 1786 
                                   goto ldv_52588;
  ldv_52588: 
#line 1787 
  ;
  
#line 1793 
  __retres = (struct mwl8k_ampdu_stream *)0;
  return_label: 
#line 1793 
                return __retres;
}


#line 1797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_start_stream(struct ieee80211_hw *hw, struct mwl8k_ampdu_stream *stream)
{
  int __retres;
  int ret;
  
#line 1802 
  if ((unsigned int)stream->state != 1U) {
    
#line 1803 
    __retres = 0;
    
#line 1803 
    goto return_label;
  }
  else ;
  
#line 1804 
  ret = ieee80211_start_tx_ba_session(stream->sta,(unsigned short)((int)stream->tid),(unsigned short)0);
  
#line 1805 
  if (ret != 0) 
#line 1806 
                dev_printk("\001",(struct device const *)(& (hw->wiphy)->dev),"Failed to start stream for %pM %d: ",(u8 *)(& (stream->sta)->addr),(int)stream->tid,ret); else 
                                                                    
#line 1809 
                                                                    dev_printk("\001",(struct device const *)(& (hw->wiphy)->dev),"Started stream for %pM %d\n",(u8 *)(& (stream->sta)->addr),(int)stream->tid);
  
#line 1811 
  __retres = ret;
  return_label: 
#line 1811 
                return __retres;
}


#line 1815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_remove_stream(struct ieee80211_hw *hw, struct mwl8k_ampdu_stream *stream)
{
  
#line 1817 
  dev_printk("\001",(struct device const *)(& (hw->wiphy)->dev),"Remove stream for %pM %d\n",(u8 *)(& (stream->sta)->addr),(int)stream->tid);
  
#line 1819 
  memset((void *)stream,0,16UL);
  
#line 1820 
  return;
}


#line 1823  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static struct mwl8k_ampdu_stream *mwl8k_lookup_stream(struct ieee80211_hw *hw, u8 *addr, u8 tid)
{
  struct mwl8k_ampdu_stream *__retres;
  int i;
  
#line 1825 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 1828 
  i = 0;
  
#line 1828 
  goto ldv_52608;
  ldv_52607: 
#line 1829 
  ;
  {
    struct mwl8k_ampdu_stream *stream;
    int tmp;
    
#line 1830 
    stream = & priv->ampdu[i];
    
#line 1831 
    if ((unsigned int)stream->state == 0U) 
#line 1832 
                                           goto ldv_52606; else ;
    
#line 1833 
    tmp = memcmp((void const *)(& (stream->sta)->addr),(void const *)addr,6UL);
    
#line 1833 
    if (tmp == 0) {
      
#line 1833 
      if ((int)stream->tid == (int)tid) {
        
#line 1835 
        __retres = stream;
        
#line 1835 
        goto return_label;
      }
      else ;
    }
    else ;
  }
  ldv_52606: 
#line 1837 
  ;
  
#line 1828 
  i += 1;
  ldv_52608: 
#line 1829 
  ;
  
#line 1828 
  if (i <= 6) 
#line 1830 
              goto ldv_52607; else 
#line 1833 
                                   goto ldv_52609;
  ldv_52609: 
#line 1834 
  ;
  
#line 1837 
  __retres = (struct mwl8k_ampdu_stream *)0;
  return_label: 
#line 1837 
                return __retres;
}


#line 1841  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
__inline static bool mwl8k_ampdu_allowed(struct ieee80211_sta *sta, u8 tid)
{
  bool __retres;
  struct tx_traffic_info *tx_stats;
  
#line 1843 
  struct mwl8k_sta *sta_info = (struct mwl8k_sta *)(& sta->drv_priv);
  
#line 1846 
  if ((long)((unsigned int)tid > 7U) != 0L) {
    
#line 1848 
    ldv_inline_asm();
    
#line 1846 
    ;
  }
  else ;
  
#line 1847 
  tx_stats = & sta_info->tx_stats[(int)tid];
  
#line 1849 
  __retres = (_Bool)(((unsigned int)sta_info->is_ampdu_allowed != 0U && tx_stats->pkts > 64U) != 0);
  
#line 1849 
  return __retres;
}


#line 1853  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
__inline static void mwl8k_tx_count_packet(struct ieee80211_sta *sta, u8 tid)
{
  struct tx_traffic_info *tx_stats;
  
#line 1855 
  struct mwl8k_sta *sta_info = (struct mwl8k_sta *)(& sta->drv_priv);
  
#line 1858 
  if ((long)((unsigned int)tid > 7U) != 0L) {
    
#line 1860 
    ldv_inline_asm();
    
#line 1858 
    ;
  }
  else ;
  
#line 1859 
  tx_stats = & sta_info->tx_stats[(int)tid];
  
#line 1861 
  if (tx_stats->start_time == 0U) 
#line 1862 
                                  tx_stats->start_time = (unsigned int)jiffies; else ;
  
#line 1868 
  if (jiffies - (unsigned long)tx_stats->start_time > 250UL) {
    
#line 1869 
    tx_stats->pkts = 0U;
    
#line 1870 
    tx_stats->start_time = 0U;
  }
  else 
#line 1872 
       tx_stats->pkts += 1U;
  
#line 1873 
  return;
}


#line 1883  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_txq_xmit(struct ieee80211_hw *hw, int index, struct ieee80211_sta *sta, struct sk_buff *skb)
{
  struct ieee80211_tx_info *tx_info;
  struct mwl8k_vif *mwl8k_vif;
  struct ieee80211_hdr *wh;
  struct mwl8k_tx_queue *txq;
  struct mwl8k_tx_desc *tx;
  dma_addr_t dma;
  u32 txstatus;
  u8 txdatarate;
  u16 qos;
  int txpriority;
  int tmp_0;
  int tmp_1;
  int tmp_4;
  int tmp_8;
  int tmp_7;
  int tmp_6;
  int tmp_11;
  
#line 1888 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 1899 
  u8 tid = (unsigned char)0U;
  
#line 1900 
  struct mwl8k_ampdu_stream *stream = (struct mwl8k_ampdu_stream *)0;
  
#line 1901 
  bool start_ba_session = (_Bool)0;
  
#line 1902 
  bool mgmtframe = (_Bool)0;
  
#line 1903 
  struct ieee80211_mgmt *mgmt = (struct ieee80211_mgmt *)skb->data;
  
#line 1904 
  bool eapol_frame = (_Bool)0;
  
#line 1906 
  wh = (struct ieee80211_hdr *)skb->data;
  
#line 1907 
  tmp_0 = ieee80211_is_data_qos((unsigned short)((int)wh->frame_control));
  
#line 1907 
  if (tmp_0 != 0) {
    u8 *tmp;
    
#line 1908 
    tmp = ieee80211_get_qos_ctl(wh);
    
#line 1908 
    qos = *((__le16 *)tmp);
  }
  else 
#line 1910 
       qos = (unsigned short)0U;
  
#line 1912 
  if ((unsigned int)skb->protocol == 36488U) 
#line 1913 
                                             eapol_frame = (_Bool)1; else ;
  
#line 1915 
  tmp_1 = ieee80211_is_mgmt((unsigned short)((int)wh->frame_control));
  
#line 1915 
  if (tmp_1 != 0) 
#line 1916 
                  mgmtframe = (_Bool)1; else ;
  
#line 1918 
  if ((int)priv->ap_fw != 0) 
#line 1919 
                             mwl8k_encapsulate_tx_frame(priv,skb); else 
                                                                    
#line 1921 
                                                                    mwl8k_add_dma_header(priv,skb,0,0);
  
#line 1923 
  wh = & ((struct mwl8k_dma_data *)skb->data)->wh;
  
#line 1925 
  tx_info = IEEE80211_SKB_CB(skb);
  
#line 1926 
  mwl8k_vif = (struct mwl8k_vif *)(& (tx_info->__anonCompField_ieee80211_tx_info_100.control.vif)->drv_priv);
  
#line 1928 
  if ((tx_info->flags & 2U) != 0U) {
    
#line 1929 
    wh->seq_ctrl = (unsigned short)((unsigned int)wh->seq_ctrl & 15U);
    
#line 1930 
    wh->seq_ctrl = (unsigned short)((int)wh->seq_ctrl | (int)mwl8k_vif->seqno);
    
#line 1931 
    mwl8k_vif->seqno = (unsigned short)((unsigned int)mwl8k_vif->seqno + 16U);
  }
  else ;
  
#line 1935 
  txstatus = 0U;
  
#line 1936 
  txdatarate = (unsigned char)0U;
  
#line 1937 
  tmp_4 = ieee80211_is_mgmt((unsigned short)((int)wh->frame_control));
  
#line 1937 
  if (tmp_4 != 0) 
#line 1937 
                  goto _LOR;
  else {
    int tmp_5;
    
#line 1937 
    tmp_5 = ieee80211_is_ctl((unsigned short)((int)wh->frame_control));
    
#line 1937 
    if (tmp_5 != 0) {
      _LOR: {
              
#line 1939 
              txdatarate = (unsigned char)0U;
              
#line 1940 
              qos = (unsigned short)((unsigned int)qos | 65296U);
            }
    }
    else {
      int tmp_3;
      
#line 1941 
      tmp_3 = ieee80211_is_data((unsigned short)((int)wh->frame_control));
      
#line 1941 
      if (tmp_3 != 0) {
        bool tmp_2;
        
#line 1942 
        txdatarate = (unsigned char)1U;
        
#line 1943 
        tmp_2 = is_multicast_ether_addr((u8 const *)(& wh->addr1));
        
#line 1943 
        if ((int)tmp_2 != 0) 
#line 1944 
                             txstatus |= 8U; else ;
        
#line 1946 
        qos = (unsigned short)((unsigned int)qos & 65439U);
        
#line 1947 
        if ((tx_info->flags & 64U) != 0U) 
#line 1948 
                                          qos = (unsigned short)((unsigned int)qos | 96U); else 
                                                                    
#line 1950 
                                                                    qos = qos;
      }
      else ;
    }
  }
  
#line 1962 
  tmp_6 = ieee80211_is_action((unsigned short)((int)wh->frame_control));
  
#line 1962 
  if ((long)(tmp_6 != 0) != 0L) 
    
#line 1962 
    if ((long)((unsigned int)mgmt->u.action.category == 3U) != 0L) 
#line 1962 
                                                                   tmp_7 = 1; else 
                                                                    
#line 1962 
                                                                    tmp_7 = 0;
  else 
#line 1962 
       tmp_7 = 0;
  
#line 1962 
  if (tmp_7 != 0) 
    
#line 1962 
    if ((long)((unsigned int)mgmt->u.action.u.addba_req.action_code == 0U) != 0L) 
      
#line 1962 
      tmp_8 = 1; else 
#line 1962 
                      tmp_8 = 0;
  else 
#line 1962 
       tmp_8 = 0;
  
#line 1962 
  if (tmp_8 != 0) {
    
#line 1962 
    if ((long)((int)priv->ap_fw != 0) != 0L) {
      
#line 1966 
      u16 capab = mgmt->u.action.u.addba_req.capab;
      
#line 1967 
      tid = (unsigned char)((unsigned int)((unsigned char)((int)capab >> 2)) & 15U);
      
#line 1968 
      index = mwl8k_tid_queue_mapping((unsigned char)((int)tid));
    }
    else ;
  }
  else ;
  
#line 1971 
  txpriority = index;
  
#line 1973 
  if ((((int)priv->ap_fw != 0 && sta != (struct ieee80211_sta *)0) && (int)sta->ht_cap.ht_supported != 0) && ! eapol_frame) {
    int tmp_10;
    
#line 1973 
    tmp_10 = ieee80211_is_data_qos((unsigned short)((int)wh->frame_control));
    
#line 1973 
    if (tmp_10 != 0) {
      
#line 1975 
      tid = (unsigned char)((unsigned int)((unsigned char)qos) & 15U);
      
#line 1976 
      mwl8k_tx_count_packet(sta,(unsigned char)((int)tid));
      
#line 1977 
      ldv_spin_lock_78(& priv->stream_lock);
      
#line 1978 
      stream = mwl8k_lookup_stream(hw,(u8 *)(& sta->addr),(unsigned char)((int)tid));
      
#line 1979 
      if (stream != (struct mwl8k_ampdu_stream *)0) {
        
#line 1980 
        if ((unsigned int)stream->state == 3U) {
          {
            
#line 1981 
            int __ret_warn_on = ((int)qos & 96) == 0;
            
#line 1981 
            if ((long)(__ret_warn_on != 0) != 0L) 
#line 1981 
                                                  warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c",1981); else ;
            
#line 1981 
            long tmp_9 = (long)(__ret_warn_on != 0);
          }
          
#line 1982 
          txpriority = ((int)stream->idx + 5) % 8;
          
#line 1984 
          if ((unsigned int)stream->idx <= 1U) 
#line 1985 
                                               index = (int)stream->idx + 4; else ;
        }
        else 
          
#line 1988 
          if ((unsigned int)stream->state == 1U) ;
          else {
            
#line 2009 
            dev_warn((struct device const *)(& (hw->wiphy)->dev),"Cannot send packet while ADDBA ");
            
#line 2012 
            ldv_spin_unlock_79(& priv->stream_lock);
            
#line 2013 
            consume_skb(skb);
            
#line 2014 
            goto return_label;
          }
      }
      else {
        bool tmp_9_0;
        
#line 2022 
        tmp_9_0 = mwl8k_ampdu_allowed(sta,(unsigned char)((int)tid));
        
#line 2022 
        if ((int)tmp_9_0 != 0) {
          
#line 2023 
          stream = mwl8k_add_stream(hw,sta,(unsigned char)((int)tid));
          
#line 2024 
          if (stream != (struct mwl8k_ampdu_stream *)0) 
#line 2025 
                                                        start_ba_session = (_Bool)1; else ;
        }
        else ;
      }
      
#line 2028 
      ldv_spin_unlock_80(& priv->stream_lock);
    }
    else 
#line 1973 
         goto _LAND;
  }
  else {
    _LAND: {
             
#line 2030 
             qos = (unsigned short)((unsigned int)qos & 65439U);
             
#line 2031 
             qos = qos;
           }
  }
  
#line 2034 
  dma = pci_map_single(priv->pdev,(void *)skb->data,(unsigned long)skb->len,1);
  
#line 2037 
  tmp_11 = pci_dma_mapping_error(priv->pdev,dma);
  
#line 2037 
  if (tmp_11 != 0) {
    
#line 2038 
    dev_printk("\001",(struct device const *)(& (hw->wiphy)->dev),"failed to dma map skb, dropping TX frame.\n");
    
#line 2040 
    if ((int)start_ba_session != 0) {
      
#line 2041 
      ldv_spin_lock_81(& priv->stream_lock);
      
#line 2042 
      mwl8k_remove_stream(hw,stream);
      
#line 2043 
      ldv_spin_unlock_82(& priv->stream_lock);
    }
    else ;
    
#line 2045 
    consume_skb(skb);
    
#line 2046 
    goto return_label;
  }
  else ;
  
#line 2049 
  ldv_spin_lock_bh_83(& priv->tx_lock);
  
#line 2051 
  txq = (struct mwl8k_tx_queue *)(& priv->txq) + index;
  
#line 2061 
  if (txq->len > 125U) {
    
#line 2062 
    if (! mgmtframe || txq->len == 128U) {
      
#line 2063 
      if ((int)start_ba_session != 0) {
        
#line 2064 
        ldv_spin_lock_84(& priv->stream_lock);
        
#line 2065 
        mwl8k_remove_stream(hw,stream);
        
#line 2066 
        ldv_spin_unlock_85(& priv->stream_lock);
      }
      else ;
      
#line 2068 
      mwl8k_tx_start(priv);
      
#line 2069 
      ldv_spin_unlock_bh_86(& priv->tx_lock);
      
#line 2070 
      pci_unmap_single(priv->pdev,dma,(unsigned long)skb->len,1);
      
#line 2072 
      consume_skb(skb);
      
#line 2073 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2077 
  if ((long)(*(txq->skb + txq->tail) != (struct sk_buff *)0) != 0L) {
    
#line 2079 
    ldv_inline_asm();
    
#line 2077 
    ;
  }
  else ;
  
#line 2078 
  *(txq->skb + txq->tail) = skb;
  
#line 2080 
  tx = txq->txd + txq->tail;
  
#line 2081 
  tx->data_rate = txdatarate;
  
#line 2082 
  tx->tx_priority = (unsigned char)txpriority;
  
#line 2083 
  tx->qos_control = qos;
  
#line 2084 
  tx->pkt_phys_addr = (unsigned int)dma;
  
#line 2085 
  tx->pkt_len = (unsigned short)skb->len;
  
#line 2086 
  tx->rate_info = (unsigned short)0U;
  
#line 2087 
  if (! priv->ap_fw && sta != (struct ieee80211_sta *)0) 
#line 2088 
                                                         tx->peer_id = ((struct mwl8k_sta *)(& sta->drv_priv))->peer_id; else 
                                                                    
#line 2090 
                                                                    tx->peer_id = (unsigned char)0U;
  
#line 2092 
  if ((int)priv->ap_fw != 0) {
    int tmp_12;
    
#line 2092 
    tmp_12 = ieee80211_is_data((unsigned short)((int)wh->frame_control));
    
#line 2092 
    if (tmp_12 != 0) 
      
#line 2092 
      if (! eapol_frame) 
#line 2093 
                         tx->timestamp = ioread32(priv->regs + 42496U); else 
                                                                    
#line 2096 
                                                                    tx->timestamp = 0U;
    else 
#line 2096 
         tx->timestamp = 0U;
  }
  else 
#line 2096 
       tx->timestamp = 0U;
  
#line 2097 
  ldv_inline_asm();
  
#line 2099 
  tx->status = txstatus | 2147483648U;
  
#line 2101 
  txq->len += 1U;
  
#line 2102 
  priv->pending_tx_pkts += 1;
  
#line 2104 
  txq->tail += 1;
  
#line 2105 
  if (txq->tail == 128) 
#line 2106 
                        txq->tail = 0; else ;
  
#line 2108 
  mwl8k_tx_start(priv);
  
#line 2110 
  ldv_spin_unlock_bh_87(& priv->tx_lock);
  
#line 2113 
  if ((int)start_ba_session != 0) {
    int tmp_13;
    
#line 2114 
    ldv_spin_lock_88(& priv->stream_lock);
    
#line 2115 
    tmp_13 = mwl8k_start_stream(hw,stream);
    
#line 2115 
    if (tmp_13 != 0) 
#line 2116 
                     mwl8k_remove_stream(hw,stream); else ;
    
#line 2117 
    ldv_spin_unlock_89(& priv->stream_lock);
  }
  else ;
  return_label: 
#line 2119 
                return;
}


#line 2138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_fw_lock(struct ieee80211_hw *hw)
{
  int __retres;
  struct task_struct *tmp;
  
#line 2140 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 2142 
  tmp = get_current();
  
#line 2142 
  ;
  
#line 2142 
  if (priv->fw_mutex_owner != tmp) {
    int rc;
    
#line 2145 
    ldv_mutex_lock_90(& priv->fw_mutex);
    
#line 2146 
    ieee80211_stop_queues(hw);
    
#line 2148 
    rc = mwl8k_tx_wait_empty(hw);
    
#line 2149 
    if (rc != 0) {
      
#line 2150 
      if (! priv->hw_restart_in_progress) 
#line 2151 
                                          ieee80211_wake_queues(hw); else ;
      
#line 2153 
      ldv_mutex_unlock_91(& priv->fw_mutex);
      
#line 2155 
      __retres = rc;
      
#line 2155 
      goto return_label;
    }
    else ;
    
#line 2158 
    priv->fw_mutex_owner = get_current();
  }
  else ;
  
#line 2161 
  priv->fw_mutex_depth += 1;
  
#line 2163 
  __retres = 0;
  return_label: 
#line 2163 
                return __retres;
}


#line 2166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_fw_unlock(struct ieee80211_hw *hw)
{
  
#line 2168 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 2170 
  priv->fw_mutex_depth -= 1;
  
#line 2170 
  if (priv->fw_mutex_depth == 0) {
    
#line 2171 
    if (! priv->hw_restart_in_progress) 
#line 2172 
                                        ieee80211_wake_queues(hw); else ;
    
#line 2174 
    priv->fw_mutex_owner = (struct task_struct *)0;
    
#line 2175 
    ldv_mutex_unlock_92(& priv->fw_mutex);
  }
  else ;
  
#line 2177 
  return;
}


#line 2179 
static void mwl8k_enable_bsses(struct ieee80211_hw *hw, bool enable, u32 bitmap);


#line 2189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_post_cmd(struct ieee80211_hw *hw, struct mwl8k_cmd_pkt *cmd)
{
  int __retres;
  struct completion tmp;
  dma_addr_t dma_addr;
  unsigned int dma_size;
  int rc;
  u8 buf[32U];
  int tmp_1;
  unsigned long tmp_2;
  
#line 2191 
  init_completion(& tmp);
  
#line 2191 
  struct completion cmd_wait = cmd_wait;
  
#line 2192 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 2193 
  void *regs = priv->regs;
  
#line 2197 
  unsigned long timeout = 0UL;
  
#line 2199 
  u32 bitmap = 0U;
  {
    
#line 2201 
    struct _ddebug descriptor = {.modname = "mwl8k", .function = "mwl8k_post_cmd", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c", .format = "Posting %s [%d]\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))2202U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 2201 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) {
      char const *tmp_0;
      
#line 2201 
      ;
      
#line 2201 
      tmp_0 = mwl8k_cmd_name((unsigned short)((int)cmd->code),(char *)(& buf),32);
      
#line 2201 
      ;
      
#line 2201 
      __dynamic_dev_dbg(& descriptor,(struct device const *)(& (hw->wiphy)->dev),"Posting %s [%d]\n",tmp_0,(int)cmd->macid);
    }
    else ;
  }
  
#line 2209 
  rc = mwl8k_fw_lock(hw);
  
#line 2210 
  if (rc != 0) {
    
#line 2211 
    __retres = rc;
    
#line 2211 
    goto return_label;
  }
  else ;
  
#line 2213 
  if ((int)priv->ap_fw != 0 && priv->running_bsses != 0U) {
    
#line 2214 
    switch ((int)cmd->code) {
      case 266: 
#line 2215 
      ;
      case 28: 
#line 2216 
      ;
      case 30: 
#line 2217 
      ;
      case 31: 
#line 2218 
      ;
      case 32: 
#line 2219 
      ;
      case 275: 
#line 2220 
      ;
      case 293: 
#line 2221 
      ;
      
#line 2222 
      bitmap = priv->running_bsses;
      
#line 2223 
      mwl8k_enable_bsses(hw,(_Bool)0,bitmap);
      
#line 2224 
      goto ldv_52684;
    }
    ldv_52684: 
#line 2226 
    ;
  }
  else ;
  
#line 2228 
  cmd->result = (unsigned short)65535U;
  
#line 2229 
  dma_size = (unsigned int)cmd->length;
  
#line 2230 
  dma_addr = pci_map_single(priv->pdev,(void *)cmd,(unsigned long)dma_size,0);
  
#line 2232 
  tmp_1 = pci_dma_mapping_error(priv->pdev,dma_addr);
  
#line 2232 
  if (tmp_1 != 0) {
    
#line 2233 
    __retres = -12;
    
#line 2233 
    goto return_label;
  }
  else ;
  
#line 2235 
  priv->hostcmd_wait = & cmd_wait;
  
#line 2236 
  iowrite32((unsigned int)dma_addr,regs + 3088U);
  
#line 2237 
  iowrite32(2U,regs + 3096U);
  
#line 2239 
  iowrite32(1048576U,regs + 3096U);
  
#line 2242 
  tmp_2 = msecs_to_jiffies(10000U);
  
#line 2242 
  timeout = wait_for_completion_timeout(& cmd_wait,tmp_2);
  
#line 2245 
  priv->hostcmd_wait = (struct completion *)0;
  
#line 2248 
  pci_unmap_single(priv->pdev,dma_addr,(unsigned long)dma_size,0);
  
#line 2251 
  if (timeout == 0UL) {
    char const *tmp_3;
    
#line 2252 
    tmp_3 = mwl8k_cmd_name((unsigned short)((int)cmd->code),(char *)(& buf),32);
    
#line 2252 
    ;
    
#line 2252 
    dev_err((struct device const *)(& (hw->wiphy)->dev),"Command %s timeout after %u ms\n",tmp_3,10000);
    
#line 2255 
    rc = -110;
  }
  else {
    int ms;
    unsigned int tmp_4;
    
#line 2259 
    tmp_4 = jiffies_to_msecs(timeout);
    
#line 2259 
    ms = (int)(10000U - tmp_4);
    
#line 2261 
    if ((unsigned int)cmd->result != 0U) 
#line 2261 
                                         rc = -22; else 
#line 2261 
                                                        rc = 0;
    
#line 2262 
    if (rc != 0) {
      char const *tmp_5;
      
#line 2263 
      ;
      
#line 2263 
      tmp_5 = mwl8k_cmd_name((unsigned short)((int)cmd->code),(char *)(& buf),32);
      
#line 2263 
      ;
      
#line 2263 
      dev_err((struct device const *)(& (hw->wiphy)->dev),"Command %s error 0x%x\n",tmp_5,(int)cmd->result);
    }
    else 
      
#line 2266 
      if (ms > 2000) {
        char const *tmp_6;
        
#line 2267 
        ;
        
#line 2267 
        tmp_6 = mwl8k_cmd_name((unsigned short)((int)cmd->code),(char *)(& buf),32);
        
#line 2267 
        ;
        
#line 2267 
        dev_notice((struct device const *)(& (hw->wiphy)->dev),"Command %s took %d ms\n",tmp_6,ms);
      }
      else ;
  }
  
#line 2273 
  if (bitmap != 0U) 
#line 2274 
                    mwl8k_enable_bsses(hw,(_Bool)1,bitmap); else ;
  
#line 2276 
  mwl8k_fw_unlock(hw);
  
#line 2278 
  __retres = rc;
  return_label: 
#line 2278 
                return __retres;
}


#line 2281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_post_pervif_cmd(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct mwl8k_cmd_pkt *cmd)
{
  int tmp;
  
#line 2285 
  if (vif != (struct ieee80211_vif *)0) 
#line 2286 
                                        cmd->macid = (unsigned char)((struct mwl8k_vif *)(& vif->drv_priv))->macid; else ;
  
#line 2287 
  tmp = mwl8k_post_cmd(hw,cmd);
  
#line 2287 
  return tmp;
}


#line 2297 
void __compiletime_assert_2297(void);


#line 2300 
void __compiletime_assert_2300(void);


#line 2293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_setup_2ghz_band(struct ieee80211_hw *hw)
{
  
#line 2295 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  {
    
#line 2297 
    bool __cond = (_Bool)0;
    
#line 2297 
    if ((int)__cond != 0) 
#line 2297 
                          __compiletime_assert_2297(); else ;
  }
  
#line 2298 
  memcpy((void *)(& priv->channels_24),(void const *)(& mwl8k_channels_24),896UL);
  {
    
#line 2300 
    bool __cond_0 = (_Bool)0;
    
#line 2300 
    if ((int)__cond_0 != 0) 
#line 2300 
                            __compiletime_assert_2300(); else ;
  }
  
#line 2301 
  memcpy((void *)(& priv->rates_24),(void const *)(& mwl8k_rates_24),156UL);
  
#line 2303 
  priv->band_24.band = IEEE80211_BAND_2GHZ;
  
#line 2304 
  priv->band_24.channels = (struct ieee80211_channel *)(& priv->channels_24);
  
#line 2305 
  priv->band_24.n_channels = 14;
  
#line 2306 
  priv->band_24.bitrates = (struct ieee80211_rate *)(& priv->rates_24);
  
#line 2307 
  priv->band_24.n_bitrates = 13;
  
#line 2309 
  (hw->wiphy)->bands[0] = & priv->band_24;
  
#line 2310 
  return;
}


#line 2316 
void __compiletime_assert_2316(void);


#line 2319 
void __compiletime_assert_2319(void);


#line 2312  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_setup_5ghz_band(struct ieee80211_hw *hw)
{
  
#line 2314 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  {
    
#line 2316 
    bool __cond = (_Bool)0;
    
#line 2316 
    if ((int)__cond != 0) 
#line 2316 
                          __compiletime_assert_2316(); else ;
  }
  
#line 2317 
  memcpy((void *)(& priv->channels_50),(void const *)(& mwl8k_channels_50),256UL);
  {
    
#line 2319 
    bool __cond_0 = (_Bool)0;
    
#line 2319 
    if ((int)__cond_0 != 0) 
#line 2319 
                            __compiletime_assert_2319(); else ;
  }
  
#line 2320 
  memcpy((void *)(& priv->rates_50),(void const *)(& mwl8k_rates_50),96UL);
  
#line 2322 
  priv->band_50.band = IEEE80211_BAND_5GHZ;
  
#line 2323 
  priv->band_50.channels = (struct ieee80211_channel *)(& priv->channels_50);
  
#line 2324 
  priv->band_50.n_channels = 4;
  
#line 2325 
  priv->band_50.bitrates = (struct ieee80211_rate *)(& priv->rates_50);
  
#line 2326 
  priv->band_50.n_bitrates = 8;
  
#line 2328 
  (hw->wiphy)->bands[1] = & priv->band_50;
  
#line 2329 
  return;
}


#line 2370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_set_ht_caps(struct ieee80211_hw *hw, struct ieee80211_supported_band *band, u32 cap)
{
  int rx_streams;
  int tx_streams;
  unsigned int tmp_0;
  unsigned int tmp_2;
  
#line 2376 
  band->ht_cap.ht_supported = (_Bool)1;
  
#line 2378 
  if ((cap & 536870912U) != 0U) 
#line 2379 
                                band->ht_cap.cap = (unsigned short)((unsigned int)band->ht_cap.cap | 2048U); else ;
  
#line 2380 
  if ((cap & 134217728U) != 0U) 
#line 2381 
                                band->ht_cap.cap = (unsigned short)((unsigned int)band->ht_cap.cap | 16U); else ;
  
#line 2382 
  if ((cap & 67108864U) != 0U) {
    
#line 2383 
    _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_AMPDU_AGGREGATION);
    
#line 2384 
    band->ht_cap.ampdu_factor = (unsigned char)3U;
    
#line 2385 
    band->ht_cap.ampdu_density = (unsigned char)0U;
  }
  else ;
  
#line 2387 
  if ((cap & 16777216U) != 0U) 
#line 2388 
                               band->ht_cap.cap = (unsigned short)((unsigned int)band->ht_cap.cap | 768U); else ;
  
#line 2389 
  if ((cap & 8388608U) != 0U) 
#line 2390 
                              band->ht_cap.cap = (unsigned short)((unsigned int)band->ht_cap.cap | 128U); else ;
  
#line 2391 
  if ((cap & 4194304U) != 0U) 
#line 2392 
                              band->ht_cap.cap = (unsigned short)((unsigned int)band->ht_cap.cap | 64U); else ;
  
#line 2393 
  if ((cap & 2097152U) != 0U) 
#line 2394 
                              band->ht_cap.cap = (unsigned short)((unsigned int)band->ht_cap.cap | 32U); else ;
  
#line 2395 
  if ((cap & 12288U) != 0U) 
#line 2396 
                            band->ht_cap.cap = (unsigned short)((unsigned int)band->ht_cap.cap | 1024U); else ;
  
#line 2397 
  if ((cap & 256U) != 0U) 
#line 2398 
                          band->ht_cap.cap = (unsigned short)((unsigned int)band->ht_cap.cap | 2U); else ;
  
#line 2400 
  if (0 != 0) 
#line 2400 
              tmp_0 = (unsigned int)(((((unsigned long long)(cap >> 16) & 2ULL) != 0ULL) + (((unsigned long long)(cap >> 16) & 4ULL) != 0ULL)) + (((unsigned long long)(cap >> 16) & 8ULL) != 0ULL)); else 
                                                                    
#line 2400 
                                                                    tmp_0 = __arch_hweight32(cap & 917504U);
  
#line 2400 
  rx_streams = (int)tmp_0;
  
#line 2401 
  if (0 != 0) 
#line 2401 
              tmp_2 = (unsigned int)((((unsigned long long)(cap >> 8) & 64ULL) != 0ULL) + (((unsigned long long)(cap >> 8) & 128ULL) != 0ULL)) + (unsigned int)(((unsigned long long)(cap >> 16) & 1ULL) != 0ULL); else 
                                                                    
#line 2401 
                                                                    tmp_2 = __arch_hweight32(cap & 114688U);
  
#line 2401 
  tx_streams = (int)tmp_2;
  
#line 2403 
  band->ht_cap.mcs.rx_mask[0] = (unsigned char)255U;
  
#line 2404 
  if (rx_streams > 1) 
#line 2405 
                      band->ht_cap.mcs.rx_mask[1] = (unsigned char)255U; else ;
  
#line 2406 
  if (rx_streams > 2) 
#line 2407 
                      band->ht_cap.mcs.rx_mask[2] = (unsigned char)255U; else ;
  
#line 2408 
  band->ht_cap.mcs.rx_mask[4] = (unsigned char)1U;
  
#line 2409 
  band->ht_cap.mcs.tx_params = (unsigned char)1U;
  
#line 2411 
  if (rx_streams != tx_streams) {
    
#line 2412 
    band->ht_cap.mcs.tx_params = (unsigned char)((unsigned int)band->ht_cap.mcs.tx_params | 2U);
    
#line 2413 
    band->ht_cap.mcs.tx_params = (unsigned char)((int)band->ht_cap.mcs.tx_params | ((tx_streams + -1) << 2));
  }
  else ;
  
#line 2415 
  return;
}


#line 2419  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_set_caps(struct ieee80211_hw *hw, u32 caps)
{
  
#line 2421 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 2423 
  if (priv->caps != 0U) 
#line 2424 
                        goto return_label; else ;
  
#line 2426 
  if ((caps & 1U) != 0U || (caps & 7U) == 0U) {
    
#line 2427 
    mwl8k_setup_2ghz_band(hw);
    
#line 2428 
    if ((caps & 512U) != 0U) 
#line 2429 
                             mwl8k_set_ht_caps(hw,& priv->band_24,caps); else ;
  }
  else ;
  
#line 2432 
  if ((caps & 4U) != 0U) {
    
#line 2433 
    mwl8k_setup_5ghz_band(hw);
    
#line 2434 
    if ((caps & 512U) != 0U) 
#line 2435 
                             mwl8k_set_ht_caps(hw,& priv->band_50,caps); else ;
  }
  else ;
  
#line 2438 
  priv->caps = caps;
  return_label: 
#line 2439 
                return;
}


#line 2441  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_get_hw_spec_sta(struct ieee80211_hw *hw)
{
  int __retres;
  struct mwl8k_cmd_get_hw_spec_sta *cmd;
  int rc;
  int i;
  
#line 2443 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 2448 
  cmd = (struct mwl8k_cmd_get_hw_spec_sta *)kzalloc(84UL,208U);
  
#line 2449 
  if (cmd == (struct mwl8k_cmd_get_hw_spec_sta *)0) {
    
#line 2450 
    __retres = -12;
    
#line 2450 
    goto return_label;
  }
  else ;
  
#line 2452 
  cmd->header.code = (unsigned short)3U;
  
#line 2453 
  cmd->header.length = (unsigned short)84U;
  
#line 2455 
  memset((void *)(& cmd->perm_addr),255,6UL);
  
#line 2456 
  cmd->ps_cookie = (unsigned int)priv->cookie_dma;
  
#line 2457 
  cmd->rx_queue_ptr = (unsigned int)priv->rxq[0].rxd_dma;
  
#line 2458 
  cmd->num_tx_queues = (unsigned int)((int)priv->num_ampdu_queues + 4);
  
#line 2459 
  i = 0;
  
#line 2459 
  goto ldv_52764;
  ldv_52763: 
#line 2460 
  ;
  
#line 2460 
  cmd->tx_queue_ptrs[i] = (unsigned int)priv->txq[i].txd_dma;
  
#line 2459 
  i += 1;
  ldv_52764: 
#line 2460 
  ;
  
#line 2459 
  if ((int)priv->num_ampdu_queues + 4 > i) 
#line 2461 
                                           goto ldv_52763; else 
#line 2464 
                                                                goto ldv_52765;
  ldv_52765: 
#line 2465 
  ;
  
#line 2461 
  cmd->num_tx_desc_per_queue = 128U;
  
#line 2462 
  cmd->total_rxd = 256U;
  
#line 2464 
  rc = mwl8k_post_cmd(hw,& cmd->header);
  
#line 2466 
  if (rc == 0) {
    
#line 2467 
    SET_IEEE80211_PERM_ADDR(hw,(u8 *)(& cmd->perm_addr));
    
#line 2468 
    priv->num_mcaddrs = cmd->num_mcaddrs;
    
#line 2469 
    priv->fw_rev = cmd->fw_rev;
    
#line 2470 
    priv->hw_rev = cmd->hw_rev;
    
#line 2471 
    mwl8k_set_caps(hw,cmd->caps);
    
#line 2472 
    priv->ap_macids_supported = 0U;
    
#line 2473 
    priv->sta_macids_supported = 1U;
  }
  else ;
  
#line 2476 
  kfree((void const *)cmd);
  
#line 2477 
  __retres = rc;
  return_label: 
#line 2477 
                return __retres;
}


#line 2506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_get_hw_spec_ap(struct ieee80211_hw *hw)
{
  int __retres;
  struct mwl8k_cmd_get_hw_spec_ap *cmd;
  int rc;
  int i;
  u32 api_version;
  
#line 2508 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 2513 
  cmd = (struct mwl8k_cmd_get_hw_spec_ap *)kzalloc(100UL,208U);
  
#line 2514 
  if (cmd == (struct mwl8k_cmd_get_hw_spec_ap *)0) {
    
#line 2515 
    __retres = -12;
    
#line 2515 
    goto return_label;
  }
  else ;
  
#line 2517 
  cmd->header.code = (unsigned short)3U;
  
#line 2518 
  cmd->header.length = (unsigned short)100U;
  
#line 2520 
  memset((void *)(& cmd->perm_addr),255,6UL);
  
#line 2521 
  cmd->ps_cookie = (unsigned int)priv->cookie_dma;
  
#line 2523 
  rc = mwl8k_post_cmd(hw,& cmd->header);
  
#line 2525 
  if (rc == 0) {
    int off;
    
#line 2528 
    api_version = cmd->fw_api_version;
    
#line 2529 
    if ((priv->device_info)->fw_api_ap != api_version) {
      
#line 2530 
      printk("\001",(char *)"mwl8k",(priv->device_info)->part_name,(priv->device_info)->fw_api_ap,api_version);
      
#line 2535 
      rc = -22;
      
#line 2536 
      goto done;
    }
    else ;
    
#line 2538 
    SET_IEEE80211_PERM_ADDR(hw,(u8 *)(& cmd->perm_addr));
    
#line 2539 
    priv->num_mcaddrs = cmd->num_mcaddrs;
    
#line 2540 
    priv->fw_rev = cmd->fw_rev;
    
#line 2541 
    priv->hw_rev = cmd->hw_rev;
    
#line 2542 
    mwl8k_set_caps(hw,cmd->caps);
    
#line 2543 
    priv->ap_macids_supported = 255U;
    
#line 2544 
    priv->sta_macids_supported = 256U;
    
#line 2545 
    priv->num_ampdu_queues = (unsigned char)cmd->num_of_ampdu_queues;
    
#line 2546 
    if ((unsigned int)priv->num_ampdu_queues > 8U) {
      
#line 2547 
      dev_warn((struct device const *)(& (hw->wiphy)->dev),"fw reported %d ampdu queues",(int)priv->num_ampdu_queues,8);
      
#line 2551 
      priv->num_ampdu_queues = (unsigned char)8U;
    }
    else ;
    
#line 2553 
    off = (int)cmd->rxwrptr & 65535;
    
#line 2554 
    iowrite32((unsigned int)priv->rxq[0].rxd_dma,priv->sram + off);
    
#line 2556 
    off = (int)cmd->rxrdptr & 65535;
    
#line 2557 
    iowrite32((unsigned int)priv->rxq[0].rxd_dma,priv->sram + off);
    
#line 2559 
    priv->txq_offset[0] = cmd->wcbbase0 & 65535U;
    
#line 2560 
    priv->txq_offset[1] = cmd->wcbbase1 & 65535U;
    
#line 2561 
    priv->txq_offset[2] = cmd->wcbbase2 & 65535U;
    
#line 2562 
    priv->txq_offset[3] = cmd->wcbbase3 & 65535U;
    
#line 2564 
    i = 0;
    
#line 2564 
    goto ldv_52798;
    ldv_52797: 
#line 2565 
    ;
    
#line 2565 
    priv->txq_offset[i + 4] = cmd->wcbbase_ampdu[i] & 65535U;
    
#line 2564 
    i += 1;
    ldv_52798: 
#line 2565 
    ;
    
#line 2564 
    if ((int)priv->num_ampdu_queues > i) 
#line 2566 
                                         goto ldv_52797; else 
#line 2569 
                                                              goto ldv_52799;
    ldv_52799: 
#line 2570 
    ;
  }
  else ;
  done: 
#line 2569 
  ;
  
#line 2570 
  kfree((void const *)cmd);
  
#line 2571 
  __retres = rc;
  return_label: 
#line 2571 
                return __retres;
}


#line 2608  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_set_hw_spec(struct ieee80211_hw *hw)
{
  int __retres;
  struct mwl8k_cmd_set_hw_spec *cmd;
  int rc;
  int i;
  
#line 2610 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 2615 
  cmd = (struct mwl8k_cmd_set_hw_spec *)kzalloc(100UL,208U);
  
#line 2616 
  if (cmd == (struct mwl8k_cmd_set_hw_spec *)0) {
    
#line 2617 
    __retres = -12;
    
#line 2617 
    goto return_label;
  }
  else ;
  
#line 2619 
  cmd->header.code = (unsigned short)4U;
  
#line 2620 
  cmd->header.length = (unsigned short)100U;
  
#line 2622 
  cmd->ps_cookie = (unsigned int)priv->cookie_dma;
  
#line 2623 
  cmd->rx_queue_ptr = (unsigned int)priv->rxq[0].rxd_dma;
  
#line 2624 
  cmd->num_tx_queues = (unsigned int)((int)priv->num_ampdu_queues + 4);
  
#line 2632 
  i = 0;
  
#line 2632 
  goto ldv_52825;
  ldv_52824: 
#line 2633 
  ;
  {
    
#line 2633 
    int j = ((int)priv->num_ampdu_queues + 3) - i;
    
#line 2634 
    cmd->tx_queue_ptrs[i] = (unsigned int)priv->txq[j].txd_dma;
  }
  
#line 2632 
  i += 1;
  ldv_52825: 
#line 2633 
  ;
  
#line 2632 
  if ((int)priv->num_ampdu_queues + 4 > i) 
#line 2634 
                                           goto ldv_52824; else 
#line 2637 
                                                                goto ldv_52826;
  ldv_52826: 
#line 2638 
  ;
  
#line 2637 
  cmd->flags = 1712U;
  
#line 2642 
  cmd->num_tx_desc_per_queue = 128U;
  
#line 2643 
  cmd->total_rxd = 256U;
  
#line 2645 
  rc = mwl8k_post_cmd(hw,& cmd->header);
  
#line 2646 
  kfree((void const *)cmd);
  
#line 2648 
  __retres = rc;
  return_label: 
#line 2648 
                return __retres;
}


#line 2667  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static struct mwl8k_cmd_pkt *__mwl8k_cmd_mac_multicast_adr(struct ieee80211_hw *hw, int allmulti, struct netdev_hw_addr_list *mc_list)
{
  struct mwl8k_cmd_pkt *__retres;
  struct mwl8k_cmd_mac_multicast_adr *cmd;
  int size;
  
#line 2670 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 2673 
  int mc_count = 0;
  
#line 2675 
  if (mc_list != (struct netdev_hw_addr_list *)0) 
#line 2676 
                                                  mc_count = mc_list->count; else ;
  
#line 2678 
  if (allmulti != 0 || (int)priv->num_mcaddrs < mc_count) {
    
#line 2679 
    allmulti = 1;
    
#line 2680 
    mc_count = 0;
  }
  else ;
  
#line 2683 
  size = (int)((unsigned int)(mc_count * 6) + 12U);
  
#line 2685 
  cmd = (struct mwl8k_cmd_mac_multicast_adr *)kzalloc((unsigned long)size,32U);
  
#line 2686 
  if (cmd == (struct mwl8k_cmd_mac_multicast_adr *)0) {
    
#line 2687 
    __retres = (struct mwl8k_cmd_pkt *)0;
    
#line 2687 
    goto return_label;
  }
  else ;
  
#line 2689 
  cmd->header.code = (unsigned short)16U;
  
#line 2690 
  cmd->header.length = (unsigned short)size;
  
#line 2691 
  cmd->action = (unsigned short)9U;
  
#line 2694 
  if (allmulti != 0) 
#line 2695 
                     cmd->action = (unsigned short)((unsigned int)cmd->action | 4U);
  else 
    
#line 2696 
    if (mc_count != 0) {
      struct netdev_hw_addr *ha;
      struct netdev_hw_addr *tmp_0;
      struct netdev_hw_addr *tmp_1;
      
#line 2698 
      int i = 0;
      
#line 2700 
      cmd->action = (unsigned short)((unsigned int)cmd->action | 2U);
      
#line 2701 
      cmd->numaddr = (unsigned short)mc_count;
      {
        
#line 2702 
        struct list_head const *__mptr = (struct list_head const *)mc_list->list.next;
        
#line 2702 
        tmp_0 = (struct netdev_hw_addr *)__mptr;
      }
      
#line 2702 
      ha = tmp_0;
      
#line 2702 
      goto ldv_52848;
      ldv_52847: 
#line 2703 
      ;
      
#line 2703 
      memcpy((void *)(& cmd->addr[i]),(void const *)(& ha->addr),6UL);
      {
        
#line 2702 
        struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
        
#line 2702 
        tmp_1 = (struct netdev_hw_addr *)__mptr_0;
      }
      
#line 2702 
      ha = tmp_1;
      ldv_52848: 
#line 2704 
      ;
      
#line 2702 
      if ((void *)ha != (void *)mc_list) 
#line 2704 
                                         goto ldv_52847; else 
#line 2707 
                                                              goto ldv_52849;
      ldv_52849: 
#line 2708 
      ;
    }
    else ;
  
#line 2707 
  __retres = & cmd->header;
  return_label: 
#line 2707 
                return __retres;
}


#line 2723  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_get_stat(struct ieee80211_hw *hw, struct ieee80211_low_level_stats *stats)
{
  int __retres;
  struct mwl8k_cmd_get_stat *cmd;
  int rc;
  
#line 2729 
  cmd = (struct mwl8k_cmd_get_stat *)kzalloc(264UL,208U);
  
#line 2730 
  if (cmd == (struct mwl8k_cmd_get_stat *)0) {
    
#line 2731 
    __retres = -12;
    
#line 2731 
    goto return_label;
  }
  else ;
  
#line 2733 
  cmd->header.code = (unsigned short)20U;
  
#line 2734 
  cmd->header.length = (unsigned short)264U;
  
#line 2736 
  rc = mwl8k_post_cmd(hw,& cmd->header);
  
#line 2737 
  if (rc == 0) {
    
#line 2738 
    stats->dot11ACKFailureCount = cmd->stats[9];
    
#line 2740 
    stats->dot11RTSFailureCount = cmd->stats[12];
    
#line 2742 
    stats->dot11FCSErrorCount = cmd->stats[24];
    
#line 2744 
    stats->dot11RTSSuccessCount = cmd->stats[11];
  }
  else ;
  
#line 2747 
  kfree((void const *)cmd);
  
#line 2749 
  __retres = rc;
  return_label: 
#line 2749 
                return __retres;
}


#line 2763  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_radio_control(struct ieee80211_hw *hw, bool enable, bool force)
{
  int __retres;
  struct mwl8k_cmd_radio_control *cmd;
  int rc;
  
#line 2765 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 2769 
  if ((int)priv->radio_on == (int)enable && ! force) {
    
#line 2770 
    __retres = 0;
    
#line 2770 
    goto return_label;
  }
  else ;
  
#line 2772 
  cmd = (struct mwl8k_cmd_radio_control *)kzalloc(14UL,208U);
  
#line 2773 
  if (cmd == (struct mwl8k_cmd_radio_control *)0) {
    
#line 2774 
    __retres = -12;
    
#line 2774 
    goto return_label;
  }
  else ;
  
#line 2776 
  cmd->header.code = (unsigned short)28U;
  
#line 2777 
  cmd->header.length = (unsigned short)14U;
  
#line 2778 
  cmd->action = (unsigned short)1U;
  
#line 2779 
  if ((int)priv->radio_short_preamble != 0) 
#line 2779 
                                            cmd->control = (unsigned short)3U; else 
                                                                    
#line 2779 
                                                                    cmd->control = (unsigned short)1U;
  
#line 2780 
  if ((int)enable != 0) 
#line 2780 
                        cmd->radio_on = (unsigned short)1U; else 
#line 2780 
                                                                 cmd->radio_on = (unsigned short)0U;
  
#line 2782 
  rc = mwl8k_post_cmd(hw,& cmd->header);
  
#line 2783 
  kfree((void const *)cmd);
  
#line 2785 
  if (rc == 0) 
#line 2786 
               priv->radio_on = enable; else ;
  
#line 2788 
  __retres = rc;
  return_label: 
#line 2788 
                return __retres;
}


#line 2791  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_radio_disable(struct ieee80211_hw *hw)
{
  int tmp;
  
#line 2793 
  tmp = mwl8k_cmd_radio_control(hw,(_Bool)0,(_Bool)0);
  
#line 2793 
  return tmp;
}


#line 2796  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_radio_enable(struct ieee80211_hw *hw)
{
  int tmp;
  
#line 2798 
  tmp = mwl8k_cmd_radio_control(hw,(_Bool)1,(_Bool)0);
  
#line 2798 
  return tmp;
}


#line 2802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_set_radio_preamble(struct ieee80211_hw *hw, bool short_preamble)
{
  int tmp;
  
#line 2804 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 2806 
  priv->radio_short_preamble = short_preamble;
  
#line 2808 
  tmp = mwl8k_cmd_radio_control(hw,(_Bool)1,(_Bool)1);
  
#line 2808 
  return tmp;
}


#line 2825  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_rf_tx_power(struct ieee80211_hw *hw, int dBm)
{
  int __retres;
  struct mwl8k_cmd_rf_tx_power *cmd;
  int rc;
  
#line 2830 
  cmd = (struct mwl8k_cmd_rf_tx_power *)kzalloc(32UL,208U);
  
#line 2831 
  if (cmd == (struct mwl8k_cmd_rf_tx_power *)0) {
    
#line 2832 
    __retres = -12;
    
#line 2832 
    goto return_label;
  }
  else ;
  
#line 2834 
  cmd->header.code = (unsigned short)30U;
  
#line 2835 
  cmd->header.length = (unsigned short)32U;
  
#line 2836 
  cmd->action = (unsigned short)1U;
  
#line 2837 
  cmd->support_level = (unsigned short)dBm;
  
#line 2839 
  rc = mwl8k_post_cmd(hw,& cmd->header);
  
#line 2840 
  kfree((void const *)cmd);
  
#line 2842 
  __retres = rc;
  return_label: 
#line 2842 
                return __retres;
}


#line 2860  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_tx_power(struct ieee80211_hw *hw, struct ieee80211_conf *conf, unsigned short pwr)
{
  int __retres;
  struct mwl8k_cmd_tx_power *cmd;
  int rc;
  int i;
  
#line 2864 
  struct ieee80211_channel *channel = conf->chandef.chan;
  
#line 2865 
  enum nl80211_channel_type channel_type = cfg80211_get_chandef_type((struct cfg80211_chan_def const *)(& conf->chandef));
  
#line 2871 
  cmd = (struct mwl8k_cmd_tx_power *)kzalloc(42UL,208U);
  
#line 2872 
  if (cmd == (struct mwl8k_cmd_tx_power *)0) {
    
#line 2873 
    __retres = -12;
    
#line 2873 
    goto return_label;
  }
  else ;
  
#line 2875 
  cmd->header.code = (unsigned short)31U;
  
#line 2876 
  cmd->header.length = (unsigned short)42U;
  
#line 2877 
  cmd->action = (unsigned short)2U;
  
#line 2879 
  if (channel->band == (unsigned int)IEEE80211_BAND_2GHZ) 
#line 2880 
                                                          cmd->band = (unsigned short)1U;
  else 
    
#line 2881 
    if (channel->band == (unsigned int)IEEE80211_BAND_5GHZ) 
#line 2882 
                                                            cmd->band = (unsigned short)4U; else ;
  
#line 2884 
  cmd->channel = channel->hw_value;
  
#line 2886 
  if (channel_type <= (unsigned int)NL80211_CHAN_HT20) 
#line 2888 
                                                       cmd->bw = (unsigned short)2U;
  else {
    
#line 2890 
    cmd->bw = (unsigned short)4U;
    
#line 2891 
    if (channel_type == (unsigned int)NL80211_CHAN_HT40MINUS) 
#line 2892 
                                                              cmd->sub_ch = (unsigned short)3U;
    else 
      
#line 2893 
      if (channel_type == (unsigned int)NL80211_CHAN_HT40PLUS) 
#line 2894 
                                                               cmd->sub_ch = (unsigned short)1U; else ;
  }
  
#line 2897 
  i = 0;
  
#line 2897 
  goto ldv_52915;
  ldv_52914: 
#line 2898 
  ;
  
#line 2898 
  cmd->power_level_list[i] = pwr;
  
#line 2897 
  i += 1;
  ldv_52915: 
#line 2898 
  ;
  
#line 2897 
  if (i <= 11) 
#line 2899 
               goto ldv_52914; else 
#line 2902 
                                    goto ldv_52916;
  ldv_52916: 
#line 2903 
  ;
  
#line 2900 
  rc = mwl8k_post_cmd(hw,& cmd->header);
  
#line 2901 
  kfree((void const *)cmd);
  
#line 2903 
  __retres = rc;
  return_label: 
#line 2903 
                return __retres;
}


#line 2919  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_rf_antenna(struct ieee80211_hw *hw, int antenna, int mask)
{
  int __retres;
  struct mwl8k_cmd_rf_antenna *cmd;
  int rc;
  
#line 2924 
  cmd = (struct mwl8k_cmd_rf_antenna *)kzalloc(12UL,208U);
  
#line 2925 
  if (cmd == (struct mwl8k_cmd_rf_antenna *)0) {
    
#line 2926 
    __retres = -12;
    
#line 2926 
    goto return_label;
  }
  else ;
  
#line 2928 
  cmd->header.code = (unsigned short)32U;
  
#line 2929 
  cmd->header.length = (unsigned short)12U;
  
#line 2930 
  cmd->antenna = (unsigned short)antenna;
  
#line 2931 
  cmd->mode = (unsigned short)mask;
  
#line 2933 
  rc = mwl8k_post_cmd(hw,& cmd->header);
  
#line 2934 
  kfree((void const *)cmd);
  
#line 2936 
  __retres = rc;
  return_label: 
#line 2936 
                return __retres;
}


#line 2948  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_set_beacon(struct ieee80211_hw *hw, struct ieee80211_vif *vif, u8 *beacon, int len)
{
  int __retres;
  struct mwl8k_cmd_set_beacon *cmd;
  int rc;
  
#line 2954 
  cmd = (struct mwl8k_cmd_set_beacon *)kzalloc((unsigned long)len + 10UL,208U);
  
#line 2955 
  if (cmd == (struct mwl8k_cmd_set_beacon *)0) {
    
#line 2956 
    __retres = -12;
    
#line 2956 
    goto return_label;
  }
  else ;
  
#line 2958 
  cmd->header.code = (unsigned short)256U;
  
#line 2959 
  cmd->header.length = (unsigned short)((unsigned int)((unsigned short)len) + 10U);
  
#line 2960 
  cmd->beacon_len = (unsigned short)len;
  
#line 2961 
  memcpy((void *)(& cmd->beacon),(void const *)beacon,(unsigned long)len);
  
#line 2963 
  rc = mwl8k_post_pervif_cmd(hw,vif,& cmd->header);
  
#line 2964 
  kfree((void const *)cmd);
  
#line 2966 
  __retres = rc;
  return_label: 
#line 2966 
                return __retres;
}


#line 2976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_set_pre_scan(struct ieee80211_hw *hw)
{
  int __retres;
  struct mwl8k_cmd_set_pre_scan *cmd;
  int rc;
  
#line 2981 
  cmd = (struct mwl8k_cmd_set_pre_scan *)kzalloc(8UL,208U);
  
#line 2982 
  if (cmd == (struct mwl8k_cmd_set_pre_scan *)0) {
    
#line 2983 
    __retres = -12;
    
#line 2983 
    goto return_label;
  }
  else ;
  
#line 2985 
  cmd->header.code = (unsigned short)263U;
  
#line 2986 
  cmd->header.length = (unsigned short)8U;
  
#line 2988 
  rc = mwl8k_post_cmd(hw,& cmd->header);
  
#line 2989 
  kfree((void const *)cmd);
  
#line 2991 
  __retres = rc;
  return_label: 
#line 2991 
                return __retres;
}


#line 3006  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_bbp_reg_access(struct ieee80211_hw *hw, u16 action, u16 offset, u8 *value)
{
  int __retres;
  struct mwl8k_cmd_bbp_reg_access *cmd;
  int rc;
  
#line 3014 
  cmd = (struct mwl8k_cmd_bbp_reg_access *)kzalloc(16UL,208U);
  
#line 3015 
  if (cmd == (struct mwl8k_cmd_bbp_reg_access *)0) {
    
#line 3016 
    __retres = -12;
    
#line 3016 
    goto return_label;
  }
  else ;
  
#line 3018 
  cmd->header.code = (unsigned short)26U;
  
#line 3019 
  cmd->header.length = (unsigned short)16U;
  
#line 3020 
  cmd->action = action;
  
#line 3021 
  cmd->offset = offset;
  
#line 3023 
  rc = mwl8k_post_cmd(hw,& cmd->header);
  
#line 3025 
  if (rc == 0) 
#line 3026 
               *value = cmd->value; else 
#line 3028 
                                         *value = (unsigned char)0U;
  
#line 3030 
  kfree((void const *)cmd);
  
#line 3032 
  __retres = rc;
  return_label: 
#line 3032 
                return __retres;
}


#line 3045  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_set_post_scan(struct ieee80211_hw *hw, __u8 const *mac)
{
  int __retres;
  struct mwl8k_cmd_set_post_scan *cmd;
  int rc;
  
#line 3050 
  cmd = (struct mwl8k_cmd_set_post_scan *)kzalloc(18UL,208U);
  
#line 3051 
  if (cmd == (struct mwl8k_cmd_set_post_scan *)0) {
    
#line 3052 
    __retres = -12;
    
#line 3052 
    goto return_label;
  }
  else ;
  
#line 3054 
  cmd->header.code = (unsigned short)264U;
  
#line 3055 
  cmd->header.length = (unsigned short)18U;
  
#line 3056 
  cmd->isibss = 0U;
  
#line 3057 
  memcpy((void *)(& cmd->bssid),(void const *)mac,6UL);
  
#line 3059 
  rc = mwl8k_post_cmd(hw,& cmd->header);
  
#line 3060 
  kfree((void const *)cmd);
  
#line 3062 
  __retres = rc;
  return_label: 
#line 3062 
                return __retres;
}


#line 3065  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int freq_to_idx(struct mwl8k_priv *priv, int freq)
{
  struct ieee80211_supported_band *sband;
  int band;
  int ch;
  
#line 3068 
  int idx = 0;
  
#line 3070 
  band = 0;
  
#line 3070 
  goto ldv_52985;
  ldv_52984: 
#line 3071 
  ;
  
#line 3071 
  sband = ((priv->hw)->wiphy)->bands[band];
  
#line 3072 
  if (sband == (struct ieee80211_supported_band *)0) 
#line 3073 
                                                     goto ldv_52979; else ;
  
#line 3075 
  ch = 0;
  
#line 3075 
  goto ldv_52982;
  ldv_52981: 
#line 3076 
  ;
  
#line 3076 
  if ((int)(sband->channels + ch)->center_freq == freq) 
#line 3077 
                                                        goto exit; else ;
  
#line 3075 
  ch += 1;
  
#line 3075 
  idx += 1;
  ldv_52982: 
#line 3076 
  ;
  
#line 3075 
  if (sband->n_channels > ch) 
#line 3077 
                              goto ldv_52981; else 
#line 3080 
                                                   goto ldv_52983;
  ldv_52983: 
#line 3081 
  ;
  ldv_52979: 
#line 3082 
  ;
  
#line 3070 
  band += 1;
  ldv_52985: 
#line 3071 
  ;
  
#line 3070 
  if (band <= 2) 
#line 3072 
                 goto ldv_52984; else 
#line 3075 
                                      goto ldv_52986;
  ldv_52986: 
#line 3076 
  ;
  exit: 
#line 3080 
  ;
  
#line 3081 
  return idx;
}


#line 3084  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_update_survey(struct mwl8k_priv *priv, struct ieee80211_channel *channel)
{
  u32 cca_cnt;
  u32 rx_rdy;
  s8 idx;
  struct survey_info *survey;
  int tmp;
  unsigned int tmp_0;
  
#line 3088 
  s8 nf = (signed char)0;
  
#line 3091 
  tmp = freq_to_idx(priv,(int)(priv->acs_chan)->center_freq);
  
#line 3091 
  idx = (signed char)tmp;
  
#line 3092 
  if ((int)idx > 17) {
    
#line 3093 
    dev_err((struct device const *)(& ((priv->hw)->wiphy)->dev),"Failed to update survey\n");
    
#line 3094 
    goto return_label;
  }
  else ;
  
#line 3097 
  survey = & priv->survey[(int)idx];
  
#line 3099 
  cca_cnt = ioread32(priv->regs + 42656U);
  
#line 3100 
  cca_cnt /= 1000U;
  
#line 3101 
  survey->time_busy = (unsigned long long)cca_cnt;
  
#line 3103 
  rx_rdy = ioread32(priv->regs + 43104U);
  
#line 3104 
  rx_rdy /= 1000U;
  
#line 3105 
  survey->time_rx = (unsigned long long)rx_rdy;
  
#line 3107 
  priv->channel_time = jiffies - priv->channel_time;
  
#line 3108 
  tmp_0 = jiffies_to_msecs(priv->channel_time);
  
#line 3108 
  survey->time = (unsigned long long)tmp_0;
  
#line 3110 
  survey->channel = channel;
  
#line 3112 
  mwl8k_cmd_bbp_reg_access(priv->hw,(unsigned short)0,(unsigned short)103,(u8 *)(& nf));
  
#line 3115 
  survey->noise = (signed char)(- ((int)nf));
  
#line 3117 
  survey->filled = 45U;
  return_label: 
#line 3118 
                return;
}


#line 3133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_set_rf_channel(struct ieee80211_hw *hw, struct ieee80211_conf *conf)
{
  int __retres;
  struct mwl8k_cmd_set_rf_channel *cmd;
  int rc;
  
#line 3136 
  struct ieee80211_channel *channel = conf->chandef.chan;
  
#line 3137 
  enum nl80211_channel_type channel_type = cfg80211_get_chandef_type((struct cfg80211_chan_def const *)(& conf->chandef));
  
#line 3140 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 3143 
  cmd = (struct mwl8k_cmd_set_rf_channel *)kzalloc(15UL,208U);
  
#line 3144 
  if (cmd == (struct mwl8k_cmd_set_rf_channel *)0) {
    
#line 3145 
    __retres = -12;
    
#line 3145 
    goto return_label;
  }
  else ;
  
#line 3147 
  cmd->header.code = (unsigned short)266U;
  
#line 3148 
  cmd->header.length = (unsigned short)15U;
  
#line 3149 
  cmd->action = (unsigned short)1U;
  
#line 3150 
  cmd->current_channel = (unsigned char)channel->hw_value;
  
#line 3152 
  if (channel->band == (unsigned int)IEEE80211_BAND_2GHZ) 
#line 3153 
                                                          cmd->channel_flags |= 1U;
  else 
    
#line 3154 
    if (channel->band == (unsigned int)IEEE80211_BAND_5GHZ) 
#line 3155 
                                                            cmd->channel_flags |= 4U; else ;
  
#line 3157 
  if (! priv->sw_scan_start) {
    
#line 3158 
    if (channel_type <= (unsigned int)NL80211_CHAN_HT20) 
#line 3160 
                                                         cmd->channel_flags |= 128U;
    else 
      
#line 3161 
      if (channel_type == (unsigned int)NL80211_CHAN_HT40MINUS) 
#line 3162 
                                                                cmd->channel_flags |= 6400U;
      else 
        
#line 3163 
        if (channel_type == (unsigned int)NL80211_CHAN_HT40PLUS) 
#line 3164 
                                                                 cmd->channel_flags |= 2304U; else ;
  }
  else 
#line 3166 
       cmd->channel_flags |= 128U;
  
#line 3169 
  if ((int)priv->sw_scan_start != 0) {
    
#line 3174 
    if (priv->channel_time != 0UL) 
#line 3175 
                                   mwl8k_update_survey(priv,priv->acs_chan); else ;
    
#line 3177 
    priv->channel_time = jiffies;
    
#line 3178 
    priv->acs_chan = channel;
  }
  else ;
  
#line 3181 
  rc = mwl8k_post_cmd(hw,& cmd->header);
  
#line 3182 
  kfree((void const *)cmd);
  
#line 3184 
  __retres = rc;
  return_label: 
#line 3184 
                return __retres;
}


#line 3205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void legacy_rate_mask_to_array(u8 *rates, u32 mask)
{
  int i;
  int j;
  
#line 3213 
  mask &= 8175U;
  
#line 3215 
  i = 0;
  
#line 3215 
  j = 0;
  
#line 3215 
  goto ldv_53023;
  ldv_53022: 
#line 3216 
  ;
  
#line 3216 
  if (((unsigned int)(1 << i) & mask) != 0U) {
    int tmp;
    
#line 3217 
    tmp = j;
    
#line 3217 
    j += 1;
    
#line 3217 
    *(rates + tmp) = (unsigned char)mwl8k_rates_24[i].hw_value;
  }
  else ;
  
#line 3215 
  i += 1;
  ldv_53023: 
#line 3216 
  ;
  
#line 3215 
  if (i <= 12) 
#line 3217 
               goto ldv_53022; else 
#line 3220 
                                    goto ldv_53024;
  ldv_53024: 
#line 3221 
  ;
  
#line 3222 
  return;
}


#line 3222  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_set_aid(struct ieee80211_hw *hw, struct ieee80211_vif *vif, u32 legacy_rate_mask)
{
  int __retres;
  struct mwl8k_cmd_update_set_aid *cmd;
  u16 prot_mode;
  int rc;
  
#line 3229 
  cmd = (struct mwl8k_cmd_update_set_aid *)kzalloc(32UL,208U);
  
#line 3230 
  if (cmd == (struct mwl8k_cmd_update_set_aid *)0) {
    
#line 3231 
    __retres = -12;
    
#line 3231 
    goto return_label;
  }
  else ;
  
#line 3233 
  cmd->header.code = (unsigned short)269U;
  
#line 3234 
  cmd->header.length = (unsigned short)32U;
  
#line 3235 
  cmd->aid = vif->bss_conf.aid;
  
#line 3236 
  memcpy((void *)(& cmd->bssid),(void const *)vif->bss_conf.bssid,6UL);
  
#line 3238 
  if ((int)vif->bss_conf.use_cts_prot != 0) 
#line 3239 
                                            prot_mode = (unsigned short)7U;
  else {
    
#line 3241 
    switch ((int)vif->bss_conf.ht_operation_mode & 3) {
      case 2: 
#line 3243 
      ;
      
#line 3244 
      prot_mode = (unsigned short)2U;
      
#line 3245 
      goto ldv_53034;
      case 3: 
#line 3246 
      ;
      
#line 3247 
      prot_mode = (unsigned short)6U;
      
#line 3248 
      goto ldv_53034;
      default: 
#line 3249 
      ;
      
#line 3250 
      prot_mode = (unsigned short)0U;
      
#line 3251 
      goto ldv_53034;
    }
    ldv_53034: 
#line 3253 
    ;
  }
  
#line 3254 
  cmd->protection_mode = prot_mode;
  
#line 3256 
  legacy_rate_mask_to_array((u8 *)(& cmd->supp_rates),legacy_rate_mask);
  
#line 3258 
  rc = mwl8k_post_cmd(hw,& cmd->header);
  
#line 3259 
  kfree((void const *)cmd);
  
#line 3261 
  __retres = rc;
  return_label: 
#line 3261 
                return __retres;
}


#line 3277  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_set_rate(struct ieee80211_hw *hw, struct ieee80211_vif *vif, u32 legacy_rate_mask, u8 *mcs_rates)
{
  int __retres;
  struct mwl8k_cmd_set_rate *cmd;
  int rc;
  
#line 3283 
  cmd = (struct mwl8k_cmd_set_rate *)kzalloc(54UL,208U);
  
#line 3284 
  if (cmd == (struct mwl8k_cmd_set_rate *)0) {
    
#line 3285 
    __retres = -12;
    
#line 3285 
    goto return_label;
  }
  else ;
  
#line 3287 
  cmd->header.code = (unsigned short)272U;
  
#line 3288 
  cmd->header.length = (unsigned short)54U;
  
#line 3289 
  legacy_rate_mask_to_array((u8 *)(& cmd->legacy_rates),legacy_rate_mask);
  
#line 3290 
  memcpy((void *)(& cmd->mcs_set),(void const *)mcs_rates,16UL);
  
#line 3292 
  rc = mwl8k_post_cmd(hw,& cmd->header);
  
#line 3293 
  kfree((void const *)cmd);
  
#line 3295 
  __retres = rc;
  return_label: 
#line 3295 
                return __retres;
}


#line 3309  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_finalize_join(struct ieee80211_hw *hw, void *frame, int framelen, int dtim)
{
  int __retres;
  struct mwl8k_cmd_finalize_join *cmd;
  int payload_len;
  int rc;
  int tmp_0;
  unsigned int tmp_1;
  
#line 3313 
  struct ieee80211_mgmt *payload = (struct ieee80211_mgmt *)frame;
  
#line 3317 
  cmd = (struct mwl8k_cmd_finalize_join *)kzalloc(140UL,208U);
  
#line 3318 
  if (cmd == (struct mwl8k_cmd_finalize_join *)0) {
    
#line 3319 
    __retres = -12;
    
#line 3319 
    goto return_label;
  }
  else ;
  
#line 3321 
  cmd->header.code = (unsigned short)273U;
  
#line 3322 
  cmd->header.length = (unsigned short)140U;
  
#line 3323 
  if (dtim != 0) 
#line 3323 
                 tmp_0 = dtim; else 
#line 3323 
                                    tmp_0 = 1;
  
#line 3323 
  cmd->sleep_interval = (unsigned int)tmp_0;
  
#line 3325 
  tmp_1 = ieee80211_hdrlen((unsigned short)((int)payload->frame_control));
  
#line 3325 
  payload_len = (int)((unsigned int)framelen - tmp_1);
  
#line 3326 
  if (payload_len < 0) 
#line 3327 
                       payload_len = 0;
  else 
    
#line 3328 
    if (payload_len > 128) 
#line 3329 
                           payload_len = 128; else ;
  
#line 3331 
  memcpy((void *)(& cmd->beacon_data),(void const *)(& payload->u.beacon),(unsigned long)payload_len);
  
#line 3333 
  rc = mwl8k_post_cmd(hw,& cmd->header);
  
#line 3334 
  kfree((void const *)cmd);
  
#line 3336 
  __retres = rc;
  return_label: 
#line 3336 
                return __retres;
}


#line 3349  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_set_rts_threshold(struct ieee80211_hw *hw, int rts_thresh)
{
  int __retres;
  struct mwl8k_cmd_set_rts_threshold *cmd;
  int rc;
  
#line 3354 
  cmd = (struct mwl8k_cmd_set_rts_threshold *)kzalloc(12UL,208U);
  
#line 3355 
  if (cmd == (struct mwl8k_cmd_set_rts_threshold *)0) {
    
#line 3356 
    __retres = -12;
    
#line 3356 
    goto return_label;
  }
  else ;
  
#line 3358 
  cmd->header.code = (unsigned short)275U;
  
#line 3359 
  cmd->header.length = (unsigned short)12U;
  
#line 3360 
  cmd->action = (unsigned short)1U;
  
#line 3361 
  cmd->threshold = (unsigned short)rts_thresh;
  
#line 3363 
  rc = mwl8k_post_cmd(hw,& cmd->header);
  
#line 3364 
  kfree((void const *)cmd);
  
#line 3366 
  __retres = rc;
  return_label: 
#line 3366 
                return __retres;
}


#line 3378  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_set_slot(struct ieee80211_hw *hw, bool short_slot_time)
{
  int __retres;
  struct mwl8k_cmd_set_slot *cmd;
  int rc;
  
#line 3383 
  cmd = (struct mwl8k_cmd_set_slot *)kzalloc(11UL,208U);
  
#line 3384 
  if (cmd == (struct mwl8k_cmd_set_slot *)0) {
    
#line 3385 
    __retres = -12;
    
#line 3385 
    goto return_label;
  }
  else ;
  
#line 3387 
  cmd->header.code = (unsigned short)276U;
  
#line 3388 
  cmd->header.length = (unsigned short)11U;
  
#line 3389 
  cmd->action = (unsigned short)1U;
  
#line 3390 
  cmd->short_slot = (unsigned char)short_slot_time;
  
#line 3392 
  rc = mwl8k_post_cmd(hw,& cmd->header);
  
#line 3393 
  kfree((void const *)cmd);
  
#line 3395 
  __retres = rc;
  return_label: 
#line 3395 
                return __retres;
}


#line 3449  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_set_edca_params(struct ieee80211_hw *hw, __u8 qnum, __u16 cw_min, __u16 cw_max, __u8 aifs, __u16 txop)
{
  int __retres;
  struct mwl8k_cmd_set_edca_params *cmd;
  int rc;
  
#line 3453 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 3457 
  cmd = (struct mwl8k_cmd_set_edca_params *)kzalloc(24UL,208U);
  
#line 3458 
  if (cmd == (struct mwl8k_cmd_set_edca_params *)0) {
    
#line 3459 
    __retres = -12;
    
#line 3459 
    goto return_label;
  }
  else ;
  
#line 3461 
  cmd->header.code = (unsigned short)277U;
  
#line 3462 
  cmd->header.length = (unsigned short)24U;
  
#line 3463 
  cmd->action = (unsigned short)7U;
  
#line 3464 
  cmd->txop = txop;
  
#line 3465 
  if ((int)priv->ap_fw != 0) {
    int tmp_68;
    int tmp_137;
    
#line 3466 
    if (0 != 0) {
      int tmp_66;
      
#line 3466 
      if ((int)cw_max + 1 <= 0) 
#line 3466 
                                tmp_66 = ____ilog2_NaN();
      else {
        int tmp_65;
        
#line 3466 
        if ((int)cw_max + 1 >= 0) {
          int tmp_64;
          
#line 3466 
          if (((unsigned long long)((int)cw_max + 1) & 4611686018427387904ULL) == 0ULL) {
            int tmp_63;
            
#line 3466 
            if (((unsigned long long)((int)cw_max + 1) & 2305843009213693952ULL) == 0ULL) {
              int tmp_62;
              
#line 3466 
              if (((unsigned long long)((int)cw_max + 1) & 1152921504606846976ULL) == 0ULL) {
                int tmp_61;
                
#line 3466 
                if (((unsigned long long)((int)cw_max + 1) & 576460752303423488ULL) == 0ULL) {
                  int tmp_60;
                  
#line 3466 
                  if (((unsigned long long)((int)cw_max + 1) & 288230376151711744ULL) == 0ULL) {
                    int tmp_59;
                    
#line 3466 
                    if (((unsigned long long)((int)cw_max + 1) & 144115188075855872ULL) == 0ULL) {
                      int tmp_58;
                      
#line 3466 
                      if (((unsigned long long)((int)cw_max + 1) & 72057594037927936ULL) == 0ULL) {
                        int tmp_57;
                        
#line 3466 
                        if (((unsigned long long)((int)cw_max + 1) & 36028797018963968ULL) == 0ULL) {
                          int tmp_56;
                          
#line 3466 
                          if (((unsigned long long)((int)cw_max + 1) & 18014398509481984ULL) == 0ULL) {
                            int tmp_55;
                            
#line 3466 
                            if (((unsigned long long)((int)cw_max + 1) & 9007199254740992ULL) == 0ULL) {
                              int tmp_54;
                              
#line 3466 
                              if (((unsigned long long)((int)cw_max + 1) & 4503599627370496ULL) == 0ULL) {
                                int tmp_53;
                                
#line 3466 
                                if (((unsigned long long)((int)cw_max + 1) & 2251799813685248ULL) == 0ULL) {
                                  int tmp_52;
                                  
#line 3466 
                                  if (((unsigned long long)((int)cw_max + 1) & 1125899906842624ULL) == 0ULL) {
                                    int tmp_51;
                                    
#line 3466 
                                    if (((unsigned long long)((int)cw_max + 1) & 562949953421312ULL) == 0ULL) {
                                      int tmp_50;
                                      
#line 3466 
                                      if (((unsigned long long)((int)cw_max + 1) & 281474976710656ULL) == 0ULL) {
                                        int tmp_49;
                                        
#line 3466 
                                        if (((unsigned long long)((int)cw_max + 1) & 140737488355328ULL) == 0ULL) {
                                          int tmp_48;
                                          
#line 3466 
                                          if (((unsigned long long)((int)cw_max + 1) & 70368744177664ULL) == 0ULL) {
                                            int tmp_47;
                                            
#line 3466 
                                            if (((unsigned long long)((int)cw_max + 1) & 35184372088832ULL) == 0ULL) {
                                              int tmp_46;
                                              
#line 3466 
                                              if (((unsigned long long)((int)cw_max + 1) & 17592186044416ULL) == 0ULL) {
                                                int tmp_45;
                                                
#line 3466 
                                                if (((unsigned long long)((int)cw_max + 1) & 8796093022208ULL) == 0ULL) {
                                                  int tmp_44;
                                                  
#line 3466 
                                                  if (((unsigned long long)((int)cw_max + 1) & 4398046511104ULL) == 0ULL) {
                                                    int tmp_43;
                                                    
#line 3466 
                                                    if (((unsigned long long)((int)cw_max + 1) & 2199023255552ULL) == 0ULL) {
                                                      int tmp_42;
                                                      
#line 3466 
                                                      if (((unsigned long long)((int)cw_max + 1) & 1099511627776ULL) == 0ULL) {
                                                        int tmp_41;
                                                        
#line 3466 
                                                        if (((unsigned long long)((int)cw_max + 1) & 549755813888ULL) == 0ULL) {
                                                          int tmp_40;
                                                          
#line 3466 
                                                          if (((unsigned long long)((int)cw_max + 1) & 274877906944ULL) == 0ULL) {
                                                            int tmp_39;
                                                            
#line 3466 
                                                            if (((unsigned long long)((int)cw_max + 1) & 137438953472ULL) == 0ULL) {
                                                              int tmp_38;
                                                              
#line 3466 
                                                              if (((unsigned long long)((int)cw_max + 1) & 68719476736ULL) == 0ULL) {
                                                                int tmp_37;
                                                                
#line 3466 
                                                                if (((unsigned long long)((int)cw_max + 1) & 34359738368ULL) == 0ULL) {
                                                                  int tmp_36;
                                                                  
#line 3466 
                                                                  if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 17179869184ULL) == 0ULL) {
                                                                    int tmp_35;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 8589934592ULL) == 0ULL) {
                                                                    int tmp_34;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 4294967296ULL) == 0ULL) {
                                                                    int tmp_33;
                                                                    
#line 3466 
                                                                    if (
                                                                    (int)cw_max + 1 >= 0) {
                                                                    int tmp_32;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 1073741824ULL) == 0ULL) {
                                                                    int tmp_31;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 536870912ULL) == 0ULL) {
                                                                    int tmp_30;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 268435456ULL) == 0ULL) {
                                                                    int tmp_29;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 134217728ULL) == 0ULL) {
                                                                    int tmp_28;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 67108864ULL) == 0ULL) {
                                                                    int tmp_27;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 33554432ULL) == 0ULL) {
                                                                    int tmp_26;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 16777216ULL) == 0ULL) {
                                                                    int tmp_25;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 8388608ULL) == 0ULL) {
                                                                    int tmp_24;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 4194304ULL) == 0ULL) {
                                                                    int tmp_23;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 2097152ULL) == 0ULL) {
                                                                    int tmp_22;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 1048576ULL) == 0ULL) {
                                                                    int tmp_21;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 524288ULL) == 0ULL) {
                                                                    int tmp_20;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 262144ULL) == 0ULL) {
                                                                    int tmp_19;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 131072ULL) == 0ULL) {
                                                                    int tmp_18;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 65536ULL) == 0ULL) {
                                                                    int tmp_17;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 32768ULL) == 0ULL) {
                                                                    int tmp_16;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 16384ULL) == 0ULL) {
                                                                    int tmp_15;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 8192ULL) == 0ULL) {
                                                                    int tmp_14;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 4096ULL) == 0ULL) {
                                                                    int tmp_13;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 2048ULL) == 0ULL) {
                                                                    int tmp_12;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 1024ULL) == 0ULL) {
                                                                    int tmp_11;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 512ULL) == 0ULL) {
                                                                    int tmp_10;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 256ULL) == 0ULL) {
                                                                    int tmp_9;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 128ULL) == 0ULL) {
                                                                    int tmp_8;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 64ULL) == 0ULL) {
                                                                    int tmp_7;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 32ULL) == 0ULL) {
                                                                    int tmp_6;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 16ULL) == 0ULL) {
                                                                    int tmp_5;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 8ULL) == 0ULL) {
                                                                    int tmp_4;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 4ULL) == 0ULL) {
                                                                    int tmp_3;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 2ULL) == 0ULL) {
                                                                    int tmp_2;
                                                                    
#line 3466 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 1ULL) == 0ULL) 
                                                                    
#line 3466 
                                                                    tmp_2 = ____ilog2_NaN(); else 
                                                                    
#line 3466 
                                                                    tmp_2 = 0;
                                                                    
#line 3466 
                                                                    tmp_3 = tmp_2;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_3 = 1;
                                                                    
#line 3466 
                                                                    tmp_4 = tmp_3;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_4 = 2;
                                                                    
#line 3466 
                                                                    tmp_5 = tmp_4;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_5 = 3;
                                                                    
#line 3466 
                                                                    tmp_6 = tmp_5;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_6 = 4;
                                                                    
#line 3466 
                                                                    tmp_7 = tmp_6;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_7 = 5;
                                                                    
#line 3466 
                                                                    tmp_8 = tmp_7;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_8 = 6;
                                                                    
#line 3466 
                                                                    tmp_9 = tmp_8;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_9 = 7;
                                                                    
#line 3466 
                                                                    tmp_10 = tmp_9;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_10 = 8;
                                                                    
#line 3466 
                                                                    tmp_11 = tmp_10;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_11 = 9;
                                                                    
#line 3466 
                                                                    tmp_12 = tmp_11;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_12 = 10;
                                                                    
#line 3466 
                                                                    tmp_13 = tmp_12;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_13 = 11;
                                                                    
#line 3466 
                                                                    tmp_14 = tmp_13;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_14 = 12;
                                                                    
#line 3466 
                                                                    tmp_15 = tmp_14;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_15 = 13;
                                                                    
#line 3466 
                                                                    tmp_16 = tmp_15;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_16 = 14;
                                                                    
#line 3466 
                                                                    tmp_17 = tmp_16;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_17 = 15;
                                                                    
#line 3466 
                                                                    tmp_18 = tmp_17;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_18 = 16;
                                                                    
#line 3466 
                                                                    tmp_19 = tmp_18;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_19 = 17;
                                                                    
#line 3466 
                                                                    tmp_20 = tmp_19;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_20 = 18;
                                                                    
#line 3466 
                                                                    tmp_21 = tmp_20;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_21 = 19;
                                                                    
#line 3466 
                                                                    tmp_22 = tmp_21;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_22 = 20;
                                                                    
#line 3466 
                                                                    tmp_23 = tmp_22;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_23 = 21;
                                                                    
#line 3466 
                                                                    tmp_24 = tmp_23;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_24 = 22;
                                                                    
#line 3466 
                                                                    tmp_25 = tmp_24;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_25 = 23;
                                                                    
#line 3466 
                                                                    tmp_26 = tmp_25;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_26 = 24;
                                                                    
#line 3466 
                                                                    tmp_27 = tmp_26;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_27 = 25;
                                                                    
#line 3466 
                                                                    tmp_28 = tmp_27;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_28 = 26;
                                                                    
#line 3466 
                                                                    tmp_29 = tmp_28;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_29 = 27;
                                                                    
#line 3466 
                                                                    tmp_30 = tmp_29;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_30 = 28;
                                                                    
#line 3466 
                                                                    tmp_31 = tmp_30;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_31 = 29;
                                                                    
#line 3466 
                                                                    tmp_32 = tmp_31;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_32 = 30;
                                                                    
#line 3466 
                                                                    tmp_33 = tmp_32;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_33 = 31;
                                                                    
#line 3466 
                                                                    tmp_34 = tmp_33;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_34 = 32;
                                                                    
#line 3466 
                                                                    tmp_35 = tmp_34;
                                                                    }
                                                                    else 
                                                                    
#line 3466 
                                                                    tmp_35 = 33;
                                                                    
#line 3466 
                                                                    tmp_36 = tmp_35;
                                                                  }
                                                                  else 
                                                                    
#line 3466 
                                                                    tmp_36 = 34;
                                                                  
#line 3466 
                                                                  tmp_37 = tmp_36;
                                                                }
                                                                else 
                                                                  
#line 3466 
                                                                  tmp_37 = 35;
                                                                
#line 3466 
                                                                tmp_38 = tmp_37;
                                                              }
                                                              else 
#line 3466 
                                                                   tmp_38 = 36;
                                                              
#line 3466 
                                                              tmp_39 = tmp_38;
                                                            }
                                                            else 
#line 3466 
                                                                 tmp_39 = 37;
                                                            
#line 3466 
                                                            tmp_40 = tmp_39;
                                                          }
                                                          else 
#line 3466 
                                                               tmp_40 = 38;
                                                          
#line 3466 
                                                          tmp_41 = tmp_40;
                                                        }
                                                        else 
#line 3466 
                                                             tmp_41 = 39;
                                                        
#line 3466 
                                                        tmp_42 = tmp_41;
                                                      }
                                                      else 
#line 3466 
                                                           tmp_42 = 40;
                                                      
#line 3466 
                                                      tmp_43 = tmp_42;
                                                    }
                                                    else 
#line 3466 
                                                         tmp_43 = 41;
                                                    
#line 3466 
                                                    tmp_44 = tmp_43;
                                                  }
                                                  else 
#line 3466 
                                                       tmp_44 = 42;
                                                  
#line 3466 
                                                  tmp_45 = tmp_44;
                                                }
                                                else 
#line 3466 
                                                     tmp_45 = 43;
                                                
#line 3466 
                                                tmp_46 = tmp_45;
                                              }
                                              else 
#line 3466 
                                                   tmp_46 = 44;
                                              
#line 3466 
                                              tmp_47 = tmp_46;
                                            }
                                            else 
#line 3466 
                                                 tmp_47 = 45;
                                            
#line 3466 
                                            tmp_48 = tmp_47;
                                          }
                                          else 
#line 3466 
                                               tmp_48 = 46;
                                          
#line 3466 
                                          tmp_49 = tmp_48;
                                        }
                                        else 
#line 3466 
                                             tmp_49 = 47;
                                        
#line 3466 
                                        tmp_50 = tmp_49;
                                      }
                                      else 
#line 3466 
                                           tmp_50 = 48;
                                      
#line 3466 
                                      tmp_51 = tmp_50;
                                    }
                                    else 
#line 3466 
                                         tmp_51 = 49;
                                    
#line 3466 
                                    tmp_52 = tmp_51;
                                  }
                                  else 
#line 3466 
                                       tmp_52 = 50;
                                  
#line 3466 
                                  tmp_53 = tmp_52;
                                }
                                else 
#line 3466 
                                     tmp_53 = 51;
                                
#line 3466 
                                tmp_54 = tmp_53;
                              }
                              else 
#line 3466 
                                   tmp_54 = 52;
                              
#line 3466 
                              tmp_55 = tmp_54;
                            }
                            else 
#line 3466 
                                 tmp_55 = 53;
                            
#line 3466 
                            tmp_56 = tmp_55;
                          }
                          else 
#line 3466 
                               tmp_56 = 54;
                          
#line 3466 
                          tmp_57 = tmp_56;
                        }
                        else 
#line 3466 
                             tmp_57 = 55;
                        
#line 3466 
                        tmp_58 = tmp_57;
                      }
                      else 
#line 3466 
                           tmp_58 = 56;
                      
#line 3466 
                      tmp_59 = tmp_58;
                    }
                    else 
#line 3466 
                         tmp_59 = 57;
                    
#line 3466 
                    tmp_60 = tmp_59;
                  }
                  else 
#line 3466 
                       tmp_60 = 58;
                  
#line 3466 
                  tmp_61 = tmp_60;
                }
                else 
#line 3466 
                     tmp_61 = 59;
                
#line 3466 
                tmp_62 = tmp_61;
              }
              else 
#line 3466 
                   tmp_62 = 60;
              
#line 3466 
              tmp_63 = tmp_62;
            }
            else 
#line 3466 
                 tmp_63 = 61;
            
#line 3466 
            tmp_64 = tmp_63;
          }
          else 
#line 3466 
               tmp_64 = 62;
          
#line 3466 
          tmp_65 = tmp_64;
        }
        else 
#line 3466 
             tmp_65 = 63;
        
#line 3466 
        tmp_66 = tmp_65;
      }
      
#line 3466 
      tmp_68 = tmp_66;
    }
    else 
#line 3466 
         tmp_68 = __ilog2_u32((unsigned int)((int)cw_max + 1));
    
#line 3466 
    cmd->__anonCompField_mwl8k_cmd_set_edca_params_102.ap.log_cw_max = (unsigned int)tmp_68;
    
#line 3467 
    if (0 != 0) {
      int tmp_135;
      
#line 3467 
      if ((int)cw_min + 1 <= 0) 
#line 3467 
                                tmp_135 = ____ilog2_NaN();
      else {
        int tmp_134;
        
#line 3467 
        if ((int)cw_min + 1 >= 0) {
          int tmp_133;
          
#line 3467 
          if (((unsigned long long)((int)cw_min + 1) & 4611686018427387904ULL) == 0ULL) {
            int tmp_132;
            
#line 3467 
            if (((unsigned long long)((int)cw_min + 1) & 2305843009213693952ULL) == 0ULL) {
              int tmp_131;
              
#line 3467 
              if (((unsigned long long)((int)cw_min + 1) & 1152921504606846976ULL) == 0ULL) {
                int tmp_130;
                
#line 3467 
                if (((unsigned long long)((int)cw_min + 1) & 576460752303423488ULL) == 0ULL) {
                  int tmp_129;
                  
#line 3467 
                  if (((unsigned long long)((int)cw_min + 1) & 288230376151711744ULL) == 0ULL) {
                    int tmp_128;
                    
#line 3467 
                    if (((unsigned long long)((int)cw_min + 1) & 144115188075855872ULL) == 0ULL) {
                      int tmp_127;
                      
#line 3467 
                      if (((unsigned long long)((int)cw_min + 1) & 72057594037927936ULL) == 0ULL) {
                        int tmp_126;
                        
#line 3467 
                        if (((unsigned long long)((int)cw_min + 1) & 36028797018963968ULL) == 0ULL) {
                          int tmp_125;
                          
#line 3467 
                          if (((unsigned long long)((int)cw_min + 1) & 18014398509481984ULL) == 0ULL) {
                            int tmp_124;
                            
#line 3467 
                            if (((unsigned long long)((int)cw_min + 1) & 9007199254740992ULL) == 0ULL) {
                              int tmp_123;
                              
#line 3467 
                              if (((unsigned long long)((int)cw_min + 1) & 4503599627370496ULL) == 0ULL) {
                                int tmp_122;
                                
#line 3467 
                                if (((unsigned long long)((int)cw_min + 1) & 2251799813685248ULL) == 0ULL) {
                                  int tmp_121;
                                  
#line 3467 
                                  if (((unsigned long long)((int)cw_min + 1) & 1125899906842624ULL) == 0ULL) {
                                    int tmp_120;
                                    
#line 3467 
                                    if (((unsigned long long)((int)cw_min + 1) & 562949953421312ULL) == 0ULL) {
                                      int tmp_119;
                                      
#line 3467 
                                      if (((unsigned long long)((int)cw_min + 1) & 281474976710656ULL) == 0ULL) {
                                        int tmp_118;
                                        
#line 3467 
                                        if (((unsigned long long)((int)cw_min + 1) & 140737488355328ULL) == 0ULL) {
                                          int tmp_117;
                                          
#line 3467 
                                          if (((unsigned long long)((int)cw_min + 1) & 70368744177664ULL) == 0ULL) {
                                            int tmp_116;
                                            
#line 3467 
                                            if (((unsigned long long)((int)cw_min + 1) & 35184372088832ULL) == 0ULL) {
                                              int tmp_115;
                                              
#line 3467 
                                              if (((unsigned long long)((int)cw_min + 1) & 17592186044416ULL) == 0ULL) {
                                                int tmp_114;
                                                
#line 3467 
                                                if (((unsigned long long)((int)cw_min + 1) & 8796093022208ULL) == 0ULL) {
                                                  int tmp_113;
                                                  
#line 3467 
                                                  if (((unsigned long long)((int)cw_min + 1) & 4398046511104ULL) == 0ULL) {
                                                    int tmp_112;
                                                    
#line 3467 
                                                    if (((unsigned long long)((int)cw_min + 1) & 2199023255552ULL) == 0ULL) {
                                                      int tmp_111;
                                                      
#line 3467 
                                                      if (((unsigned long long)((int)cw_min + 1) & 1099511627776ULL) == 0ULL) {
                                                        int tmp_110;
                                                        
#line 3467 
                                                        if (((unsigned long long)((int)cw_min + 1) & 549755813888ULL) == 0ULL) {
                                                          int tmp_109;
                                                          
#line 3467 
                                                          if (((unsigned long long)((int)cw_min + 1) & 274877906944ULL) == 0ULL) {
                                                            int tmp_108;
                                                            
#line 3467 
                                                            if (((unsigned long long)((int)cw_min + 1) & 137438953472ULL) == 0ULL) {
                                                              int tmp_107;
                                                              
#line 3467 
                                                              if (((unsigned long long)((int)cw_min + 1) & 68719476736ULL) == 0ULL) {
                                                                int tmp_106;
                                                                
#line 3467 
                                                                if (((unsigned long long)((int)cw_min + 1) & 34359738368ULL) == 0ULL) {
                                                                  int tmp_105;
                                                                  
#line 3467 
                                                                  if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 17179869184ULL) == 0ULL) {
                                                                    int tmp_104;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 8589934592ULL) == 0ULL) {
                                                                    int tmp_103;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 4294967296ULL) == 0ULL) {
                                                                    int tmp_102;
                                                                    
#line 3467 
                                                                    if (
                                                                    (int)cw_min + 1 >= 0) {
                                                                    int tmp_101;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 1073741824ULL) == 0ULL) {
                                                                    int tmp_100;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 536870912ULL) == 0ULL) {
                                                                    int tmp_99;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 268435456ULL) == 0ULL) {
                                                                    int tmp_98;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 134217728ULL) == 0ULL) {
                                                                    int tmp_97;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 67108864ULL) == 0ULL) {
                                                                    int tmp_96;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 33554432ULL) == 0ULL) {
                                                                    int tmp_95;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 16777216ULL) == 0ULL) {
                                                                    int tmp_94;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 8388608ULL) == 0ULL) {
                                                                    int tmp_93;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 4194304ULL) == 0ULL) {
                                                                    int tmp_92;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 2097152ULL) == 0ULL) {
                                                                    int tmp_91;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 1048576ULL) == 0ULL) {
                                                                    int tmp_90;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 524288ULL) == 0ULL) {
                                                                    int tmp_89;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 262144ULL) == 0ULL) {
                                                                    int tmp_88;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 131072ULL) == 0ULL) {
                                                                    int tmp_87;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 65536ULL) == 0ULL) {
                                                                    int tmp_86;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 32768ULL) == 0ULL) {
                                                                    int tmp_85;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 16384ULL) == 0ULL) {
                                                                    int tmp_84;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 8192ULL) == 0ULL) {
                                                                    int tmp_83;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 4096ULL) == 0ULL) {
                                                                    int tmp_82;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 2048ULL) == 0ULL) {
                                                                    int tmp_81;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 1024ULL) == 0ULL) {
                                                                    int tmp_80;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 512ULL) == 0ULL) {
                                                                    int tmp_79;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 256ULL) == 0ULL) {
                                                                    int tmp_78;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 128ULL) == 0ULL) {
                                                                    int tmp_77;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 64ULL) == 0ULL) {
                                                                    int tmp_76;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 32ULL) == 0ULL) {
                                                                    int tmp_75;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 16ULL) == 0ULL) {
                                                                    int tmp_74;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 8ULL) == 0ULL) {
                                                                    int tmp_73;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 4ULL) == 0ULL) {
                                                                    int tmp_72;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 2ULL) == 0ULL) {
                                                                    int tmp_71;
                                                                    
#line 3467 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 1ULL) == 0ULL) 
                                                                    
#line 3467 
                                                                    tmp_71 = ____ilog2_NaN(); else 
                                                                    
#line 3467 
                                                                    tmp_71 = 0;
                                                                    
#line 3467 
                                                                    tmp_72 = tmp_71;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_72 = 1;
                                                                    
#line 3467 
                                                                    tmp_73 = tmp_72;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_73 = 2;
                                                                    
#line 3467 
                                                                    tmp_74 = tmp_73;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_74 = 3;
                                                                    
#line 3467 
                                                                    tmp_75 = tmp_74;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_75 = 4;
                                                                    
#line 3467 
                                                                    tmp_76 = tmp_75;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_76 = 5;
                                                                    
#line 3467 
                                                                    tmp_77 = tmp_76;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_77 = 6;
                                                                    
#line 3467 
                                                                    tmp_78 = tmp_77;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_78 = 7;
                                                                    
#line 3467 
                                                                    tmp_79 = tmp_78;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_79 = 8;
                                                                    
#line 3467 
                                                                    tmp_80 = tmp_79;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_80 = 9;
                                                                    
#line 3467 
                                                                    tmp_81 = tmp_80;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_81 = 10;
                                                                    
#line 3467 
                                                                    tmp_82 = tmp_81;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_82 = 11;
                                                                    
#line 3467 
                                                                    tmp_83 = tmp_82;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_83 = 12;
                                                                    
#line 3467 
                                                                    tmp_84 = tmp_83;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_84 = 13;
                                                                    
#line 3467 
                                                                    tmp_85 = tmp_84;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_85 = 14;
                                                                    
#line 3467 
                                                                    tmp_86 = tmp_85;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_86 = 15;
                                                                    
#line 3467 
                                                                    tmp_87 = tmp_86;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_87 = 16;
                                                                    
#line 3467 
                                                                    tmp_88 = tmp_87;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_88 = 17;
                                                                    
#line 3467 
                                                                    tmp_89 = tmp_88;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_89 = 18;
                                                                    
#line 3467 
                                                                    tmp_90 = tmp_89;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_90 = 19;
                                                                    
#line 3467 
                                                                    tmp_91 = tmp_90;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_91 = 20;
                                                                    
#line 3467 
                                                                    tmp_92 = tmp_91;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_92 = 21;
                                                                    
#line 3467 
                                                                    tmp_93 = tmp_92;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_93 = 22;
                                                                    
#line 3467 
                                                                    tmp_94 = tmp_93;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_94 = 23;
                                                                    
#line 3467 
                                                                    tmp_95 = tmp_94;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_95 = 24;
                                                                    
#line 3467 
                                                                    tmp_96 = tmp_95;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_96 = 25;
                                                                    
#line 3467 
                                                                    tmp_97 = tmp_96;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_97 = 26;
                                                                    
#line 3467 
                                                                    tmp_98 = tmp_97;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_98 = 27;
                                                                    
#line 3467 
                                                                    tmp_99 = tmp_98;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_99 = 28;
                                                                    
#line 3467 
                                                                    tmp_100 = tmp_99;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_100 = 29;
                                                                    
#line 3467 
                                                                    tmp_101 = tmp_100;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_101 = 30;
                                                                    
#line 3467 
                                                                    tmp_102 = tmp_101;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_102 = 31;
                                                                    
#line 3467 
                                                                    tmp_103 = tmp_102;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_103 = 32;
                                                                    
#line 3467 
                                                                    tmp_104 = tmp_103;
                                                                    }
                                                                    else 
                                                                    
#line 3467 
                                                                    tmp_104 = 33;
                                                                    
#line 3467 
                                                                    tmp_105 = tmp_104;
                                                                  }
                                                                  else 
                                                                    
#line 3467 
                                                                    tmp_105 = 34;
                                                                  
#line 3467 
                                                                  tmp_106 = tmp_105;
                                                                }
                                                                else 
                                                                  
#line 3467 
                                                                  tmp_106 = 35;
                                                                
#line 3467 
                                                                tmp_107 = tmp_106;
                                                              }
                                                              else 
#line 3467 
                                                                   tmp_107 = 36;
                                                              
#line 3467 
                                                              tmp_108 = tmp_107;
                                                            }
                                                            else 
#line 3467 
                                                                 tmp_108 = 37;
                                                            
#line 3467 
                                                            tmp_109 = tmp_108;
                                                          }
                                                          else 
#line 3467 
                                                               tmp_109 = 38;
                                                          
#line 3467 
                                                          tmp_110 = tmp_109;
                                                        }
                                                        else 
#line 3467 
                                                             tmp_110 = 39;
                                                        
#line 3467 
                                                        tmp_111 = tmp_110;
                                                      }
                                                      else 
#line 3467 
                                                           tmp_111 = 40;
                                                      
#line 3467 
                                                      tmp_112 = tmp_111;
                                                    }
                                                    else 
#line 3467 
                                                         tmp_112 = 41;
                                                    
#line 3467 
                                                    tmp_113 = tmp_112;
                                                  }
                                                  else 
#line 3467 
                                                       tmp_113 = 42;
                                                  
#line 3467 
                                                  tmp_114 = tmp_113;
                                                }
                                                else 
#line 3467 
                                                     tmp_114 = 43;
                                                
#line 3467 
                                                tmp_115 = tmp_114;
                                              }
                                              else 
#line 3467 
                                                   tmp_115 = 44;
                                              
#line 3467 
                                              tmp_116 = tmp_115;
                                            }
                                            else 
#line 3467 
                                                 tmp_116 = 45;
                                            
#line 3467 
                                            tmp_117 = tmp_116;
                                          }
                                          else 
#line 3467 
                                               tmp_117 = 46;
                                          
#line 3467 
                                          tmp_118 = tmp_117;
                                        }
                                        else 
#line 3467 
                                             tmp_118 = 47;
                                        
#line 3467 
                                        tmp_119 = tmp_118;
                                      }
                                      else 
#line 3467 
                                           tmp_119 = 48;
                                      
#line 3467 
                                      tmp_120 = tmp_119;
                                    }
                                    else 
#line 3467 
                                         tmp_120 = 49;
                                    
#line 3467 
                                    tmp_121 = tmp_120;
                                  }
                                  else 
#line 3467 
                                       tmp_121 = 50;
                                  
#line 3467 
                                  tmp_122 = tmp_121;
                                }
                                else 
#line 3467 
                                     tmp_122 = 51;
                                
#line 3467 
                                tmp_123 = tmp_122;
                              }
                              else 
#line 3467 
                                   tmp_123 = 52;
                              
#line 3467 
                              tmp_124 = tmp_123;
                            }
                            else 
#line 3467 
                                 tmp_124 = 53;
                            
#line 3467 
                            tmp_125 = tmp_124;
                          }
                          else 
#line 3467 
                               tmp_125 = 54;
                          
#line 3467 
                          tmp_126 = tmp_125;
                        }
                        else 
#line 3467 
                             tmp_126 = 55;
                        
#line 3467 
                        tmp_127 = tmp_126;
                      }
                      else 
#line 3467 
                           tmp_127 = 56;
                      
#line 3467 
                      tmp_128 = tmp_127;
                    }
                    else 
#line 3467 
                         tmp_128 = 57;
                    
#line 3467 
                    tmp_129 = tmp_128;
                  }
                  else 
#line 3467 
                       tmp_129 = 58;
                  
#line 3467 
                  tmp_130 = tmp_129;
                }
                else 
#line 3467 
                     tmp_130 = 59;
                
#line 3467 
                tmp_131 = tmp_130;
              }
              else 
#line 3467 
                   tmp_131 = 60;
              
#line 3467 
              tmp_132 = tmp_131;
            }
            else 
#line 3467 
                 tmp_132 = 61;
            
#line 3467 
            tmp_133 = tmp_132;
          }
          else 
#line 3467 
               tmp_133 = 62;
          
#line 3467 
          tmp_134 = tmp_133;
        }
        else 
#line 3467 
             tmp_134 = 63;
        
#line 3467 
        tmp_135 = tmp_134;
      }
      
#line 3467 
      tmp_137 = tmp_135;
    }
    else 
#line 3467 
         tmp_137 = __ilog2_u32((unsigned int)((int)cw_min + 1));
    
#line 3467 
    cmd->__anonCompField_mwl8k_cmd_set_edca_params_102.ap.log_cw_min = (unsigned int)tmp_137;
    
#line 3468 
    cmd->__anonCompField_mwl8k_cmd_set_edca_params_102.ap.aifs = aifs;
    
#line 3469 
    cmd->__anonCompField_mwl8k_cmd_set_edca_params_102.ap.txq = qnum;
  }
  else {
    
#line 3471 
    if (0 != 0) {
      unsigned int tmp_204;
      
#line 3471 
      if ((int)cw_max + 1 <= 0) {
        int tmp_138;
        
#line 3471 
        tmp_138 = ____ilog2_NaN();
        
#line 3471 
        tmp_204 = (unsigned int)((unsigned char)tmp_138);
      }
      else {
        unsigned int tmp_203;
        
#line 3471 
        if ((int)cw_max + 1 >= 0) {
          unsigned int tmp_202;
          
#line 3471 
          if (((unsigned long long)((int)cw_max + 1) & 4611686018427387904ULL) == 0ULL) {
            unsigned int tmp_201;
            
#line 3471 
            if (((unsigned long long)((int)cw_max + 1) & 2305843009213693952ULL) == 0ULL) {
              unsigned int tmp_200;
              
#line 3471 
              if (((unsigned long long)((int)cw_max + 1) & 1152921504606846976ULL) == 0ULL) {
                unsigned int tmp_199;
                
#line 3471 
                if (((unsigned long long)((int)cw_max + 1) & 576460752303423488ULL) == 0ULL) {
                  unsigned int tmp_198;
                  
#line 3471 
                  if (((unsigned long long)((int)cw_max + 1) & 288230376151711744ULL) == 0ULL) {
                    unsigned int tmp_197;
                    
#line 3471 
                    if (((unsigned long long)((int)cw_max + 1) & 144115188075855872ULL) == 0ULL) {
                      unsigned int tmp_196;
                      
#line 3471 
                      if (((unsigned long long)((int)cw_max + 1) & 72057594037927936ULL) == 0ULL) {
                        unsigned int tmp_195;
                        
#line 3471 
                        if (((unsigned long long)((int)cw_max + 1) & 36028797018963968ULL) == 0ULL) {
                          unsigned int tmp_194;
                          
#line 3471 
                          if (((unsigned long long)((int)cw_max + 1) & 18014398509481984ULL) == 0ULL) {
                            unsigned int tmp_193;
                            
#line 3471 
                            if (((unsigned long long)((int)cw_max + 1) & 9007199254740992ULL) == 0ULL) {
                              unsigned int tmp_192;
                              
#line 3471 
                              if (((unsigned long long)((int)cw_max + 1) & 4503599627370496ULL) == 0ULL) {
                                unsigned int tmp_191;
                                
#line 3471 
                                if (((unsigned long long)((int)cw_max + 1) & 2251799813685248ULL) == 0ULL) {
                                  unsigned int tmp_190;
                                  
#line 3471 
                                  if (((unsigned long long)((int)cw_max + 1) & 1125899906842624ULL) == 0ULL) {
                                    unsigned int tmp_189;
                                    
#line 3471 
                                    if (((unsigned long long)((int)cw_max + 1) & 562949953421312ULL) == 0ULL) {
                                      unsigned int tmp_188;
                                      
#line 3471 
                                      if (((unsigned long long)((int)cw_max + 1) & 281474976710656ULL) == 0ULL) {
                                        unsigned int tmp_187;
                                        
#line 3471 
                                        if (((unsigned long long)((int)cw_max + 1) & 140737488355328ULL) == 0ULL) {
                                          unsigned int tmp_186;
                                          
#line 3471 
                                          if (((unsigned long long)((int)cw_max + 1) & 70368744177664ULL) == 0ULL) {
                                            unsigned int tmp_185;
                                            
#line 3471 
                                            if (((unsigned long long)((int)cw_max + 1) & 35184372088832ULL) == 0ULL) {
                                              unsigned int tmp_184;
                                              
#line 3471 
                                              if (((unsigned long long)((int)cw_max + 1) & 17592186044416ULL) == 0ULL) {
                                                unsigned int tmp_183;
                                                
#line 3471 
                                                if (((unsigned long long)((int)cw_max + 1) & 8796093022208ULL) == 0ULL) {
                                                  unsigned int tmp_182;
                                                  
#line 3471 
                                                  if (((unsigned long long)((int)cw_max + 1) & 4398046511104ULL) == 0ULL) {
                                                    unsigned int tmp_181;
                                                    
#line 3471 
                                                    if (((unsigned long long)((int)cw_max + 1) & 2199023255552ULL) == 0ULL) {
                                                      unsigned int tmp_180;
                                                      
#line 3471 
                                                      if (((unsigned long long)((int)cw_max + 1) & 1099511627776ULL) == 0ULL) {
                                                        unsigned int tmp_179;
                                                        
#line 3471 
                                                        if (((unsigned long long)((int)cw_max + 1) & 549755813888ULL) == 0ULL) {
                                                          unsigned int tmp_178;
                                                          
#line 3471 
                                                          if (((unsigned long long)((int)cw_max + 1) & 274877906944ULL) == 0ULL) {
                                                            unsigned int tmp_177;
                                                            
#line 3471 
                                                            if (((unsigned long long)((int)cw_max + 1) & 137438953472ULL) == 0ULL) {
                                                              unsigned int tmp_176;
                                                              
#line 3471 
                                                              if (((unsigned long long)((int)cw_max + 1) & 68719476736ULL) == 0ULL) {
                                                                unsigned int tmp_175;
                                                                
#line 3471 
                                                                if (((unsigned long long)((int)cw_max + 1) & 34359738368ULL) == 0ULL) {
                                                                  unsigned int tmp_174;
                                                                  
#line 3471 
                                                                  if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 17179869184ULL) == 0ULL) {
                                                                    unsigned int tmp_173;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 8589934592ULL) == 0ULL) {
                                                                    unsigned int tmp_172;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 4294967296ULL) == 0ULL) {
                                                                    unsigned int tmp_171;
                                                                    
#line 3471 
                                                                    if (
                                                                    (int)cw_max + 1 >= 0) {
                                                                    unsigned int tmp_170;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 1073741824ULL) == 0ULL) {
                                                                    unsigned int tmp_169;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 536870912ULL) == 0ULL) {
                                                                    unsigned int tmp_168;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 268435456ULL) == 0ULL) {
                                                                    unsigned int tmp_167;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 134217728ULL) == 0ULL) {
                                                                    unsigned int tmp_166;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 67108864ULL) == 0ULL) {
                                                                    unsigned int tmp_165;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 33554432ULL) == 0ULL) {
                                                                    unsigned int tmp_164;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 16777216ULL) == 0ULL) {
                                                                    unsigned int tmp_163;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 8388608ULL) == 0ULL) {
                                                                    unsigned int tmp_162;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 4194304ULL) == 0ULL) {
                                                                    unsigned int tmp_161;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 2097152ULL) == 0ULL) {
                                                                    unsigned int tmp_160;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 1048576ULL) == 0ULL) {
                                                                    unsigned int tmp_159;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 524288ULL) == 0ULL) {
                                                                    unsigned int tmp_158;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 262144ULL) == 0ULL) {
                                                                    unsigned int tmp_157;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 131072ULL) == 0ULL) {
                                                                    unsigned int tmp_156;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 65536ULL) == 0ULL) {
                                                                    unsigned int tmp_155;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 32768ULL) == 0ULL) {
                                                                    unsigned int tmp_154;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 16384ULL) == 0ULL) {
                                                                    unsigned int tmp_153;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 8192ULL) == 0ULL) {
                                                                    unsigned int tmp_152;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 4096ULL) == 0ULL) {
                                                                    unsigned int tmp_151;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 2048ULL) == 0ULL) {
                                                                    unsigned int tmp_150;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 1024ULL) == 0ULL) {
                                                                    unsigned int tmp_149;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 512ULL) == 0ULL) {
                                                                    unsigned int tmp_148;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 256ULL) == 0ULL) {
                                                                    unsigned int tmp_147;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 128ULL) == 0ULL) {
                                                                    unsigned int tmp_146;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 64ULL) == 0ULL) {
                                                                    unsigned int tmp_145;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 32ULL) == 0ULL) {
                                                                    unsigned int tmp_144;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 16ULL) == 0ULL) {
                                                                    unsigned int tmp_143;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 8ULL) == 0ULL) {
                                                                    unsigned int tmp_142;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 4ULL) == 0ULL) {
                                                                    unsigned int tmp_141;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 2ULL) == 0ULL) {
                                                                    unsigned int tmp_140;
                                                                    
#line 3471 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_max + 1) & 1ULL) == 0ULL) {
                                                                    int tmp_139;
                                                                    
#line 3471 
                                                                    tmp_139 = ____ilog2_NaN();
                                                                    
#line 3471 
                                                                    tmp_140 = (unsigned int)((unsigned char)tmp_139);
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_140 = 0U;
                                                                    
#line 3471 
                                                                    tmp_141 = tmp_140;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_141 = 1U;
                                                                    
#line 3471 
                                                                    tmp_142 = tmp_141;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_142 = 2U;
                                                                    
#line 3471 
                                                                    tmp_143 = tmp_142;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_143 = 3U;
                                                                    
#line 3471 
                                                                    tmp_144 = tmp_143;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_144 = 4U;
                                                                    
#line 3471 
                                                                    tmp_145 = tmp_144;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_145 = 5U;
                                                                    
#line 3471 
                                                                    tmp_146 = tmp_145;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_146 = 6U;
                                                                    
#line 3471 
                                                                    tmp_147 = tmp_146;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_147 = 7U;
                                                                    
#line 3471 
                                                                    tmp_148 = tmp_147;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_148 = 8U;
                                                                    
#line 3471 
                                                                    tmp_149 = tmp_148;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_149 = 9U;
                                                                    
#line 3471 
                                                                    tmp_150 = tmp_149;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_150 = 10U;
                                                                    
#line 3471 
                                                                    tmp_151 = tmp_150;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_151 = 11U;
                                                                    
#line 3471 
                                                                    tmp_152 = tmp_151;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_152 = 12U;
                                                                    
#line 3471 
                                                                    tmp_153 = tmp_152;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_153 = 13U;
                                                                    
#line 3471 
                                                                    tmp_154 = tmp_153;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_154 = 14U;
                                                                    
#line 3471 
                                                                    tmp_155 = tmp_154;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_155 = 15U;
                                                                    
#line 3471 
                                                                    tmp_156 = tmp_155;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_156 = 16U;
                                                                    
#line 3471 
                                                                    tmp_157 = tmp_156;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_157 = 17U;
                                                                    
#line 3471 
                                                                    tmp_158 = tmp_157;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_158 = 18U;
                                                                    
#line 3471 
                                                                    tmp_159 = tmp_158;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_159 = 19U;
                                                                    
#line 3471 
                                                                    tmp_160 = tmp_159;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_160 = 20U;
                                                                    
#line 3471 
                                                                    tmp_161 = tmp_160;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_161 = 21U;
                                                                    
#line 3471 
                                                                    tmp_162 = tmp_161;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_162 = 22U;
                                                                    
#line 3471 
                                                                    tmp_163 = tmp_162;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_163 = 23U;
                                                                    
#line 3471 
                                                                    tmp_164 = tmp_163;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_164 = 24U;
                                                                    
#line 3471 
                                                                    tmp_165 = tmp_164;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_165 = 25U;
                                                                    
#line 3471 
                                                                    tmp_166 = tmp_165;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_166 = 26U;
                                                                    
#line 3471 
                                                                    tmp_167 = tmp_166;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_167 = 27U;
                                                                    
#line 3471 
                                                                    tmp_168 = tmp_167;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_168 = 28U;
                                                                    
#line 3471 
                                                                    tmp_169 = tmp_168;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_169 = 29U;
                                                                    
#line 3471 
                                                                    tmp_170 = tmp_169;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_170 = 30U;
                                                                    
#line 3471 
                                                                    tmp_171 = tmp_170;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_171 = 31U;
                                                                    
#line 3471 
                                                                    tmp_172 = tmp_171;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_172 = 32U;
                                                                    
#line 3471 
                                                                    tmp_173 = tmp_172;
                                                                    }
                                                                    else 
                                                                    
#line 3471 
                                                                    tmp_173 = 33U;
                                                                    
#line 3471 
                                                                    tmp_174 = tmp_173;
                                                                  }
                                                                  else 
                                                                    
#line 3471 
                                                                    tmp_174 = 34U;
                                                                  
#line 3471 
                                                                  tmp_175 = tmp_174;
                                                                }
                                                                else 
                                                                  
#line 3471 
                                                                  tmp_175 = 35U;
                                                                
#line 3471 
                                                                tmp_176 = tmp_175;
                                                              }
                                                              else 
#line 3471 
                                                                   tmp_176 = 36U;
                                                              
#line 3471 
                                                              tmp_177 = tmp_176;
                                                            }
                                                            else 
#line 3471 
                                                                 tmp_177 = 37U;
                                                            
#line 3471 
                                                            tmp_178 = tmp_177;
                                                          }
                                                          else 
#line 3471 
                                                               tmp_178 = 38U;
                                                          
#line 3471 
                                                          tmp_179 = tmp_178;
                                                        }
                                                        else 
#line 3471 
                                                             tmp_179 = 39U;
                                                        
#line 3471 
                                                        tmp_180 = tmp_179;
                                                      }
                                                      else 
#line 3471 
                                                           tmp_180 = 40U;
                                                      
#line 3471 
                                                      tmp_181 = tmp_180;
                                                    }
                                                    else 
#line 3471 
                                                         tmp_181 = 41U;
                                                    
#line 3471 
                                                    tmp_182 = tmp_181;
                                                  }
                                                  else 
#line 3471 
                                                       tmp_182 = 42U;
                                                  
#line 3471 
                                                  tmp_183 = tmp_182;
                                                }
                                                else 
#line 3471 
                                                     tmp_183 = 43U;
                                                
#line 3471 
                                                tmp_184 = tmp_183;
                                              }
                                              else 
#line 3471 
                                                   tmp_184 = 44U;
                                              
#line 3471 
                                              tmp_185 = tmp_184;
                                            }
                                            else 
#line 3471 
                                                 tmp_185 = 45U;
                                            
#line 3471 
                                            tmp_186 = tmp_185;
                                          }
                                          else 
#line 3471 
                                               tmp_186 = 46U;
                                          
#line 3471 
                                          tmp_187 = tmp_186;
                                        }
                                        else 
#line 3471 
                                             tmp_187 = 47U;
                                        
#line 3471 
                                        tmp_188 = tmp_187;
                                      }
                                      else 
#line 3471 
                                           tmp_188 = 48U;
                                      
#line 3471 
                                      tmp_189 = tmp_188;
                                    }
                                    else 
#line 3471 
                                         tmp_189 = 49U;
                                    
#line 3471 
                                    tmp_190 = tmp_189;
                                  }
                                  else 
#line 3471 
                                       tmp_190 = 50U;
                                  
#line 3471 
                                  tmp_191 = tmp_190;
                                }
                                else 
#line 3471 
                                     tmp_191 = 51U;
                                
#line 3471 
                                tmp_192 = tmp_191;
                              }
                              else 
#line 3471 
                                   tmp_192 = 52U;
                              
#line 3471 
                              tmp_193 = tmp_192;
                            }
                            else 
#line 3471 
                                 tmp_193 = 53U;
                            
#line 3471 
                            tmp_194 = tmp_193;
                          }
                          else 
#line 3471 
                               tmp_194 = 54U;
                          
#line 3471 
                          tmp_195 = tmp_194;
                        }
                        else 
#line 3471 
                             tmp_195 = 55U;
                        
#line 3471 
                        tmp_196 = tmp_195;
                      }
                      else 
#line 3471 
                           tmp_196 = 56U;
                      
#line 3471 
                      tmp_197 = tmp_196;
                    }
                    else 
#line 3471 
                         tmp_197 = 57U;
                    
#line 3471 
                    tmp_198 = tmp_197;
                  }
                  else 
#line 3471 
                       tmp_198 = 58U;
                  
#line 3471 
                  tmp_199 = tmp_198;
                }
                else 
#line 3471 
                     tmp_199 = 59U;
                
#line 3471 
                tmp_200 = tmp_199;
              }
              else 
#line 3471 
                   tmp_200 = 60U;
              
#line 3471 
              tmp_201 = tmp_200;
            }
            else 
#line 3471 
                 tmp_201 = 61U;
            
#line 3471 
            tmp_202 = tmp_201;
          }
          else 
#line 3471 
               tmp_202 = 62U;
          
#line 3471 
          tmp_203 = tmp_202;
        }
        else 
#line 3471 
             tmp_203 = 63U;
        
#line 3471 
        tmp_204 = tmp_203;
      }
      
#line 3471 
      cmd->__anonCompField_mwl8k_cmd_set_edca_params_102.sta.log_cw_max = (unsigned char)tmp_204;
    }
    else {
      int tmp_205;
      
#line 3471 
      tmp_205 = __ilog2_u32((unsigned int)((int)cw_max + 1));
      
#line 3471 
      cmd->__anonCompField_mwl8k_cmd_set_edca_params_102.sta.log_cw_max = (unsigned char)tmp_205;
    }
    
#line 3472 
    if (0 != 0) {
      unsigned int tmp_272;
      
#line 3472 
      if ((int)cw_min + 1 <= 0) {
        int tmp_206;
        
#line 3472 
        tmp_206 = ____ilog2_NaN();
        
#line 3472 
        tmp_272 = (unsigned int)((unsigned char)tmp_206);
      }
      else {
        unsigned int tmp_271;
        
#line 3472 
        if ((int)cw_min + 1 >= 0) {
          unsigned int tmp_270;
          
#line 3472 
          if (((unsigned long long)((int)cw_min + 1) & 4611686018427387904ULL) == 0ULL) {
            unsigned int tmp_269;
            
#line 3472 
            if (((unsigned long long)((int)cw_min + 1) & 2305843009213693952ULL) == 0ULL) {
              unsigned int tmp_268;
              
#line 3472 
              if (((unsigned long long)((int)cw_min + 1) & 1152921504606846976ULL) == 0ULL) {
                unsigned int tmp_267;
                
#line 3472 
                if (((unsigned long long)((int)cw_min + 1) & 576460752303423488ULL) == 0ULL) {
                  unsigned int tmp_266;
                  
#line 3472 
                  if (((unsigned long long)((int)cw_min + 1) & 288230376151711744ULL) == 0ULL) {
                    unsigned int tmp_265;
                    
#line 3472 
                    if (((unsigned long long)((int)cw_min + 1) & 144115188075855872ULL) == 0ULL) {
                      unsigned int tmp_264;
                      
#line 3472 
                      if (((unsigned long long)((int)cw_min + 1) & 72057594037927936ULL) == 0ULL) {
                        unsigned int tmp_263;
                        
#line 3472 
                        if (((unsigned long long)((int)cw_min + 1) & 36028797018963968ULL) == 0ULL) {
                          unsigned int tmp_262;
                          
#line 3472 
                          if (((unsigned long long)((int)cw_min + 1) & 18014398509481984ULL) == 0ULL) {
                            unsigned int tmp_261;
                            
#line 3472 
                            if (((unsigned long long)((int)cw_min + 1) & 9007199254740992ULL) == 0ULL) {
                              unsigned int tmp_260;
                              
#line 3472 
                              if (((unsigned long long)((int)cw_min + 1) & 4503599627370496ULL) == 0ULL) {
                                unsigned int tmp_259;
                                
#line 3472 
                                if (((unsigned long long)((int)cw_min + 1) & 2251799813685248ULL) == 0ULL) {
                                  unsigned int tmp_258;
                                  
#line 3472 
                                  if (((unsigned long long)((int)cw_min + 1) & 1125899906842624ULL) == 0ULL) {
                                    unsigned int tmp_257;
                                    
#line 3472 
                                    if (((unsigned long long)((int)cw_min + 1) & 562949953421312ULL) == 0ULL) {
                                      unsigned int tmp_256;
                                      
#line 3472 
                                      if (((unsigned long long)((int)cw_min + 1) & 281474976710656ULL) == 0ULL) {
                                        unsigned int tmp_255;
                                        
#line 3472 
                                        if (((unsigned long long)((int)cw_min + 1) & 140737488355328ULL) == 0ULL) {
                                          unsigned int tmp_254;
                                          
#line 3472 
                                          if (((unsigned long long)((int)cw_min + 1) & 70368744177664ULL) == 0ULL) {
                                            unsigned int tmp_253;
                                            
#line 3472 
                                            if (((unsigned long long)((int)cw_min + 1) & 35184372088832ULL) == 0ULL) {
                                              unsigned int tmp_252;
                                              
#line 3472 
                                              if (((unsigned long long)((int)cw_min + 1) & 17592186044416ULL) == 0ULL) {
                                                unsigned int tmp_251;
                                                
#line 3472 
                                                if (((unsigned long long)((int)cw_min + 1) & 8796093022208ULL) == 0ULL) {
                                                  unsigned int tmp_250;
                                                  
#line 3472 
                                                  if (((unsigned long long)((int)cw_min + 1) & 4398046511104ULL) == 0ULL) {
                                                    unsigned int tmp_249;
                                                    
#line 3472 
                                                    if (((unsigned long long)((int)cw_min + 1) & 2199023255552ULL) == 0ULL) {
                                                      unsigned int tmp_248;
                                                      
#line 3472 
                                                      if (((unsigned long long)((int)cw_min + 1) & 1099511627776ULL) == 0ULL) {
                                                        unsigned int tmp_247;
                                                        
#line 3472 
                                                        if (((unsigned long long)((int)cw_min + 1) & 549755813888ULL) == 0ULL) {
                                                          unsigned int tmp_246;
                                                          
#line 3472 
                                                          if (((unsigned long long)((int)cw_min + 1) & 274877906944ULL) == 0ULL) {
                                                            unsigned int tmp_245;
                                                            
#line 3472 
                                                            if (((unsigned long long)((int)cw_min + 1) & 137438953472ULL) == 0ULL) {
                                                              unsigned int tmp_244;
                                                              
#line 3472 
                                                              if (((unsigned long long)((int)cw_min + 1) & 68719476736ULL) == 0ULL) {
                                                                unsigned int tmp_243;
                                                                
#line 3472 
                                                                if (((unsigned long long)((int)cw_min + 1) & 34359738368ULL) == 0ULL) {
                                                                  unsigned int tmp_242;
                                                                  
#line 3472 
                                                                  if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 17179869184ULL) == 0ULL) {
                                                                    unsigned int tmp_241;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 8589934592ULL) == 0ULL) {
                                                                    unsigned int tmp_240;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 4294967296ULL) == 0ULL) {
                                                                    unsigned int tmp_239;
                                                                    
#line 3472 
                                                                    if (
                                                                    (int)cw_min + 1 >= 0) {
                                                                    unsigned int tmp_238;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 1073741824ULL) == 0ULL) {
                                                                    unsigned int tmp_237;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 536870912ULL) == 0ULL) {
                                                                    unsigned int tmp_236;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 268435456ULL) == 0ULL) {
                                                                    unsigned int tmp_235;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 134217728ULL) == 0ULL) {
                                                                    unsigned int tmp_234;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 67108864ULL) == 0ULL) {
                                                                    unsigned int tmp_233;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 33554432ULL) == 0ULL) {
                                                                    unsigned int tmp_232;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 16777216ULL) == 0ULL) {
                                                                    unsigned int tmp_231;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 8388608ULL) == 0ULL) {
                                                                    unsigned int tmp_230;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 4194304ULL) == 0ULL) {
                                                                    unsigned int tmp_229;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 2097152ULL) == 0ULL) {
                                                                    unsigned int tmp_228;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 1048576ULL) == 0ULL) {
                                                                    unsigned int tmp_227;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 524288ULL) == 0ULL) {
                                                                    unsigned int tmp_226;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 262144ULL) == 0ULL) {
                                                                    unsigned int tmp_225;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 131072ULL) == 0ULL) {
                                                                    unsigned int tmp_224;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 65536ULL) == 0ULL) {
                                                                    unsigned int tmp_223;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 32768ULL) == 0ULL) {
                                                                    unsigned int tmp_222;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 16384ULL) == 0ULL) {
                                                                    unsigned int tmp_221;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 8192ULL) == 0ULL) {
                                                                    unsigned int tmp_220;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 4096ULL) == 0ULL) {
                                                                    unsigned int tmp_219;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 2048ULL) == 0ULL) {
                                                                    unsigned int tmp_218;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 1024ULL) == 0ULL) {
                                                                    unsigned int tmp_217;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 512ULL) == 0ULL) {
                                                                    unsigned int tmp_216;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 256ULL) == 0ULL) {
                                                                    unsigned int tmp_215;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 128ULL) == 0ULL) {
                                                                    unsigned int tmp_214;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 64ULL) == 0ULL) {
                                                                    unsigned int tmp_213;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 32ULL) == 0ULL) {
                                                                    unsigned int tmp_212;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 16ULL) == 0ULL) {
                                                                    unsigned int tmp_211;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 8ULL) == 0ULL) {
                                                                    unsigned int tmp_210;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 4ULL) == 0ULL) {
                                                                    unsigned int tmp_209;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 2ULL) == 0ULL) {
                                                                    unsigned int tmp_208;
                                                                    
#line 3472 
                                                                    if (
                                                                    ((unsigned long long)((int)cw_min + 1) & 1ULL) == 0ULL) {
                                                                    int tmp_207;
                                                                    
#line 3472 
                                                                    tmp_207 = ____ilog2_NaN();
                                                                    
#line 3472 
                                                                    tmp_208 = (unsigned int)((unsigned char)tmp_207);
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_208 = 0U;
                                                                    
#line 3472 
                                                                    tmp_209 = tmp_208;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_209 = 1U;
                                                                    
#line 3472 
                                                                    tmp_210 = tmp_209;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_210 = 2U;
                                                                    
#line 3472 
                                                                    tmp_211 = tmp_210;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_211 = 3U;
                                                                    
#line 3472 
                                                                    tmp_212 = tmp_211;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_212 = 4U;
                                                                    
#line 3472 
                                                                    tmp_213 = tmp_212;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_213 = 5U;
                                                                    
#line 3472 
                                                                    tmp_214 = tmp_213;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_214 = 6U;
                                                                    
#line 3472 
                                                                    tmp_215 = tmp_214;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_215 = 7U;
                                                                    
#line 3472 
                                                                    tmp_216 = tmp_215;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_216 = 8U;
                                                                    
#line 3472 
                                                                    tmp_217 = tmp_216;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_217 = 9U;
                                                                    
#line 3472 
                                                                    tmp_218 = tmp_217;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_218 = 10U;
                                                                    
#line 3472 
                                                                    tmp_219 = tmp_218;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_219 = 11U;
                                                                    
#line 3472 
                                                                    tmp_220 = tmp_219;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_220 = 12U;
                                                                    
#line 3472 
                                                                    tmp_221 = tmp_220;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_221 = 13U;
                                                                    
#line 3472 
                                                                    tmp_222 = tmp_221;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_222 = 14U;
                                                                    
#line 3472 
                                                                    tmp_223 = tmp_222;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_223 = 15U;
                                                                    
#line 3472 
                                                                    tmp_224 = tmp_223;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_224 = 16U;
                                                                    
#line 3472 
                                                                    tmp_225 = tmp_224;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_225 = 17U;
                                                                    
#line 3472 
                                                                    tmp_226 = tmp_225;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_226 = 18U;
                                                                    
#line 3472 
                                                                    tmp_227 = tmp_226;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_227 = 19U;
                                                                    
#line 3472 
                                                                    tmp_228 = tmp_227;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_228 = 20U;
                                                                    
#line 3472 
                                                                    tmp_229 = tmp_228;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_229 = 21U;
                                                                    
#line 3472 
                                                                    tmp_230 = tmp_229;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_230 = 22U;
                                                                    
#line 3472 
                                                                    tmp_231 = tmp_230;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_231 = 23U;
                                                                    
#line 3472 
                                                                    tmp_232 = tmp_231;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_232 = 24U;
                                                                    
#line 3472 
                                                                    tmp_233 = tmp_232;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_233 = 25U;
                                                                    
#line 3472 
                                                                    tmp_234 = tmp_233;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_234 = 26U;
                                                                    
#line 3472 
                                                                    tmp_235 = tmp_234;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_235 = 27U;
                                                                    
#line 3472 
                                                                    tmp_236 = tmp_235;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_236 = 28U;
                                                                    
#line 3472 
                                                                    tmp_237 = tmp_236;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_237 = 29U;
                                                                    
#line 3472 
                                                                    tmp_238 = tmp_237;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_238 = 30U;
                                                                    
#line 3472 
                                                                    tmp_239 = tmp_238;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_239 = 31U;
                                                                    
#line 3472 
                                                                    tmp_240 = tmp_239;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_240 = 32U;
                                                                    
#line 3472 
                                                                    tmp_241 = tmp_240;
                                                                    }
                                                                    else 
                                                                    
#line 3472 
                                                                    tmp_241 = 33U;
                                                                    
#line 3472 
                                                                    tmp_242 = tmp_241;
                                                                  }
                                                                  else 
                                                                    
#line 3472 
                                                                    tmp_242 = 34U;
                                                                  
#line 3472 
                                                                  tmp_243 = tmp_242;
                                                                }
                                                                else 
                                                                  
#line 3472 
                                                                  tmp_243 = 35U;
                                                                
#line 3472 
                                                                tmp_244 = tmp_243;
                                                              }
                                                              else 
#line 3472 
                                                                   tmp_244 = 36U;
                                                              
#line 3472 
                                                              tmp_245 = tmp_244;
                                                            }
                                                            else 
#line 3472 
                                                                 tmp_245 = 37U;
                                                            
#line 3472 
                                                            tmp_246 = tmp_245;
                                                          }
                                                          else 
#line 3472 
                                                               tmp_246 = 38U;
                                                          
#line 3472 
                                                          tmp_247 = tmp_246;
                                                        }
                                                        else 
#line 3472 
                                                             tmp_247 = 39U;
                                                        
#line 3472 
                                                        tmp_248 = tmp_247;
                                                      }
                                                      else 
#line 3472 
                                                           tmp_248 = 40U;
                                                      
#line 3472 
                                                      tmp_249 = tmp_248;
                                                    }
                                                    else 
#line 3472 
                                                         tmp_249 = 41U;
                                                    
#line 3472 
                                                    tmp_250 = tmp_249;
                                                  }
                                                  else 
#line 3472 
                                                       tmp_250 = 42U;
                                                  
#line 3472 
                                                  tmp_251 = tmp_250;
                                                }
                                                else 
#line 3472 
                                                     tmp_251 = 43U;
                                                
#line 3472 
                                                tmp_252 = tmp_251;
                                              }
                                              else 
#line 3472 
                                                   tmp_252 = 44U;
                                              
#line 3472 
                                              tmp_253 = tmp_252;
                                            }
                                            else 
#line 3472 
                                                 tmp_253 = 45U;
                                            
#line 3472 
                                            tmp_254 = tmp_253;
                                          }
                                          else 
#line 3472 
                                               tmp_254 = 46U;
                                          
#line 3472 
                                          tmp_255 = tmp_254;
                                        }
                                        else 
#line 3472 
                                             tmp_255 = 47U;
                                        
#line 3472 
                                        tmp_256 = tmp_255;
                                      }
                                      else 
#line 3472 
                                           tmp_256 = 48U;
                                      
#line 3472 
                                      tmp_257 = tmp_256;
                                    }
                                    else 
#line 3472 
                                         tmp_257 = 49U;
                                    
#line 3472 
                                    tmp_258 = tmp_257;
                                  }
                                  else 
#line 3472 
                                       tmp_258 = 50U;
                                  
#line 3472 
                                  tmp_259 = tmp_258;
                                }
                                else 
#line 3472 
                                     tmp_259 = 51U;
                                
#line 3472 
                                tmp_260 = tmp_259;
                              }
                              else 
#line 3472 
                                   tmp_260 = 52U;
                              
#line 3472 
                              tmp_261 = tmp_260;
                            }
                            else 
#line 3472 
                                 tmp_261 = 53U;
                            
#line 3472 
                            tmp_262 = tmp_261;
                          }
                          else 
#line 3472 
                               tmp_262 = 54U;
                          
#line 3472 
                          tmp_263 = tmp_262;
                        }
                        else 
#line 3472 
                             tmp_263 = 55U;
                        
#line 3472 
                        tmp_264 = tmp_263;
                      }
                      else 
#line 3472 
                           tmp_264 = 56U;
                      
#line 3472 
                      tmp_265 = tmp_264;
                    }
                    else 
#line 3472 
                         tmp_265 = 57U;
                    
#line 3472 
                    tmp_266 = tmp_265;
                  }
                  else 
#line 3472 
                       tmp_266 = 58U;
                  
#line 3472 
                  tmp_267 = tmp_266;
                }
                else 
#line 3472 
                     tmp_267 = 59U;
                
#line 3472 
                tmp_268 = tmp_267;
              }
              else 
#line 3472 
                   tmp_268 = 60U;
              
#line 3472 
              tmp_269 = tmp_268;
            }
            else 
#line 3472 
                 tmp_269 = 61U;
            
#line 3472 
            tmp_270 = tmp_269;
          }
          else 
#line 3472 
               tmp_270 = 62U;
          
#line 3472 
          tmp_271 = tmp_270;
        }
        else 
#line 3472 
             tmp_271 = 63U;
        
#line 3472 
        tmp_272 = tmp_271;
      }
      
#line 3472 
      cmd->__anonCompField_mwl8k_cmd_set_edca_params_102.sta.log_cw_min = (unsigned char)tmp_272;
    }
    else {
      int tmp_273;
      
#line 3472 
      tmp_273 = __ilog2_u32((unsigned int)((int)cw_min + 1));
      
#line 3472 
      cmd->__anonCompField_mwl8k_cmd_set_edca_params_102.sta.log_cw_min = (unsigned char)tmp_273;
    }
    
#line 3473 
    cmd->__anonCompField_mwl8k_cmd_set_edca_params_102.sta.aifs = aifs;
    
#line 3474 
    cmd->__anonCompField_mwl8k_cmd_set_edca_params_102.sta.txq = qnum;
  }
  
#line 3477 
  rc = mwl8k_post_cmd(hw,& cmd->header);
  
#line 3478 
  kfree((void const *)cmd);
  
#line 3480 
  __retres = rc;
  return_label: 
#line 3480 
                return __retres;
}


#line 3491  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_set_wmm_mode(struct ieee80211_hw *hw, bool enable)
{
  int __retres;
  struct mwl8k_cmd_set_wmm_mode *cmd;
  int rc;
  
#line 3493 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 3497 
  cmd = (struct mwl8k_cmd_set_wmm_mode *)kzalloc(10UL,208U);
  
#line 3498 
  if (cmd == (struct mwl8k_cmd_set_wmm_mode *)0) {
    
#line 3499 
    __retres = -12;
    
#line 3499 
    goto return_label;
  }
  else ;
  
#line 3501 
  cmd->header.code = (unsigned short)291U;
  
#line 3502 
  cmd->header.length = (unsigned short)10U;
  
#line 3503 
  cmd->action = (unsigned short)((int)enable != 0);
  
#line 3505 
  rc = mwl8k_post_cmd(hw,& cmd->header);
  
#line 3506 
  kfree((void const *)cmd);
  
#line 3508 
  if (rc == 0) 
#line 3509 
               priv->wmm_enabled = enable; else ;
  
#line 3511 
  __retres = rc;
  return_label: 
#line 3511 
                return __retres;
}


#line 3524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_mimo_config(struct ieee80211_hw *hw, __u8 rx, __u8 tx)
{
  int __retres;
  struct mwl8k_cmd_mimo_config *cmd;
  int rc;
  
#line 3529 
  cmd = (struct mwl8k_cmd_mimo_config *)kzalloc(14UL,208U);
  
#line 3530 
  if (cmd == (struct mwl8k_cmd_mimo_config *)0) {
    
#line 3531 
    __retres = -12;
    
#line 3531 
    goto return_label;
  }
  else ;
  
#line 3533 
  cmd->header.code = (unsigned short)293U;
  
#line 3534 
  cmd->header.length = (unsigned short)14U;
  
#line 3535 
  cmd->action = 1U;
  
#line 3536 
  cmd->rx_antenna_map = rx;
  
#line 3537 
  cmd->tx_antenna_map = tx;
  
#line 3539 
  rc = mwl8k_post_cmd(hw,& cmd->header);
  
#line 3540 
  kfree((void const *)cmd);
  
#line 3542 
  __retres = rc;
  return_label: 
#line 3542 
                return __retres;
}


#line 3567  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_use_fixed_rate_sta(struct ieee80211_hw *hw)
{
  int __retres;
  struct mwl8k_cmd_use_fixed_rate_sta *cmd;
  int rc;
  
#line 3572 
  cmd = (struct mwl8k_cmd_use_fixed_rate_sta *)kzalloc(160UL,208U);
  
#line 3573 
  if (cmd == (struct mwl8k_cmd_use_fixed_rate_sta *)0) {
    
#line 3574 
    __retres = -12;
    
#line 3574 
    goto return_label;
  }
  else ;
  
#line 3576 
  cmd->header.code = (unsigned short)294U;
  
#line 3577 
  cmd->header.length = (unsigned short)160U;
  
#line 3578 
  cmd->action = 2U;
  
#line 3579 
  cmd->rate_type = 0U;
  
#line 3581 
  rc = mwl8k_post_cmd(hw,& cmd->header);
  
#line 3582 
  kfree((void const *)cmd);
  
#line 3584 
  __retres = rc;
  return_label: 
#line 3584 
                return __retres;
}


#line 3607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_use_fixed_rate_ap(struct ieee80211_hw *hw, int mcast, int mgmt)
{
  int __retres;
  struct mwl8k_cmd_use_fixed_rate_ap *cmd;
  int rc;
  
#line 3612 
  cmd = (struct mwl8k_cmd_use_fixed_rate_ap *)kzalloc(87UL,208U);
  
#line 3613 
  if (cmd == (struct mwl8k_cmd_use_fixed_rate_ap *)0) {
    
#line 3614 
    __retres = -12;
    
#line 3614 
    goto return_label;
  }
  else ;
  
#line 3616 
  cmd->header.code = (unsigned short)294U;
  
#line 3617 
  cmd->header.length = (unsigned short)87U;
  
#line 3618 
  cmd->action = 2U;
  
#line 3619 
  cmd->multicast_rate = (unsigned char)mcast;
  
#line 3620 
  cmd->management_rate = (unsigned char)mgmt;
  
#line 3622 
  rc = mwl8k_post_cmd(hw,& cmd->header);
  
#line 3623 
  kfree((void const *)cmd);
  
#line 3625 
  __retres = rc;
  return_label: 
#line 3625 
                return __retres;
}


#line 3636  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_enable_sniffer(struct ieee80211_hw *hw, bool enable)
{
  int __retres;
  struct mwl8k_cmd_enable_sniffer *cmd;
  int rc;
  
#line 3641 
  cmd = (struct mwl8k_cmd_enable_sniffer *)kzalloc(12UL,208U);
  
#line 3642 
  if (cmd == (struct mwl8k_cmd_enable_sniffer *)0) {
    
#line 3643 
    __retres = -12;
    
#line 3643 
    goto return_label;
  }
  else ;
  
#line 3645 
  cmd->header.code = (unsigned short)336U;
  
#line 3646 
  cmd->header.length = (unsigned short)12U;
  
#line 3647 
  cmd->action = (unsigned int)((int)enable != 0);
  
#line 3649 
  rc = mwl8k_post_cmd(hw,& cmd->header);
  
#line 3650 
  kfree((void const *)cmd);
  
#line 3652 
  __retres = rc;
  return_label: 
#line 3652 
                return __retres;
}


#line 3671  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_update_mac_addr(struct ieee80211_hw *hw, struct ieee80211_vif *vif, u8 *mac, bool set)
{
  int __retres;
  struct mwl8k_cmd_update_mac_addr *cmd;
  int mac_type;
  int rc;
  
#line 3674 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 3675 
  struct mwl8k_vif *mwl8k_vif = (struct mwl8k_vif *)(& vif->drv_priv);
  
#line 3680 
  mac_type = 2;
  
#line 3681 
  if (vif != (struct ieee80211_vif *)0 && vif->type == (unsigned int)NL80211_IFTYPE_STATION) {
    int tmp;
    
#line 3682 
    tmp = ffs((int)priv->sta_macids_supported);
    
#line 3682 
    ;
    
#line 3682 
    if (mwl8k_vif->macid + 1 == tmp) 
      
#line 3683 
      if ((int)priv->ap_fw != 0) 
#line 3684 
                                 mac_type = 1; else 
#line 3686 
                                                    mac_type = 0;
    else 
#line 3688 
         mac_type = 1;
  }
  else 
    
#line 3689 
    if (vif != (struct ieee80211_vif *)0 && vif->type == (unsigned int)NL80211_IFTYPE_AP) {
      int tmp_0;
      
#line 3690 
      tmp_0 = ffs((int)priv->ap_macids_supported);
      
#line 3690 
      ;
      
#line 3690 
      if (mwl8k_vif->macid + 1 == tmp_0) 
#line 3691 
                                         mac_type = 2; else 
#line 3693 
                                                            mac_type = 3;
    }
    else ;
  
#line 3696 
  cmd = (struct mwl8k_cmd_update_mac_addr *)kzalloc(16UL,208U);
  
#line 3697 
  if (cmd == (struct mwl8k_cmd_update_mac_addr *)0) {
    
#line 3698 
    __retres = -12;
    
#line 3698 
    goto return_label;
  }
  else ;
  
#line 3700 
  if ((int)set != 0) 
#line 3701 
                     cmd->header.code = (unsigned short)514U; else 
#line 3703 
                                                                   cmd->header.code = (unsigned short)518U;
  
#line 3705 
  cmd->header.length = (unsigned short)16U;
  
#line 3706 
  if ((int)priv->ap_fw != 0) {
    
#line 3707 
    cmd->__anonCompField_mwl8k_cmd_update_mac_addr_103.mbss.mac_type = (unsigned short)mac_type;
    
#line 3708 
    memcpy((void *)(& cmd->__anonCompField_mwl8k_cmd_update_mac_addr_103.mbss.mac_addr),(void const *)mac,6UL);
  }
  else 
#line 3710 
       memcpy((void *)(& cmd->__anonCompField_mwl8k_cmd_update_mac_addr_103.mac_addr),(void const *)mac,6UL);
  
#line 3713 
  rc = mwl8k_post_pervif_cmd(hw,vif,& cmd->header);
  
#line 3714 
  kfree((void const *)cmd);
  
#line 3716 
  __retres = rc;
  return_label: 
#line 3716 
                return __retres;
}


#line 3722  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
__inline static int mwl8k_cmd_set_mac_addr(struct ieee80211_hw *hw, struct ieee80211_vif *vif, u8 *mac)
{
  int tmp;
  
#line 3725 
  tmp = mwl8k_cmd_update_mac_addr(hw,vif,mac,(_Bool)1);
  
#line 3725 
  return tmp;
}


#line 3731  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
__inline static int mwl8k_cmd_del_mac_addr(struct ieee80211_hw *hw, struct ieee80211_vif *vif, u8 *mac)
{
  int tmp;
  
#line 3734 
  tmp = mwl8k_cmd_update_mac_addr(hw,vif,mac,(_Bool)0);
  
#line 3734 
  return tmp;
}


#line 3746  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_set_rateadapt_mode(struct ieee80211_hw *hw, __u16 mode)
{
  int __retres;
  struct mwl8k_cmd_set_rate_adapt_mode *cmd;
  int rc;
  
#line 3751 
  cmd = (struct mwl8k_cmd_set_rate_adapt_mode *)kzalloc(12UL,208U);
  
#line 3752 
  if (cmd == (struct mwl8k_cmd_set_rate_adapt_mode *)0) {
    
#line 3753 
    __retres = -12;
    
#line 3753 
    goto return_label;
  }
  else ;
  
#line 3755 
  cmd->header.code = (unsigned short)515U;
  
#line 3756 
  cmd->header.length = (unsigned short)12U;
  
#line 3757 
  cmd->action = (unsigned short)1U;
  
#line 3758 
  cmd->mode = mode;
  
#line 3760 
  rc = mwl8k_post_cmd(hw,& cmd->header);
  
#line 3761 
  kfree((void const *)cmd);
  
#line 3763 
  __retres = rc;
  return_label: 
#line 3763 
                return __retres;
}


#line 3774  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_get_watchdog_bitmap(struct ieee80211_hw *hw, u8 *bitmap)
{
  int __retres;
  struct mwl8k_cmd_get_watchdog_bitmap *cmd;
  int rc;
  
#line 3779 
  cmd = (struct mwl8k_cmd_get_watchdog_bitmap *)kzalloc(9UL,208U);
  
#line 3780 
  if (cmd == (struct mwl8k_cmd_get_watchdog_bitmap *)0) {
    
#line 3781 
    __retres = -12;
    
#line 3781 
    goto return_label;
  }
  else ;
  
#line 3783 
  cmd->header.code = (unsigned short)517U;
  
#line 3784 
  cmd->header.length = (unsigned short)9U;
  
#line 3786 
  rc = mwl8k_post_cmd(hw,& cmd->header);
  
#line 3787 
  if (rc == 0) 
#line 3788 
               *bitmap = cmd->bitmap; else ;
  
#line 3790 
  kfree((void const *)cmd);
  
#line 3792 
  __retres = rc;
  return_label: 
#line 3792 
                return __retres;
}


#line 3797 
static void mwl8k_destroy_ba(struct ieee80211_hw *hw, u8 idx);


#line 3800  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_watchdog_ba_events(struct work_struct *work)
{
  int rc;
  u8 stream_index;
  struct mwl8k_ampdu_stream *streams;
  struct mwl8k_priv *tmp;
  int i;
  
#line 3803 
  u8 bitmap = (unsigned char)0U;
  {
    
#line 3806 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 3806 
    tmp = (struct mwl8k_priv *)__mptr + 18446744073709549768U;
  }
  
#line 3805 
  struct mwl8k_priv *priv = tmp;
  
#line 3807 
  struct ieee80211_hw *hw = priv->hw;
  
#line 3809 
  u32 status = 0U;
  
#line 3811 
  mwl8k_fw_lock(hw);
  
#line 3813 
  rc = mwl8k_cmd_get_watchdog_bitmap(priv->hw,& bitmap);
  
#line 3814 
  if (rc != 0) 
#line 3815 
               goto done; else ;
  
#line 3817 
  ldv_spin_lock_93(& priv->stream_lock);
  
#line 3820 
  i = 0;
  
#line 3820 
  goto ldv_53251;
  ldv_53250: 
#line 3821 
  ;
  
#line 3821 
  if ((((int)bitmap >> i) & 1) != 0) {
    
#line 3822 
    stream_index = (unsigned char)((i + 3) % 8);
    
#line 3824 
    streams = & priv->ampdu[(int)stream_index];
    
#line 3825 
    if ((unsigned int)streams->state == 3U) {
      
#line 3826 
      ieee80211_stop_tx_ba_session(streams->sta,(unsigned short)((int)streams->tid));
      
#line 3828 
      ldv_spin_unlock_94(& priv->stream_lock);
      
#line 3829 
      mwl8k_destroy_ba(hw,(unsigned char)((int)stream_index));
      
#line 3830 
      ldv_spin_lock_95(& priv->stream_lock);
    }
    else ;
  }
  else ;
  
#line 3820 
  i += 1;
  ldv_53251: 
#line 3821 
  ;
  
#line 3820 
  if (i <= 7) 
#line 3822 
              goto ldv_53250; else 
#line 3825 
                                   goto ldv_53252;
  ldv_53252: 
#line 3826 
  ;
  
#line 3835 
  ldv_spin_unlock_96(& priv->stream_lock);
  done: 
#line 3836 
  ;
  
#line 3837 
  atomic_dec(& priv->watchdog_event_pending);
  
#line 3838 
  status = ioread32(priv->regs + 3132U);
  
#line 3839 
  iowrite32(status | 16384U,priv->regs + 3132U);
  
#line 3841 
  mwl8k_fw_unlock(hw);
  
#line 3842 
  return;
}


#line 3854  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_bss_start(struct ieee80211_hw *hw, struct ieee80211_vif *vif, int enable)
{
  int __retres;
  struct mwl8k_cmd_bss_start *cmd;
  int rc;
  
#line 3858 
  struct mwl8k_vif *mwl8k_vif = (struct mwl8k_vif *)(& vif->drv_priv);
  
#line 3859 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 3862 
  if (enable != 0 && (priv->running_bsses & (unsigned int)(1 << mwl8k_vif->macid)) != 0U) {
    
#line 3863 
    __retres = 0;
    
#line 3863 
    goto return_label;
  }
  else ;
  
#line 3865 
  if (enable == 0 && (priv->running_bsses & (unsigned int)(1 << mwl8k_vif->macid)) == 0U) {
    
#line 3866 
    __retres = 0;
    
#line 3866 
    goto return_label;
  }
  else ;
  
#line 3868 
  cmd = (struct mwl8k_cmd_bss_start *)kzalloc(12UL,208U);
  
#line 3869 
  if (cmd == (struct mwl8k_cmd_bss_start *)0) {
    
#line 3870 
    __retres = -12;
    
#line 3870 
    goto return_label;
  }
  else ;
  
#line 3872 
  cmd->header.code = (unsigned short)4352U;
  
#line 3873 
  cmd->header.length = (unsigned short)12U;
  
#line 3874 
  cmd->enable = (unsigned int)enable;
  
#line 3876 
  rc = mwl8k_post_pervif_cmd(hw,vif,& cmd->header);
  
#line 3877 
  kfree((void const *)cmd);
  
#line 3879 
  if (rc == 0) 
    
#line 3880 
    if (enable != 0) 
#line 3881 
                     priv->running_bsses |= (unsigned int)(1 << mwl8k_vif->macid); else 
                                                                    
#line 3883 
                                                                    priv->running_bsses &= (unsigned int)(~ (1 << mwl8k_vif->macid));
  else ;
  
#line 3885 
  __retres = rc;
  return_label: 
#line 3885 
                return __retres;
}


#line 3888  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_enable_bsses(struct ieee80211_hw *hw, bool enable, u32 bitmap)
{
  struct mwl8k_vif *mwl8k_vif;
  struct mwl8k_vif *tmp_vif;
  struct ieee80211_vif *vif;
  struct mwl8k_vif *tmp;
  struct mwl8k_vif *tmp_0;
  struct mwl8k_vif *tmp_1;
  
#line 3890 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  {
    
#line 3894 
    struct list_head const *__mptr = (struct list_head const *)priv->vif_list.next;
    
#line 3894 
    tmp = (struct mwl8k_vif *)__mptr;
  }
  
#line 3894 
  mwl8k_vif = tmp;
  {
    
#line 3894 
    struct list_head const *__mptr_0 = (struct list_head const *)mwl8k_vif->list.next;
    
#line 3894 
    tmp_0 = (struct mwl8k_vif *)__mptr_0;
  }
  
#line 3895 
  tmp_vif = tmp_0;
  
#line 3894 
  goto ldv_53282;
  ldv_53281: 
#line 3895 
  ;
  
#line 3895 
  vif = mwl8k_vif->vif;
  
#line 3897 
  if (((unsigned int)(1 << mwl8k_vif->macid) & bitmap) == 0U) 
#line 3898 
                                                              goto ldv_53280; else ;
  
#line 3900 
  if (vif->type == (unsigned int)NL80211_IFTYPE_AP) 
#line 3901 
                                                    mwl8k_cmd_bss_start(hw,vif,(int)enable); else ;
  ldv_53280: 
#line 3902 
  ;
  
#line 3894 
  mwl8k_vif = tmp_vif;
  {
    
#line 3894 
    struct list_head const *__mptr_1 = (struct list_head const *)tmp_vif->list.next;
    
#line 3894 
    tmp_1 = (struct mwl8k_vif *)__mptr_1;
  }
  
#line 3894 
  tmp_vif = tmp_1;
  ldv_53282: 
#line 3896 
  ;
  
#line 3894 
  if (& mwl8k_vif->list != & priv->vif_list) 
#line 3896 
                                             goto ldv_53281; else 
#line 3899 
                                                                  goto ldv_53283;
  ldv_53283: 
#line 3900 
  ;
  
#line 3901 
  return;
}


#line 3954  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_check_ba(struct ieee80211_hw *hw, struct mwl8k_ampdu_stream *stream, struct ieee80211_vif *vif)
{
  int __retres;
  struct mwl8k_cmd_bastream *cmd;
  int rc;
  
#line 3960 
  cmd = (struct mwl8k_cmd_bastream *)kzalloc(51UL,208U);
  
#line 3961 
  if (cmd == (struct mwl8k_cmd_bastream *)0) {
    
#line 3962 
    __retres = -12;
    
#line 3962 
    goto return_label;
  }
  else ;
  
#line 3964 
  cmd->header.code = (unsigned short)4389U;
  
#line 3965 
  cmd->header.length = (unsigned short)51U;
  
#line 3967 
  cmd->action = 4U;
  
#line 3969 
  cmd->__anonCompField_mwl8k_cmd_bastream_104.create_params.queue_id = stream->idx;
  
#line 3970 
  memcpy((void *)(& cmd->__anonCompField_mwl8k_cmd_bastream_104.create_params.peer_mac_addr[0]),(void const *)(& (stream->sta)->addr),6UL);
  
#line 3972 
  cmd->__anonCompField_mwl8k_cmd_bastream_104.create_params.tid = stream->tid;
  
#line 3974 
  cmd->__anonCompField_mwl8k_cmd_bastream_104.create_params.flags = 1U;
  
#line 3978 
  rc = mwl8k_post_pervif_cmd(hw,vif,& cmd->header);
  
#line 3980 
  kfree((void const *)cmd);
  
#line 3982 
  __retres = rc;
  return_label: 
#line 3982 
                return __retres;
}


#line 3986  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_create_ba(struct ieee80211_hw *hw, struct mwl8k_ampdu_stream *stream, u8 buf_size, struct ieee80211_vif *vif)
{
  int __retres;
  struct mwl8k_cmd_bastream *cmd;
  int rc;
  
#line 3992 
  cmd = (struct mwl8k_cmd_bastream *)kzalloc(51UL,208U);
  
#line 3993 
  if (cmd == (struct mwl8k_cmd_bastream *)0) {
    
#line 3994 
    __retres = -12;
    
#line 3994 
    goto return_label;
  }
  else ;
  
#line 3997 
  cmd->header.code = (unsigned short)4389U;
  
#line 3998 
  cmd->header.length = (unsigned short)51U;
  
#line 4000 
  cmd->action = 0U;
  
#line 4002 
  cmd->__anonCompField_mwl8k_cmd_bastream_104.create_params.bar_thrs = (unsigned int)buf_size;
  
#line 4003 
  cmd->__anonCompField_mwl8k_cmd_bastream_104.create_params.window_size = (unsigned int)buf_size;
  
#line 4004 
  cmd->__anonCompField_mwl8k_cmd_bastream_104.create_params.queue_id = stream->idx;
  
#line 4006 
  memcpy((void *)(& cmd->__anonCompField_mwl8k_cmd_bastream_104.create_params.peer_mac_addr),(void const *)(& (stream->sta)->addr),6UL);
  
#line 4007 
  cmd->__anonCompField_mwl8k_cmd_bastream_104.create_params.tid = stream->tid;
  
#line 4008 
  cmd->__anonCompField_mwl8k_cmd_bastream_104.create_params.curr_seq_no = (unsigned short)0U;
  
#line 4009 
  cmd->__anonCompField_mwl8k_cmd_bastream_104.create_params.reset_seq_no_flag = (unsigned char)1U;
  
#line 4011 
  cmd->__anonCompField_mwl8k_cmd_bastream_104.create_params.param_info = (unsigned char)(((int)(stream->sta)->ht_cap.ampdu_factor & 3) | (((int)(stream->sta)->ht_cap.ampdu_density << 2) & 28));
  
#line 4017 
  cmd->__anonCompField_mwl8k_cmd_bastream_104.create_params.flags = 1U;
  
#line 4021 
  rc = mwl8k_post_pervif_cmd(hw,vif,& cmd->header);
  
#line 4023 
  dev_printk("\001",(struct device const *)(& (hw->wiphy)->dev),"Created a BA stream for %pM : tid %d\n",(u8 *)(& (stream->sta)->addr),(int)stream->tid);
  
#line 4025 
  kfree((void const *)cmd);
  
#line 4027 
  __retres = rc;
  return_label: 
#line 4027 
                return __retres;
}


#line 4030  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_destroy_ba(struct ieee80211_hw *hw, u8 idx)
{
  struct mwl8k_cmd_bastream *cmd;
  
#line 4035 
  cmd = (struct mwl8k_cmd_bastream *)kzalloc(51UL,208U);
  
#line 4036 
  if (cmd == (struct mwl8k_cmd_bastream *)0) 
#line 4037 
                                             goto return_label; else ;
  
#line 4039 
  cmd->header.code = (unsigned short)4389U;
  
#line 4040 
  cmd->header.length = (unsigned short)51U;
  
#line 4041 
  cmd->action = 2U;
  
#line 4043 
  cmd->__anonCompField_mwl8k_cmd_bastream_104.destroy_params.ba_context = (unsigned int)idx;
  
#line 4044 
  mwl8k_post_cmd(hw,& cmd->header);
  
#line 4046 
  dev_printk("\001",(struct device const *)(& (hw->wiphy)->dev),"Deleted BA stream index %d\n",(int)idx);
  
#line 4048 
  kfree((void const *)cmd);
  return_label: 
#line 4049 
                return;
}


#line 4079  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_set_new_stn_add(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_sta *sta)
{
  int __retres;
  struct mwl8k_cmd_set_new_stn *cmd;
  u32 rates;
  int rc;
  
#line 4087 
  cmd = (struct mwl8k_cmd_set_new_stn *)kzalloc(48UL,208U);
  
#line 4088 
  if (cmd == (struct mwl8k_cmd_set_new_stn *)0) {
    
#line 4089 
    __retres = -12;
    
#line 4089 
    goto return_label;
  }
  else ;
  
#line 4091 
  cmd->header.code = (unsigned short)4369U;
  
#line 4092 
  cmd->header.length = (unsigned short)48U;
  
#line 4093 
  cmd->aid = sta->aid;
  
#line 4094 
  memcpy((void *)(& cmd->mac_addr),(void const *)(& sta->addr),6UL);
  
#line 4095 
  cmd->stn_id = sta->aid;
  
#line 4096 
  cmd->action = (unsigned short)0U;
  
#line 4097 
  if ((hw->conf.chandef.chan)->band == (unsigned int)IEEE80211_BAND_2GHZ) 
    
#line 4098 
    rates = sta->supp_rates[0]; else 
#line 4100 
                                     rates = sta->supp_rates[1] << 5;
  
#line 4101 
  cmd->legacy_rates = rates;
  
#line 4102 
  if ((int)sta->ht_cap.ht_supported != 0) {
    
#line 4103 
    cmd->ht_rates[0] = sta->ht_cap.mcs.rx_mask[0];
    
#line 4104 
    cmd->ht_rates[1] = sta->ht_cap.mcs.rx_mask[1];
    
#line 4105 
    cmd->ht_rates[2] = sta->ht_cap.mcs.rx_mask[2];
    
#line 4106 
    cmd->ht_rates[3] = sta->ht_cap.mcs.rx_mask[3];
    
#line 4107 
    cmd->ht_capabilities_info = sta->ht_cap.cap;
    
#line 4108 
    cmd->mac_ht_param_info = (unsigned char)(((int)sta->ht_cap.ampdu_factor & 3) | (((int)sta->ht_cap.ampdu_density << 2) & 28));
    
#line 4110 
    cmd->is_qos_sta = (unsigned char)1U;
  }
  else ;
  
#line 4113 
  rc = mwl8k_post_pervif_cmd(hw,vif,& cmd->header);
  
#line 4114 
  kfree((void const *)cmd);
  
#line 4116 
  __retres = rc;
  return_label: 
#line 4116 
                return __retres;
}


#line 4119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_set_new_stn_add_self(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  int __retres;
  struct mwl8k_cmd_set_new_stn *cmd;
  int rc;
  
#line 4125 
  cmd = (struct mwl8k_cmd_set_new_stn *)kzalloc(48UL,208U);
  
#line 4126 
  if (cmd == (struct mwl8k_cmd_set_new_stn *)0) {
    
#line 4127 
    __retres = -12;
    
#line 4127 
    goto return_label;
  }
  else ;
  
#line 4129 
  cmd->header.code = (unsigned short)4369U;
  
#line 4130 
  cmd->header.length = (unsigned short)48U;
  
#line 4131 
  memcpy((void *)(& cmd->mac_addr),(void const *)(& vif->addr),6UL);
  
#line 4133 
  rc = mwl8k_post_pervif_cmd(hw,vif,& cmd->header);
  
#line 4134 
  kfree((void const *)cmd);
  
#line 4136 
  __retres = rc;
  return_label: 
#line 4136 
                return __retres;
}


#line 4139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_set_new_stn_del(struct ieee80211_hw *hw, struct ieee80211_vif *vif, u8 *addr)
{
  int __retres;
  struct mwl8k_cmd_set_new_stn *cmd;
  int rc;
  int i;
  u8 idx;
  
#line 4143 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 4147 
  ldv_spin_lock_97(& priv->stream_lock);
  
#line 4149 
  i = 0;
  
#line 4149 
  goto ldv_53380;
  ldv_53379: 
#line 4150 
  ;
  {
    struct mwl8k_ampdu_stream *s;
    
#line 4151 
    s = & priv->ampdu[i];
    
#line 4152 
    if ((unsigned int)s->state != 0U) {
      int tmp;
      
#line 4153 
      tmp = memcmp((void const *)(& (s->sta)->addr),(void const *)addr,6UL);
      
#line 4153 
      if (tmp == 0) {
        
#line 4154 
        if ((unsigned int)s->state == 3U) {
          
#line 4155 
          idx = s->idx;
          
#line 4156 
          ldv_spin_unlock_98(& priv->stream_lock);
          
#line 4157 
          mwl8k_destroy_ba(hw,(unsigned char)((int)idx));
          
#line 4158 
          ldv_spin_lock_99(& priv->stream_lock);
        }
        else 
          
#line 4159 
          if ((unsigned int)s->state == 1U) 
#line 4160 
                                            mwl8k_remove_stream(hw,s); else ;
      }
      else ;
    }
    else ;
  }
  
#line 4149 
  i += 1;
  ldv_53380: 
#line 4150 
  ;
  
#line 4149 
  if (i <= 6) 
#line 4151 
              goto ldv_53379; else 
#line 4154 
                                   goto ldv_53381;
  ldv_53381: 
#line 4155 
  ;
  
#line 4166 
  ldv_spin_unlock_100(& priv->stream_lock);
  
#line 4168 
  cmd = (struct mwl8k_cmd_set_new_stn *)kzalloc(48UL,208U);
  
#line 4169 
  if (cmd == (struct mwl8k_cmd_set_new_stn *)0) {
    
#line 4170 
    __retres = -12;
    
#line 4170 
    goto return_label;
  }
  else ;
  
#line 4172 
  cmd->header.code = (unsigned short)4369U;
  
#line 4173 
  cmd->header.length = (unsigned short)48U;
  
#line 4174 
  memcpy((void *)(& cmd->mac_addr),(void const *)addr,6UL);
  
#line 4175 
  cmd->action = (unsigned short)2U;
  
#line 4177 
  rc = mwl8k_post_pervif_cmd(hw,vif,& cmd->header);
  
#line 4178 
  kfree((void const *)cmd);
  
#line 4180 
  __retres = rc;
  return_label: 
#line 4180 
                return __retres;
}


#line 4245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_update_encryption_enable(struct ieee80211_hw *hw, struct ieee80211_vif *vif, u8 *addr, u8 encr_type)
{
  int __retres;
  struct mwl8k_cmd_update_encryption *cmd;
  int rc;
  
#line 4253 
  cmd = (struct mwl8k_cmd_update_encryption *)kzalloc(23UL,208U);
  
#line 4254 
  if (cmd == (struct mwl8k_cmd_update_encryption *)0) {
    
#line 4255 
    __retres = -12;
    
#line 4255 
    goto return_label;
  }
  else ;
  
#line 4257 
  cmd->header.code = (unsigned short)4386U;
  
#line 4258 
  cmd->header.length = (unsigned short)23U;
  
#line 4259 
  cmd->action = 0U;
  
#line 4260 
  memcpy((void *)(& cmd->mac_addr),(void const *)addr,6UL);
  
#line 4261 
  cmd->encr_type = encr_type;
  
#line 4263 
  rc = mwl8k_post_pervif_cmd(hw,vif,& cmd->header);
  
#line 4264 
  kfree((void const *)cmd);
  
#line 4266 
  __retres = rc;
  return_label: 
#line 4266 
                return __retres;
}


#line 4269  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_encryption_set_cmd_info(struct mwl8k_cmd_set_key *cmd, u8 *addr, struct ieee80211_key_conf *key)
{
  int __retres;
  
#line 4273 
  cmd->header.code = (unsigned short)4386U;
  
#line 4274 
  cmd->header.length = (unsigned short)80U;
  
#line 4275 
  cmd->length = (unsigned short)64U;
  
#line 4277 
  cmd->key_id = (unsigned int)key->keyidx;
  
#line 4278 
  cmd->key_len = (unsigned short)key->keylen;
  
#line 4279 
  memcpy((void *)(& cmd->mac_addr),(void const *)addr,6UL);
  
#line 4281 
  switch (key->cipher) {
    case (u32)1027073: 
#line 4282 
    ;
    case (u32)1027077: 
#line 4283 
    ;
    
#line 4284 
    cmd->key_type_id = (unsigned short)0U;
    
#line 4285 
    if ((int)key->keyidx == 0) 
#line 4286 
                               cmd->key_info = 16777216U; else ;
    
#line 4288 
    goto ldv_53429;
    case (u32)1027074: 
#line 4289 
    ;
    
#line 4290 
    cmd->key_type_id = (unsigned short)1U;
    
#line 4291 
    if (((int)key->flags & 8) != 0) 
#line 4291 
                                    cmd->key_info = 8U; else 
#line 4291 
                                                             cmd->key_info = 4U;
    
#line 4294 
    cmd->key_info |= 33554496U;
    
#line 4296 
    goto ldv_53429;
    case (u32)1027076: 
#line 4297 
    ;
    
#line 4298 
    cmd->key_type_id = (unsigned short)2U;
    
#line 4299 
    if (((int)key->flags & 8) != 0) 
#line 4299 
                                    cmd->key_info = 8U; else 
#line 4299 
                                                             cmd->key_info = 4U;
    
#line 4302 
    goto ldv_53429;
    default: 
#line 4303 
    ;
    
#line 4304 
    __retres = -524;
    
#line 4304 
    goto return_label;
  }
  ldv_53429: 
#line 4307 
  ;
  
#line 4307 
  __retres = 0;
  return_label: 
#line 4307 
                return __retres;
}


#line 4310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_encryption_set_key(struct ieee80211_hw *hw, struct ieee80211_vif *vif, u8 *addr, struct ieee80211_key_conf *key)
{
  int __retres;
  struct mwl8k_cmd_set_key *cmd;
  int rc;
  int keymlen;
  u32 action;
  u8 idx;
  
#line 4320 
  struct mwl8k_vif *mwl8k_vif = (struct mwl8k_vif *)(& vif->drv_priv);
  
#line 4322 
  cmd = (struct mwl8k_cmd_set_key *)kzalloc(80UL,208U);
  
#line 4323 
  if (cmd == (struct mwl8k_cmd_set_key *)0) {
    
#line 4324 
    __retres = -12;
    
#line 4324 
    goto return_label;
  }
  else ;
  
#line 4326 
  rc = mwl8k_encryption_set_cmd_info(cmd,addr,key);
  
#line 4327 
  if (rc < 0) 
#line 4328 
              goto done; else ;
  
#line 4330 
  idx = (unsigned char)key->keyidx;
  
#line 4332 
  if (((int)key->flags & 8) != 0) 
#line 4333 
                                  action = 1U; else 
#line 4335 
                                                    action = 3U;
  
#line 4337 
  switch (key->cipher) {
    case (u32)1027073: 
#line 4338 
    ;
    case (u32)1027077: 
#line 4339 
    ;
    
#line 4340 
    if ((unsigned int)mwl8k_vif->wep_key_conf[(int)idx].enabled == 0U) {
      
#line 4341 
      memcpy((void *)(& mwl8k_vif->wep_key_conf[(int)idx].key),(void const *)key,(unsigned long)key->keylen + 24UL);
      
#line 4343 
      mwl8k_vif->wep_key_conf[(int)idx].enabled = (unsigned char)1U;
    }
    else ;
    
#line 4346 
    keymlen = (int)key->keylen;
    
#line 4347 
    action = 1U;
    
#line 4348 
    goto ldv_53448;
    case (u32)1027074: 
#line 4349 
    ;
    
#line 4350 
    keymlen = 32;
    
#line 4351 
    goto ldv_53448;
    case (u32)1027076: 
#line 4352 
    ;
    
#line 4353 
    keymlen = (int)key->keylen;
    
#line 4354 
    goto ldv_53448;
    default: 
#line 4355 
    ;
    
#line 4356 
    rc = -524;
    
#line 4357 
    goto done;
  }
  ldv_53448: 
#line 4360 
  ;
  
#line 4360 
  memcpy((void *)(& cmd->key_material),(void const *)(& key->key),(unsigned long)keymlen);
  
#line 4361 
  cmd->action = action;
  
#line 4363 
  rc = mwl8k_post_pervif_cmd(hw,vif,& cmd->header);
  done: 
#line 4364 
  ;
  
#line 4365 
  kfree((void const *)cmd);
  
#line 4367 
  __retres = rc;
  return_label: 
#line 4367 
                return __retres;
}


#line 4370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_encryption_remove_key(struct ieee80211_hw *hw, struct ieee80211_vif *vif, u8 *addr, struct ieee80211_key_conf *key)
{
  int __retres;
  struct mwl8k_cmd_set_key *cmd;
  int rc;
  
#line 4377 
  struct mwl8k_vif *mwl8k_vif = (struct mwl8k_vif *)(& vif->drv_priv);
  
#line 4379 
  cmd = (struct mwl8k_cmd_set_key *)kzalloc(80UL,208U);
  
#line 4380 
  if (cmd == (struct mwl8k_cmd_set_key *)0) {
    
#line 4381 
    __retres = -12;
    
#line 4381 
    goto return_label;
  }
  else ;
  
#line 4383 
  rc = mwl8k_encryption_set_cmd_info(cmd,addr,key);
  
#line 4384 
  if (rc < 0) 
#line 4385 
              goto done; else ;
  
#line 4387 
  if (key->cipher == 1027073U || key->cipher == 1027077U) 
#line 4389 
                                                          mwl8k_vif->wep_key_conf[(int)key->keyidx].enabled = (unsigned char)0U; else ;
  
#line 4391 
  cmd->action = 2U;
  
#line 4393 
  rc = mwl8k_post_pervif_cmd(hw,vif,& cmd->header);
  done: 
#line 4394 
  ;
  
#line 4395 
  kfree((void const *)cmd);
  
#line 4397 
  __retres = rc;
  return_label: 
#line 4397 
                return __retres;
}


#line 4400  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_set_key(struct ieee80211_hw *hw, enum set_key_cmd cmd_param, struct ieee80211_vif *vif, struct ieee80211_sta *sta, struct ieee80211_key_conf *key)
{
  int __retres;
  u8 encr_type;
  u8 *addr;
  
#line 4406 
  int rc = 0;
  
#line 4409 
  struct mwl8k_vif *mwl8k_vif = (struct mwl8k_vif *)(& vif->drv_priv);
  
#line 4410 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 4412 
  if (vif->type == (unsigned int)NL80211_IFTYPE_STATION && ! priv->ap_fw) {
    
#line 4413 
    __retres = -95;
    
#line 4413 
    goto return_label;
  }
  else ;
  
#line 4415 
  if (sta == (struct ieee80211_sta *)0) 
#line 4416 
                                        addr = (u8 *)(& vif->addr); else 
                                                                    
#line 4418 
                                                                    addr = (u8 *)(& sta->addr);
  
#line 4420 
  if (cmd_param == (unsigned int)SET_KEY) {
    
#line 4421 
    rc = mwl8k_cmd_encryption_set_key(hw,vif,addr,key);
    
#line 4422 
    if (rc != 0) 
#line 4423 
                 goto out; else ;
    
#line 4425 
    if (key->cipher == 1027073U || key->cipher == 1027077U) 
#line 4427 
                                                            encr_type = (unsigned char)0U; else 
                                                                    
#line 4429 
                                                                    encr_type = (unsigned char)7U;
    
#line 4431 
    rc = mwl8k_cmd_update_encryption_enable(hw,vif,addr,(unsigned char)((int)encr_type));
    
#line 4433 
    if (rc != 0) 
#line 4434 
                 goto out; else ;
    
#line 4436 
    mwl8k_vif->is_hw_crypto_enabled = (_Bool)1;
  }
  else {
    
#line 4439 
    rc = mwl8k_cmd_encryption_remove_key(hw,vif,addr,key);
    
#line 4441 
    if (rc != 0) 
#line 4442 
                 goto out; else ;
  }
  out: 
#line 4444 
  ;
  
#line 4445 
  __retres = rc;
  return_label: 
#line 4445 
                return __retres;
}


#line 4507  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_update_stadb_add(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_sta *sta)
{
  int __retres;
  struct mwl8k_cmd_update_stadb *cmd;
  struct peer_capability_info *p;
  u32 rates;
  int rc;
  
#line 4516 
  cmd = (struct mwl8k_cmd_update_stadb *)kzalloc(84UL,208U);
  
#line 4517 
  if (cmd == (struct mwl8k_cmd_update_stadb *)0) {
    
#line 4518 
    __retres = -12;
    
#line 4518 
    goto return_label;
  }
  else ;
  
#line 4520 
  cmd->header.code = (unsigned short)4387U;
  
#line 4521 
  cmd->header.length = (unsigned short)84U;
  
#line 4522 
  cmd->action = 1U;
  
#line 4523 
  memcpy((void *)(& cmd->peer_addr),(void const *)(& sta->addr),6UL);
  
#line 4525 
  p = & cmd->peer_info;
  
#line 4526 
  p->peer_type = (unsigned char)2U;
  
#line 4527 
  p->basic_caps = vif->bss_conf.assoc_capability;
  
#line 4528 
  p->ht_support = (unsigned char)sta->ht_cap.ht_supported;
  
#line 4529 
  p->ht_caps = sta->ht_cap.cap;
  
#line 4530 
  p->extended_ht_caps = (unsigned char)(((int)sta->ht_cap.ampdu_factor & 3) | (((int)sta->ht_cap.ampdu_density << 2) & 28));
  
#line 4532 
  if ((hw->conf.chandef.chan)->band == (unsigned int)IEEE80211_BAND_2GHZ) 
    
#line 4533 
    rates = sta->supp_rates[0]; else 
#line 4535 
                                     rates = sta->supp_rates[1] << 5;
  
#line 4536 
  legacy_rate_mask_to_array((u8 *)(& p->legacy_rates),rates);
  
#line 4537 
  memcpy((void *)(& p->ht_rates),(void const *)(& sta->ht_cap.mcs.rx_mask),16UL);
  
#line 4538 
  p->interop = (unsigned char)1U;
  
#line 4539 
  p->amsdu_enabled = (unsigned short)0U;
  
#line 4541 
  rc = mwl8k_post_cmd(hw,& cmd->header);
  
#line 4542 
  if (rc == 0) 
#line 4543 
               rc = (int)p->station_id; else ;
  
#line 4544 
  kfree((void const *)cmd);
  
#line 4546 
  __retres = rc;
  return_label: 
#line 4546 
                return __retres;
}


#line 4549  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_cmd_update_stadb_del(struct ieee80211_hw *hw, struct ieee80211_vif *vif, u8 *addr)
{
  int __retres;
  struct mwl8k_cmd_update_stadb *cmd;
  int rc;
  
#line 4555 
  cmd = (struct mwl8k_cmd_update_stadb *)kzalloc(84UL,208U);
  
#line 4556 
  if (cmd == (struct mwl8k_cmd_update_stadb *)0) {
    
#line 4557 
    __retres = -12;
    
#line 4557 
    goto return_label;
  }
  else ;
  
#line 4559 
  cmd->header.code = (unsigned short)4387U;
  
#line 4560 
  cmd->header.length = (unsigned short)84U;
  
#line 4561 
  cmd->action = 2U;
  
#line 4562 
  memcpy((void *)(& cmd->peer_addr),(void const *)addr,6UL);
  
#line 4564 
  rc = mwl8k_post_cmd(hw,& cmd->header);
  
#line 4565 
  kfree((void const *)cmd);
  
#line 4567 
  __retres = rc;
  return_label: 
#line 4567 
                return __retres;
}


#line 4574  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static irqreturn_t mwl8k_interrupt(int irq, void *dev_id)
{
  irqreturn_t __retres;
  u32 status;
  
#line 4576 
  struct ieee80211_hw *hw = (struct ieee80211_hw *)dev_id;
  
#line 4577 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 4580 
  status = ioread32(priv->regs + 3120U);
  
#line 4581 
  if (status == 0U) {
    
#line 4582 
    __retres = IRQ_NONE;
    
#line 4582 
    goto return_label;
  }
  else ;
  
#line 4584 
  if ((status & 1U) != 0U) {
    
#line 4585 
    status &= 4294967294U;
    
#line 4586 
    ldv_tasklet_schedule_101(& priv->poll_tx_task);
  }
  else ;
  
#line 4589 
  if ((status & 2U) != 0U) {
    
#line 4590 
    status &= 4294967293U;
    
#line 4591 
    ldv_tasklet_schedule_102(& priv->poll_rx_task);
  }
  else ;
  
#line 4594 
  if ((status & 16384U) != 0U) {
    
#line 4595 
    iowrite32(4294950911U,priv->regs + 3132U);
    
#line 4598 
    atomic_inc(& priv->watchdog_event_pending);
    
#line 4599 
    status &= 4294950911U;
    
#line 4600 
    ieee80211_queue_work(hw,& priv->watchdog_ba_handle);
  }
  else ;
  
#line 4603 
  if (status != 0U) 
#line 4604 
                    iowrite32(~ status,priv->regs + 3120U); else ;
  
#line 4606 
  if ((status & 4U) != 0U) {
    
#line 4607 
    if (priv->hostcmd_wait != (struct completion *)0) 
#line 4608 
                                                      complete(priv->hostcmd_wait); else ;
  }
  else ;
  
#line 4611 
  if ((status & 1024U) != 0U) {
    int tmp;
    
#line 4612 
    tmp = ldv_mutex_is_locked_103(& priv->fw_mutex);
    
#line 4612 
    if (tmp == 0) {
      
#line 4612 
      if ((int)priv->radio_on != 0) {
        
#line 4613 
        if (priv->pending_tx_pkts != 0) 
#line 4614 
                                        mwl8k_tx_start(priv); else ;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 4617 
  __retres = IRQ_HANDLED;
  return_label: 
#line 4617 
                return __retres;
}


#line 4620  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_tx_poll(unsigned long data)
{
  int limit;
  int i;
  int tmp;
  
#line 4622 
  struct ieee80211_hw *hw = (struct ieee80211_hw *)data;
  
#line 4623 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 4627 
  limit = 32;
  
#line 4629 
  ldv_spin_lock_bh_104(& priv->tx_lock);
  
#line 4631 
  i = 0;
  
#line 4631 
  goto ldv_53530;
  ldv_53529: 
#line 4632 
  ;
  
#line 4632 
  tmp = mwl8k_txq_reclaim(hw,i,limit,0);
  
#line 4632 
  limit -= tmp;
  
#line 4631 
  i += 1;
  ldv_53530: 
#line 4632 
  ;
  
#line 4631 
  if ((int)priv->num_ampdu_queues + 4 > i) 
#line 4633 
                                           goto ldv_53529; else 
#line 4636 
                                                                goto ldv_53531;
  ldv_53531: 
#line 4637 
  ;
  
#line 4634 
  if (priv->pending_tx_pkts == 0 && priv->tx_wait != (struct completion *)0) {
    
#line 4635 
    complete(priv->tx_wait);
    
#line 4636 
    priv->tx_wait = (struct completion *)0;
  }
  else ;
  
#line 4639 
  ldv_spin_unlock_bh_105(& priv->tx_lock);
  
#line 4641 
  if (limit != 0) 
#line 4642 
                  writel(4294967294U,(void volatile *)(priv->regs + 3120U)); else 
                                                                    
#line 4645 
                                                                    ldv_tasklet_schedule_106(& priv->poll_tx_task);
  
#line 4646 
  return;
}


#line 4649  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_rx_poll(unsigned long data)
{
  int limit;
  int tmp;
  int tmp_0;
  
#line 4651 
  struct ieee80211_hw *hw = (struct ieee80211_hw *)data;
  
#line 4652 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 4655 
  limit = 32;
  
#line 4656 
  tmp = rxq_process(hw,0,limit);
  
#line 4656 
  limit -= tmp;
  
#line 4657 
  tmp_0 = rxq_refill(hw,0,limit);
  
#line 4657 
  limit -= tmp_0;
  
#line 4659 
  if (limit != 0) 
#line 4660 
                  writel(4294967293U,(void volatile *)(priv->regs + 3120U)); else 
                                                                    
#line 4663 
                                                                    ldv_tasklet_schedule_107(& priv->poll_rx_task);
  
#line 4664 
  return;
}


#line 4671  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_tx(struct ieee80211_hw *hw, struct ieee80211_tx_control *control, struct sk_buff *skb)
{
  u16 tmp;
  
#line 4675 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 4676 
  tmp = skb_get_queue_mapping((struct sk_buff const *)skb);
  
#line 4676 
  int index = (int)tmp;
  
#line 4678 
  if (! priv->radio_on) {
    
#line 4679 
    dev_printk("\001",(struct device const *)(& (hw->wiphy)->dev),"dropped TX frame since radio disabled\n");
    
#line 4681 
    consume_skb(skb);
    
#line 4682 
    goto return_label;
  }
  else ;
  
#line 4685 
  mwl8k_txq_xmit(hw,index,control->sta,skb);
  return_label: 
#line 4686 
                return;
}


#line 4688  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_start(struct ieee80211_hw *hw)
{
  int __retres;
  int rc;
  
#line 4690 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 4693 
  rc = ldv_request_irq_108((priv->pdev)->irq,& mwl8k_interrupt,128UL,"mwl8k",(void *)hw);
  
#line 4695 
  if (rc != 0) {
    
#line 4696 
    priv->irq = -1;
    
#line 4697 
    dev_err((struct device const *)(& (hw->wiphy)->dev),"failed to register IRQ handler\n");
    
#line 4698 
    __retres = -5;
    
#line 4698 
    goto return_label;
  }
  else ;
  
#line 4700 
  priv->irq = (int)(priv->pdev)->irq;
  
#line 4703 
  tasklet_enable(& priv->poll_tx_task);
  
#line 4704 
  tasklet_enable(& priv->poll_rx_task);
  
#line 4707 
  iowrite32(1068271U,priv->regs + 3124U);
  
#line 4708 
  iowrite32(1068271U,priv->regs + 3132U);
  
#line 4711 
  rc = mwl8k_fw_lock(hw);
  
#line 4712 
  if (rc == 0) {
    
#line 4713 
    rc = mwl8k_cmd_radio_enable(hw);
    
#line 4715 
    if (! priv->ap_fw) {
      
#line 4716 
      if (rc == 0) 
#line 4717 
                   rc = mwl8k_cmd_enable_sniffer(hw,(_Bool)0); else ;
      
#line 4719 
      if (rc == 0) 
#line 4720 
                   rc = mwl8k_cmd_set_pre_scan(hw); else ;
      
#line 4722 
      if (rc == 0) 
#line 4723 
                   rc = mwl8k_cmd_set_post_scan(hw,(__u8 const *)"\000\000\000\000\000\000"); else ;
    }
    else ;
    
#line 4727 
    if (rc == 0) 
#line 4728 
                 rc = mwl8k_cmd_set_rateadapt_mode(hw,(unsigned short)0); else ;
    
#line 4730 
    if (rc == 0) 
#line 4731 
                 rc = mwl8k_cmd_set_wmm_mode(hw,(_Bool)0); else ;
    
#line 4733 
    mwl8k_fw_unlock(hw);
  }
  else ;
  
#line 4736 
  if (rc != 0) {
    
#line 4737 
    iowrite32(0U,priv->regs + 3124U);
    
#line 4738 
    ldv_free_irq_109((priv->pdev)->irq,(void *)hw);
    
#line 4739 
    priv->irq = -1;
    
#line 4740 
    tasklet_disable(& priv->poll_tx_task);
    
#line 4741 
    tasklet_disable(& priv->poll_rx_task);
  }
  else 
#line 4743 
       ieee80211_wake_queues(hw);
  
#line 4746 
  __retres = rc;
  return_label: 
#line 4746 
                return __retres;
}


#line 4749  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_stop(struct ieee80211_hw *hw)
{
  int i;
  
#line 4751 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 4754 
  if (! priv->hw_restart_in_progress) 
#line 4755 
                                      mwl8k_cmd_radio_disable(hw); else ;
  
#line 4757 
  ieee80211_stop_queues(hw);
  
#line 4760 
  iowrite32(0U,priv->regs + 3124U);
  
#line 4761 
  if (priv->irq != -1) {
    
#line 4762 
    ldv_free_irq_110((priv->pdev)->irq,(void *)hw);
    
#line 4763 
    priv->irq = -1;
  }
  else ;
  
#line 4767 
  cancel_work_sync(& priv->finalize_join_worker);
  
#line 4768 
  cancel_work_sync(& priv->watchdog_ba_handle);
  
#line 4769 
  if (priv->beacon_skb != (struct sk_buff *)0) 
#line 4770 
                                               consume_skb(priv->beacon_skb); else ;
  
#line 4773 
  tasklet_disable(& priv->poll_tx_task);
  
#line 4774 
  tasklet_disable(& priv->poll_rx_task);
  
#line 4777 
  i = 0;
  
#line 4777 
  goto ldv_53556;
  ldv_53555: 
#line 4778 
  ;
  
#line 4778 
  mwl8k_txq_reclaim(hw,i,2147483647,1);
  
#line 4777 
  i += 1;
  ldv_53556: 
#line 4778 
  ;
  
#line 4777 
  if ((int)priv->num_ampdu_queues + 4 > i) 
#line 4779 
                                           goto ldv_53555; else 
#line 4782 
                                                                goto ldv_53557;
  ldv_53557: 
#line 4783 
  ;
  
#line 4784 
  return;
}


#line 4781 
static int mwl8k_reload_firmware(struct ieee80211_hw *hw, char *fw_image);


#line 4783  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_add_interface(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  int __retres;
  struct mwl8k_vif *mwl8k_vif;
  u32 macids_supported;
  int macid;
  int rc;
  struct mwl8k_device_info *di;
  int tmp_1;
  
#line 4786 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 4797 
  if ((int)priv->sniffer_enabled != 0) {
    
#line 4798 
    _dev_info((struct device const *)(& (hw->wiphy)->dev),"unable to create STA interface because sniffer mode is enabled\n");
    
#line 4800 
    __retres = -22;
    
#line 4800 
    goto return_label;
  }
  else ;
  
#line 4803 
  di = priv->device_info;
  
#line 4804 
  switch ((unsigned int)vif->type) {
    case (unsigned int)3: 
#line 4805 
    ;
    
#line 4806 
    if (! priv->ap_fw && di->fw_image_ap != (char *)0) {
      int tmp;
      
#line 4808 
      tmp = list_empty((struct list_head const *)(& priv->vif_list));
      
#line 4808 
      if (tmp == 0) {
        
#line 4809 
        __retres = -16;
        
#line 4809 
        goto return_label;
      }
      else ;
      
#line 4810 
      rc = mwl8k_reload_firmware(hw,di->fw_image_ap);
      
#line 4811 
      if (rc != 0) {
        
#line 4812 
        __retres = rc;
        
#line 4812 
        goto return_label;
      }
      else ;
    }
    else ;
    
#line 4814 
    macids_supported = priv->ap_macids_supported;
    
#line 4815 
    goto ldv_53572;
    case (unsigned int)2: 
#line 4816 
    ;
    
#line 4817 
    if ((int)priv->ap_fw != 0 && di->fw_image_sta != (char *)0) {
      int tmp_0;
      
#line 4818 
      tmp_0 = list_empty((struct list_head const *)(& priv->vif_list));
      
#line 4818 
      if (tmp_0 == 0) 
#line 4819 
                      dev_warn((struct device const *)(& (hw->wiphy)->dev),"AP interface is running.\n");
      else {
        
#line 4825 
        rc = mwl8k_reload_firmware(hw,di->fw_image_sta);
        
#line 4827 
        if (rc != 0) {
          
#line 4828 
          __retres = rc;
          
#line 4828 
          goto return_label;
        }
        else ;
      }
    }
    else ;
    
#line 4831 
    macids_supported = priv->sta_macids_supported;
    
#line 4832 
    goto ldv_53572;
    default: 
#line 4833 
    ;
    
#line 4834 
    __retres = -22;
    
#line 4834 
    goto return_label;
  }
  ldv_53572: 
#line 4837 
  ;
  
#line 4837 
  macid = ffs((int)(~ priv->macids_used & macids_supported));
  
#line 4838 
  tmp_1 = macid;
  
#line 4838 
  macid -= 1;
  
#line 4838 
  ;
  
#line 4838 
  if (tmp_1 == 0) {
    
#line 4839 
    __retres = -16;
    
#line 4839 
    goto return_label;
  }
  else ;
  
#line 4842 
  mwl8k_vif = (struct mwl8k_vif *)(& vif->drv_priv);
  
#line 4843 
  memset((void *)mwl8k_vif,0,192UL);
  
#line 4844 
  mwl8k_vif->vif = vif;
  
#line 4845 
  mwl8k_vif->macid = macid;
  
#line 4846 
  mwl8k_vif->seqno = (unsigned short)0U;
  
#line 4847 
  memcpy((void *)(& mwl8k_vif->bssid),(void const *)(& vif->addr),6UL);
  
#line 4848 
  mwl8k_vif->is_hw_crypto_enabled = (_Bool)0;
  
#line 4851 
  mwl8k_cmd_set_mac_addr(hw,vif,(u8 *)(& vif->addr));
  
#line 4853 
  if (vif->type == (unsigned int)NL80211_IFTYPE_AP) 
#line 4854 
                                                    mwl8k_cmd_set_new_stn_add_self(hw,vif); else ;
  
#line 4856 
  priv->macids_used |= (unsigned int)(1 << mwl8k_vif->macid);
  
#line 4857 
  list_add_tail(& mwl8k_vif->list,& priv->vif_list);
  
#line 4859 
  __retres = 0;
  return_label: 
#line 4859 
                return __retres;
}


#line 4862  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_remove_vif(struct mwl8k_priv *priv, struct mwl8k_vif *vif)
{
  
#line 4865 
  if (priv->macids_used == 0U) 
#line 4866 
                               goto return_label; else ;
  
#line 4868 
  priv->macids_used &= (unsigned int)(~ (1 << vif->macid));
  
#line 4869 
  list_del(& vif->list);
  return_label: 
#line 4870 
                return;
}


#line 4872  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_remove_interface(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  
#line 4875 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 4876 
  struct mwl8k_vif *mwl8k_vif = (struct mwl8k_vif *)(& vif->drv_priv);
  
#line 4878 
  if (vif->type == (unsigned int)NL80211_IFTYPE_AP) 
#line 4879 
                                                    mwl8k_cmd_set_new_stn_del(hw,vif,(u8 *)(& vif->addr)); else ;
  
#line 4881 
  mwl8k_cmd_del_mac_addr(hw,vif,(u8 *)(& vif->addr));
  
#line 4883 
  mwl8k_remove_vif(priv,mwl8k_vif);
  
#line 4884 
  return;
}


#line 4886  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_hw_restart_work(struct work_struct *work)
{
  struct mwl8k_priv *tmp;
  struct mwl8k_device_info *di;
  int rc;
  {
    
#line 4889 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 4889 
    tmp = (struct mwl8k_priv *)__mptr + 18446744073709548552U;
  }
  
#line 4888 
  struct mwl8k_priv *priv = tmp;
  
#line 4890 
  struct ieee80211_hw *hw = priv->hw;
  
#line 4895 
  if (priv->hostcmd_wait != (struct completion *)0) {
    
#line 4896 
    complete(priv->hostcmd_wait);
    
#line 4897 
    priv->hostcmd_wait = (struct completion *)0;
  }
  else ;
  
#line 4900 
  priv->hw_restart_owner = get_current();
  
#line 4901 
  di = priv->device_info;
  
#line 4902 
  mwl8k_fw_lock(hw);
  
#line 4904 
  if ((int)priv->ap_fw != 0) 
#line 4905 
                             rc = mwl8k_reload_firmware(hw,di->fw_image_ap); else 
                                                                    
#line 4907 
                                                                    rc = mwl8k_reload_firmware(hw,di->fw_image_sta);
  
#line 4909 
  if (rc != 0) 
#line 4910 
               goto fail; else ;
  
#line 4912 
  priv->hw_restart_owner = (struct task_struct *)0;
  
#line 4913 
  priv->hw_restart_in_progress = (_Bool)0;
  
#line 4920 
  mwl8k_fw_unlock(hw);
  
#line 4922 
  ieee80211_restart_hw(hw);
  
#line 4924 
  dev_err((struct device const *)(& (hw->wiphy)->dev),"Firmware restarted successfully\n");
  
#line 4926 
  goto return_label;
  fail: 
#line 4927 
  ;
  
#line 4928 
  mwl8k_fw_unlock(hw);
  
#line 4930 
  dev_err((struct device const *)(& (hw->wiphy)->dev),"Firmware restart failed\n");
  return_label: 
#line 4931 
                return;
}


#line 4933  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_config(struct ieee80211_hw *hw, u32 changed)
{
  int __retres;
  int rc;
  
#line 4935 
  struct ieee80211_conf *conf = & hw->conf;
  
#line 4936 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 4939 
  rc = mwl8k_fw_lock(hw);
  
#line 4940 
  if (rc != 0) {
    
#line 4941 
    __retres = rc;
    
#line 4941 
    goto return_label;
  }
  else ;
  
#line 4943 
  if ((conf->flags & 4U) != 0U) 
#line 4944 
                                rc = mwl8k_cmd_radio_disable(hw); else 
                                                                    
#line 4946 
                                                                    rc = mwl8k_cmd_radio_enable(hw);
  
#line 4947 
  if (rc != 0) 
#line 4948 
               goto out; else ;
  
#line 4950 
  if ((changed & 64U) != 0U) {
    
#line 4951 
    rc = mwl8k_cmd_set_rf_channel(hw,conf);
    
#line 4952 
    if (rc != 0) 
#line 4953 
                 goto out; else ;
  }
  else ;
  
#line 4956 
  if (conf->power_level > 18) 
#line 4957 
                              conf->power_level = 18; else ;
  
#line 4959 
  if ((int)priv->ap_fw != 0) {
    
#line 4961 
    if ((conf->flags & 32U) != 0U) {
      
#line 4962 
      rc = mwl8k_cmd_tx_power(hw,conf,(unsigned short)((int)((unsigned short)conf->power_level)));
      
#line 4963 
      if (rc != 0) 
#line 4964 
                   goto out; else ;
    }
    else ;
  }
  else {
    
#line 4969 
    rc = mwl8k_cmd_rf_tx_power(hw,conf->power_level);
    
#line 4970 
    if (rc != 0) 
#line 4971 
                 goto out; else ;
    
#line 4972 
    rc = mwl8k_cmd_mimo_config(hw,(unsigned char)7,(unsigned char)7);
  }
  out: 
#line 4975 
  ;
  
#line 4976 
  mwl8k_fw_unlock(hw);
  
#line 4978 
  __retres = rc;
  return_label: 
#line 4978 
                return __retres;
}


#line 4982  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_bss_info_changed_sta(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_bss_conf *info, u32 changed)
{
  u8 ap_mcs_rates[16U];
  int rc;
  int tmp;
  
#line 4985 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 4986 
  u32 ap_legacy_rates = 0U;
  
#line 4990 
  tmp = mwl8k_fw_lock(hw);
  
#line 4990 
  if (tmp != 0) 
#line 4991 
                goto return_label; else ;
  
#line 4996 
  if ((changed & 1U) != 0U && ! vif->bss_conf.assoc) 
#line 4997 
                                                     priv->capture_beacon = (_Bool)0; else ;
  
#line 5002 
  if ((int)vif->bss_conf.assoc != 0) {
    struct ieee80211_sta *ap;
    
#line 5005 
    rcu_read_lock();
    
#line 5007 
    ap = ieee80211_find_sta(vif,vif->bss_conf.bssid);
    
#line 5008 
    if (ap == (struct ieee80211_sta *)0) {
      
#line 5009 
      rcu_read_unlock();
      
#line 5010 
      goto out;
    }
    else ;
    
#line 5013 
    if ((hw->conf.chandef.chan)->band == (unsigned int)IEEE80211_BAND_2GHZ) 
      
#line 5014 
      ap_legacy_rates = ap->supp_rates[0]; else 
#line 5016 
                                                ap_legacy_rates = ap->supp_rates[1] << 5;
    
#line 5019 
    memcpy((void *)(& ap_mcs_rates),(void const *)(& ap->ht_cap.mcs.rx_mask),16UL);
    
#line 5021 
    rcu_read_unlock();
  }
  else ;
  
#line 5024 
  if (((changed & 1U) != 0U && (int)vif->bss_conf.assoc != 0) && ! priv->ap_fw) {
    
#line 5026 
    rc = mwl8k_cmd_set_rate(hw,vif,ap_legacy_rates,(u8 *)(& ap_mcs_rates));
    
#line 5027 
    if (rc != 0) 
#line 5028 
                 goto out; else ;
    
#line 5030 
    rc = mwl8k_cmd_use_fixed_rate_sta(hw);
    
#line 5031 
    if (rc != 0) 
#line 5032 
                 goto out; else ;
  }
  else 
    
#line 5034 
    if (((changed & 1U) != 0U && (int)vif->bss_conf.assoc != 0) && (int)priv->ap_fw != 0) {
      int idx;
      int rate;
      
#line 5041 
      idx = ffs((int)vif->bss_conf.basic_rates);
      
#line 5042 
      if (idx != 0) 
#line 5043 
                    idx -= 1; else ;
      
#line 5045 
      if ((hw->conf.chandef.chan)->band == (unsigned int)IEEE80211_BAND_2GHZ) 
        
#line 5046 
        rate = (int)mwl8k_rates_24[idx].hw_value; else 
#line 5048 
                                                       rate = (int)mwl8k_rates_50[idx].hw_value;
      
#line 5050 
      mwl8k_cmd_use_fixed_rate_ap(hw,rate,rate);
    }
    else ;
  
#line 5054 
  if ((changed & 4U) != 0U) {
    
#line 5055 
    rc = mwl8k_set_radio_preamble(hw,(_Bool)((bool)((int)vif->bss_conf.use_short_preamble) != 0));
    
#line 5057 
    if (rc != 0) 
#line 5058 
                 goto out; else ;
  }
  else ;
  
#line 5061 
  if ((changed & 8U) != 0U && ! priv->ap_fw) {
    
#line 5062 
    rc = mwl8k_cmd_set_slot(hw,(_Bool)((bool)((int)vif->bss_conf.use_short_slot) != 0));
    
#line 5063 
    if (rc != 0) 
#line 5064 
                 goto out; else ;
  }
  else ;
  
#line 5067 
  if (((int)vif->bss_conf.assoc != 0 && ! priv->ap_fw) && (changed & 19U) != 0U) {
    
#line 5070 
    rc = mwl8k_cmd_set_aid(hw,vif,ap_legacy_rates);
    
#line 5071 
    if (rc != 0) 
#line 5072 
                 goto out; else ;
  }
  else ;
  
#line 5075 
  if ((int)vif->bss_conf.assoc != 0 && (changed & 65U) != 0U) {
    
#line 5081 
    memcpy((void *)(& priv->capture_bssid),(void const *)vif->bss_conf.bssid,6UL);
    
#line 5082 
    priv->capture_beacon = (_Bool)1;
  }
  else ;
  out: 
#line 5085 
  ;
  
#line 5086 
  mwl8k_fw_unlock(hw);
  return_label: 
#line 5087 
                return;
}


#line 5090  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_bss_info_changed_ap(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_bss_conf *info, u32 changed)
{
  int rc;
  int tmp;
  
#line 5095 
  tmp = mwl8k_fw_lock(hw);
  
#line 5095 
  if (tmp != 0) 
#line 5096 
                goto return_label; else ;
  
#line 5098 
  if ((changed & 4U) != 0U) {
    
#line 5099 
    rc = mwl8k_set_radio_preamble(hw,(_Bool)((bool)((int)vif->bss_conf.use_short_preamble) != 0));
    
#line 5101 
    if (rc != 0) 
#line 5102 
                 goto out; else ;
  }
  else ;
  
#line 5105 
  if ((changed & 32U) != 0U) {
    int idx;
    int rate;
    
#line 5114 
    idx = ffs((int)vif->bss_conf.basic_rates);
    
#line 5115 
    if (idx != 0) 
#line 5116 
                  idx -= 1; else ;
    
#line 5118 
    if ((hw->conf.chandef.chan)->band == (unsigned int)IEEE80211_BAND_2GHZ) 
      
#line 5119 
      rate = (int)mwl8k_rates_24[idx].hw_value; else 
#line 5121 
                                                     rate = (int)mwl8k_rates_50[idx].hw_value;
    
#line 5123 
    mwl8k_cmd_use_fixed_rate_ap(hw,rate,rate);
  }
  else ;
  
#line 5126 
  if ((changed & 320U) != 0U) {
    struct sk_buff *skb;
    
#line 5129 
    skb = ieee80211_beacon_get(hw,vif);
    
#line 5130 
    if (skb != (struct sk_buff *)0) {
      
#line 5131 
      mwl8k_cmd_set_beacon(hw,vif,skb->data,(int)skb->len);
      
#line 5132 
      kfree_skb(skb);
    }
    else ;
  }
  else ;
  
#line 5136 
  if ((changed & 512U) != 0U) 
#line 5137 
                              mwl8k_cmd_bss_start(hw,vif,(int)info->enable_beacon); else ;
  out: 
#line 5139 
  ;
  
#line 5140 
  mwl8k_fw_unlock(hw);
  return_label: 
#line 5141 
                return;
}


#line 5144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_bss_info_changed(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_bss_conf *info, u32 changed)
{
  
#line 5147 
  if (vif->type == (unsigned int)NL80211_IFTYPE_STATION) 
#line 5148 
                                                         mwl8k_bss_info_changed_sta(hw,vif,info,changed); else ;
  
#line 5149 
  if (vif->type == (unsigned int)NL80211_IFTYPE_AP) 
#line 5150 
                                                    mwl8k_bss_info_changed_ap(hw,vif,info,changed); else ;
  
#line 5151 
  return;
}


#line 5153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static u64 mwl8k_prepare_multicast(struct ieee80211_hw *hw, struct netdev_hw_addr_list *mc_list)
{
  u64 __retres;
  struct mwl8k_cmd_pkt *cmd;
  
#line 5165 
  cmd = __mwl8k_cmd_mac_multicast_adr(hw,0,mc_list);
  
#line 5167 
  __retres = (unsigned long long)cmd;
  
#line 5167 
  return __retres;
}


#line 5171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_configure_filter_sniffer(struct ieee80211_hw *hw, unsigned int changed_flags, unsigned int *total_flags)
{
  int __retres;
  int tmp_0;
  
#line 5175 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 5182 
  tmp_0 = list_empty((struct list_head const *)(& priv->vif_list));
  
#line 5182 
  if (tmp_0 == 0) {
    int tmp;
    
#line 5183 
    tmp = net_ratelimit();
    
#line 5183 
    if (tmp != 0) 
#line 5184 
                  _dev_info((struct device const *)(& (hw->wiphy)->dev),"not enabling sniffer mode because STA interface is active\n"); else ;
    
#line 5186 
    __retres = 0;
    
#line 5186 
    goto return_label;
  }
  else ;
  
#line 5189 
  if (! priv->sniffer_enabled) {
    int tmp_1;
    
#line 5190 
    tmp_1 = mwl8k_cmd_enable_sniffer(hw,(_Bool)1);
    
#line 5190 
    if (tmp_1 != 0) {
      
#line 5191 
      __retres = 0;
      
#line 5191 
      goto return_label;
    }
    else ;
    
#line 5192 
    priv->sniffer_enabled = (_Bool)1;
  }
  else ;
  
#line 5195 
  *total_flags &= 114U;
  
#line 5199 
  __retres = 1;
  return_label: 
#line 5199 
                return __retres;
}


#line 5202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static struct mwl8k_vif *mwl8k_first_vif(struct mwl8k_priv *priv)
{
  struct mwl8k_vif *__retres;
  int tmp_0;
  
#line 5204 
  tmp_0 = list_empty((struct list_head const *)(& priv->vif_list));
  
#line 5204 
  if (tmp_0 == 0) {
    struct mwl8k_vif *tmp;
    {
      
#line 5205 
      struct list_head const *__mptr = (struct list_head const *)priv->vif_list.next;
      
#line 5205 
      tmp = (struct mwl8k_vif *)__mptr;
    }
    
#line 5205 
    __retres = tmp;
    
#line 5205 
    goto return_label;
  }
  else ;
  
#line 5207 
  __retres = (struct mwl8k_vif *)0;
  return_label: 
#line 5207 
                return __retres;
}


#line 5210  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_configure_filter(struct ieee80211_hw *hw, unsigned int changed_flags, unsigned int *total_flags, u64 multicast)
{
  int tmp_0;
  
#line 5215 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 5216 
  struct mwl8k_cmd_pkt *cmd = (struct mwl8k_cmd_pkt *)multicast;
  
#line 5222 
  if ((int)priv->ap_fw != 0) {
    
#line 5223 
    *total_flags &= 18U;
    
#line 5224 
    kfree((void const *)cmd);
    
#line 5225 
    goto return_label;
  }
  else ;
  
#line 5232 
  if ((*total_flags & 96U) != 0U) {
    int tmp;
    
#line 5232 
    tmp = mwl8k_configure_filter_sniffer(hw,changed_flags,total_flags);
    
#line 5232 
    if (tmp != 0) {
      
#line 5234 
      kfree((void const *)cmd);
      
#line 5235 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 5239 
  *total_flags &= 18U;
  
#line 5241 
  tmp_0 = mwl8k_fw_lock(hw);
  
#line 5241 
  if (tmp_0 != 0) {
    
#line 5242 
    kfree((void const *)cmd);
    
#line 5243 
    goto return_label;
  }
  else ;
  
#line 5246 
  if ((int)priv->sniffer_enabled != 0) {
    
#line 5247 
    mwl8k_cmd_enable_sniffer(hw,(_Bool)0);
    
#line 5248 
    priv->sniffer_enabled = (_Bool)0;
  }
  else ;
  
#line 5251 
  if ((changed_flags & 16U) != 0U) 
    
#line 5252 
    if ((*total_flags & 16U) != 0U) 
#line 5256 
                                    mwl8k_cmd_set_pre_scan(hw);
    else {
      struct mwl8k_vif *mwl8k_vif;
      u8 const *bssid;
      
#line 5269 
      mwl8k_vif = mwl8k_first_vif(priv);
      
#line 5270 
      if (mwl8k_vif != (struct mwl8k_vif *)0) 
#line 5271 
                                              bssid = (mwl8k_vif->vif)->bss_conf.bssid; else 
                                                                    
#line 5273 
                                                                    bssid = (u8 const *)"\001\000\000\000\000\000";
      
#line 5275 
      mwl8k_cmd_set_post_scan(hw,bssid);
    }
  else ;
  
#line 5285 
  if ((*total_flags & 2U) != 0U) {
    
#line 5286 
    kfree((void const *)cmd);
    
#line 5287 
    cmd = __mwl8k_cmd_mac_multicast_adr(hw,1,(struct netdev_hw_addr_list *)0);
  }
  else ;
  
#line 5290 
  if (cmd != (struct mwl8k_cmd_pkt *)0) {
    
#line 5291 
    mwl8k_post_cmd(hw,cmd);
    
#line 5292 
    kfree((void const *)cmd);
  }
  else ;
  
#line 5295 
  mwl8k_fw_unlock(hw);
  return_label: 
#line 5296 
                return;
}


#line 5298  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_set_rts_threshold(struct ieee80211_hw *hw, u32 value)
{
  int tmp;
  
#line 5300 
  tmp = mwl8k_cmd_set_rts_threshold(hw,(int)value);
  
#line 5300 
  return tmp;
}


#line 5303  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_sta_remove(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_sta *sta)
{
  int __retres;
  
#line 5307 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 5309 
  if ((int)priv->ap_fw != 0) {
    int tmp;
    
#line 5310 
    tmp = mwl8k_cmd_set_new_stn_del(hw,vif,(u8 *)(& sta->addr));
    
#line 5310 
    __retres = tmp;
    
#line 5310 
    goto return_label;
  }
  else {
    int tmp_0;
    
#line 5312 
    tmp_0 = mwl8k_cmd_update_stadb_del(hw,vif,(u8 *)(& sta->addr));
    
#line 5312 
    __retres = tmp_0;
    
#line 5312 
    goto return_label;
  }
  return_label: 
#line 5309 
                return __retres;
}


#line 5315  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_sta_add(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_sta *sta)
{
  int ret;
  int i;
  struct ieee80211_key_conf *key;
  
#line 5319 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 5322 
  struct mwl8k_vif *mwl8k_vif = (struct mwl8k_vif *)(& vif->drv_priv);
  
#line 5325 
  if (! priv->ap_fw) {
    
#line 5326 
    ret = mwl8k_cmd_update_stadb_add(hw,vif,sta);
    
#line 5327 
    if (ret >= 0) {
      
#line 5328 
      ((struct mwl8k_sta *)(& sta->drv_priv))->peer_id = (unsigned char)ret;
      
#line 5329 
      if ((int)sta->ht_cap.ht_supported != 0) 
#line 5330 
                                              ((struct mwl8k_sta *)(& sta->drv_priv))->is_ampdu_allowed = (unsigned char)1U; else ;
      
#line 5331 
      ret = 0;
    }
    else ;
  }
  else 
#line 5335 
       ret = mwl8k_cmd_set_new_stn_add(hw,vif,sta);
  
#line 5338 
  i = 0;
  
#line 5338 
  goto ldv_53681;
  ldv_53680: 
#line 5339 
  ;
  
#line 5339 
  key = (struct ieee80211_key_conf *)(& mwl8k_vif->wep_key_conf[i].key);
  
#line 5340 
  if ((unsigned int)mwl8k_vif->wep_key_conf[i].enabled != 0U) 
#line 5341 
                                                              mwl8k_set_key(hw,(enum set_key_cmd)SET_KEY,vif,sta,key); else ;
  
#line 5338 
  i += 1;
  ldv_53681: 
#line 5339 
  ;
  
#line 5338 
  if (i <= 3) 
#line 5340 
              goto ldv_53680; else 
#line 5343 
                                   goto ldv_53682;
  ldv_53682: 
#line 5344 
  ;
  
#line 5343 
  return ret;
}


#line 5346  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_conf_tx(struct ieee80211_hw *hw, struct ieee80211_vif *vif, u16 queue, struct ieee80211_tx_queue_params const *params)
{
  int rc;
  
#line 5350 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 5353 
  rc = mwl8k_fw_lock(hw);
  
#line 5354 
  if (rc == 0) {
    
#line 5355 
    if ((long)((unsigned int)queue > 3U) != 0L) {
      
#line 5357 
      ldv_inline_asm();
      
#line 5355 
      ;
    }
    else ;
    
#line 5356 
    memcpy((void *)(& priv->wmm_params[(int)queue]),(void const *)params,10UL);
    
#line 5358 
    if (! priv->wmm_enabled) 
#line 5359 
                             rc = mwl8k_cmd_set_wmm_mode(hw,(_Bool)1); else ;
    
#line 5361 
    if (rc == 0) {
      
#line 5362 
      int q = 3 - (int)queue;
      
#line 5363 
      rc = mwl8k_cmd_set_edca_params(hw,(unsigned char)((int)((unsigned char)q)),(unsigned short)((int)params->cw_min),(unsigned short)((int)params->cw_max),(unsigned char)((int)params->aifs),(unsigned short)((int)params->txop));
    }
    else ;
    
#line 5370 
    mwl8k_fw_unlock(hw);
  }
  else ;
  
#line 5373 
  return rc;
}


#line 5376  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_get_stats(struct ieee80211_hw *hw, struct ieee80211_low_level_stats *stats)
{
  int tmp;
  
#line 5379 
  tmp = mwl8k_cmd_get_stat(hw,stats);
  
#line 5379 
  return tmp;
}


#line 5382  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_get_survey(struct ieee80211_hw *hw, int idx, struct survey_info *survey)
{
  int __retres;
  struct ieee80211_supported_band *sband;
  
#line 5385 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 5386 
  struct ieee80211_conf *conf = & hw->conf;
  
#line 5389 
  if ((int)priv->ap_fw != 0) {
    
#line 5390 
    sband = (hw->wiphy)->bands[0];
    
#line 5392 
    if (sband != (struct ieee80211_supported_band *)0 && sband->n_channels <= idx) {
      
#line 5393 
      idx -= sband->n_channels;
      
#line 5394 
      sband = (struct ieee80211_supported_band *)0;
    }
    else ;
    
#line 5397 
    if (sband == (struct ieee80211_supported_band *)0) 
#line 5398 
                                                       sband = (hw->wiphy)->bands[1]; else ;
    
#line 5400 
    if (sband == (struct ieee80211_supported_band *)0 || sband->n_channels <= idx) {
      
#line 5401 
      __retres = -2;
      
#line 5401 
      goto return_label;
    }
    else ;
    
#line 5403 
    memcpy((void *)survey,(void const *)(& priv->survey[idx]),64UL);
    
#line 5404 
    survey->channel = sband->channels + idx;
    
#line 5406 
    __retres = 0;
    
#line 5406 
    goto return_label;
  }
  else ;
  
#line 5409 
  if (idx != 0) {
    
#line 5410 
    __retres = -2;
    
#line 5410 
    goto return_label;
  }
  else ;
  
#line 5412 
  survey->channel = conf->chandef.chan;
  
#line 5413 
  survey->filled = 1U;
  
#line 5414 
  survey->noise = priv->noise;
  
#line 5416 
  __retres = 0;
  return_label: 
#line 5416 
                return __retres;
}


#line 5422  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_ampdu_action(struct ieee80211_hw *hw, struct ieee80211_vif *vif, enum ieee80211_ampdu_mlme_action action, struct ieee80211_sta *sta, u16 tid, u16 *ssn, u8 buf_size)
{
  int __retres;
  int i;
  struct mwl8k_ampdu_stream *stream;
  u8 idx;
  int tmp_0;
  bool tmp;
  
#line 5428 
  int rc = 0;
  
#line 5429 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 5431 
  u8 *addr = (u8 *)(& sta->addr);
  
#line 5432 
  struct mwl8k_sta *sta_info = (struct mwl8k_sta *)(& sta->drv_priv);
  
#line 5434 
  tmp = _ieee80211_hw_check(hw,(enum ieee80211_hw_flags)IEEE80211_HW_AMPDU_AGGREGATION);
  
#line 5434 
  if (tmp) 
#line 5434 
           tmp_0 = 0; else 
#line 5434 
                           tmp_0 = 1;
  
#line 5434 
  if (tmp_0) {
    
#line 5435 
    __retres = -524;
    
#line 5435 
    goto return_label;
  }
  else ;
  
#line 5437 
  ldv_spin_lock_111(& priv->stream_lock);
  
#line 5438 
  stream = mwl8k_lookup_stream(hw,addr,(unsigned char)((int)((unsigned char)tid)));
  
#line 5440 
  switch ((unsigned int)action) {
    case (unsigned int)0: 
#line 5441 
    ;
    case (unsigned int)1: 
#line 5442 
    ;
    
#line 5443 
    goto ldv_53722;
    case (unsigned int)2: 
#line 5444 
    ;
    
#line 5454 
    *ssn = (unsigned short)0U;
    
#line 5455 
    if (stream == (struct mwl8k_ampdu_stream *)0) {
      
#line 5461 
      dev_warn((struct device const *)(& (hw->wiphy)->dev),"Unexpected call to %s.  ","mwl8k_ampdu_action");
      
#line 5463 
      stream = mwl8k_add_stream(hw,sta,(unsigned char)((int)((unsigned char)tid)));
    }
    else ;
    
#line 5465 
    if (stream == (struct mwl8k_ampdu_stream *)0) {
      
#line 5466 
      dev_printk("\001",(struct device const *)(& (hw->wiphy)->dev),"no free AMPDU streams\n");
      
#line 5467 
      rc = -16;
      
#line 5468 
      goto ldv_53722;
    }
    else ;
    
#line 5470 
    stream->state = (unsigned char)2U;
    
#line 5473 
    ldv_spin_unlock_112(& priv->stream_lock);
    
#line 5474 
    i = 0;
    
#line 5474 
    goto ldv_53727;
    ldv_53726: 
#line 5475 
    ;
    
#line 5477 
    if ((unsigned int)sta_info->is_ampdu_allowed == 0U) {
      
#line 5478 
      ldv_spin_lock_113(& priv->stream_lock);
      
#line 5479 
      mwl8k_remove_stream(hw,stream);
      
#line 5480 
      ldv_spin_unlock_114(& priv->stream_lock);
      
#line 5481 
      __retres = -16;
      
#line 5481 
      goto return_label;
    }
    else ;
    
#line 5484 
    rc = mwl8k_check_ba(hw,stream,vif);
    
#line 5490 
    if (rc == 0 || rc == -16) 
#line 5491 
                              goto ldv_53725; else ;
    
#line 5497 
    msleep(1000U);
    
#line 5474 
    i += 1;
    ldv_53727: 
#line 5475 
    ;
    
#line 5474 
    if (i <= 4) 
#line 5476 
                goto ldv_53726; else 
#line 5479 
                                     goto ldv_53725;
    ldv_53725: 
#line 5480 
    ;
    
#line 5499 
    ldv_spin_lock_115(& priv->stream_lock);
    
#line 5500 
    if (rc != 0) {
      
#line 5501 
      dev_err((struct device const *)(& (hw->wiphy)->dev),"Stream for tid %d busy after %d",(int)tid,5);
      
#line 5503 
      mwl8k_remove_stream(hw,stream);
      
#line 5504 
      rc = -16;
      
#line 5505 
      goto ldv_53722;
    }
    else ;
    
#line 5507 
    ieee80211_start_tx_ba_cb_irqsafe(vif,(u8 const *)addr,(unsigned short)((int)tid));
    
#line 5508 
    goto ldv_53722;
    case (unsigned int)3: 
#line 5509 
    ;
    case (unsigned int)4: 
#line 5510 
    ;
    case (unsigned int)5: 
#line 5511 
    ;
    
#line 5512 
    if (stream != (struct mwl8k_ampdu_stream *)0) {
      
#line 5513 
      if ((unsigned int)stream->state == 3U) {
        
#line 5514 
        idx = stream->idx;
        
#line 5515 
        ldv_spin_unlock_116(& priv->stream_lock);
        
#line 5516 
        mwl8k_destroy_ba(hw,(unsigned char)((int)idx));
        
#line 5517 
        ldv_spin_lock_117(& priv->stream_lock);
      }
      else ;
      
#line 5519 
      mwl8k_remove_stream(hw,stream);
    }
    else ;
    
#line 5521 
    ieee80211_stop_tx_ba_cb_irqsafe(vif,(u8 const *)addr,(unsigned short)((int)tid));
    
#line 5522 
    goto ldv_53722;
    case (unsigned int)6: 
#line 5523 
    ;
    
#line 5524 
    if ((long)(stream == (struct mwl8k_ampdu_stream *)0) != 0L) {
      
#line 5526 
      ldv_inline_asm();
      
#line 5524 
      ;
    }
    else ;
    
#line 5525 
    if ((long)((unsigned int)stream->state != 2U) != 0L) {
      
#line 5527 
      ldv_inline_asm();
      
#line 5525 
      ;
    }
    else ;
    
#line 5526 
    ldv_spin_unlock_118(& priv->stream_lock);
    
#line 5527 
    rc = mwl8k_create_ba(hw,stream,(unsigned char)((int)buf_size),vif);
    
#line 5528 
    ldv_spin_lock_119(& priv->stream_lock);
    
#line 5529 
    if (rc == 0) 
#line 5530 
                 stream->state = (unsigned char)3U;
    else {
      
#line 5532 
      idx = stream->idx;
      
#line 5533 
      ldv_spin_unlock_120(& priv->stream_lock);
      
#line 5534 
      mwl8k_destroy_ba(hw,(unsigned char)((int)idx));
      
#line 5535 
      ldv_spin_lock_121(& priv->stream_lock);
      
#line 5536 
      dev_printk("\001",(struct device const *)(& (hw->wiphy)->dev),"Failed adding stream for sta %pM tid %d\n",addr,(int)tid);
      
#line 5539 
      mwl8k_remove_stream(hw,stream);
    }
    
#line 5541 
    goto ldv_53722;
    default: 
#line 5543 
    ;
    
#line 5544 
    rc = -524;
  }
  ldv_53722: 
#line 5547 
  ;
  
#line 5547 
  ldv_spin_unlock_122(& priv->stream_lock);
  
#line 5548 
  __retres = rc;
  return_label: 
#line 5548 
                return __retres;
}


#line 5551  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_sw_scan_start(struct ieee80211_hw *hw, struct ieee80211_vif *vif, u8 const *mac_addr)
{
  u8 tmp;
  
#line 5555 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 5558 
  if (! priv->ap_fw) 
#line 5559 
                     goto return_label; else ;
  
#line 5562 
  priv->channel_time = 0UL;
  
#line 5563 
  ioread32(priv->regs + 43104U);
  
#line 5564 
  ioread32(priv->regs + 42656U);
  
#line 5565 
  mwl8k_cmd_bbp_reg_access(priv->hw,(unsigned short)0,(unsigned short)103,& tmp);
  
#line 5567 
  priv->sw_scan_start = (_Bool)1;
  return_label: 
#line 5568 
                return;
}


#line 5570  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_sw_scan_complete(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  u8 tmp;
  
#line 5573 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 5576 
  if (! priv->ap_fw) 
#line 5577 
                     goto return_label; else ;
  
#line 5579 
  priv->sw_scan_start = (_Bool)0;
  
#line 5582 
  priv->channel_time = 0UL;
  
#line 5583 
  ioread32(priv->regs + 43104U);
  
#line 5584 
  ioread32(priv->regs + 42656U);
  
#line 5585 
  mwl8k_cmd_bbp_reg_access(priv->hw,(unsigned short)0,(unsigned short)103,& tmp);
  return_label: 
#line 5586 
                return;
}


#line 5588  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static struct ieee80211_ops const mwl8k_ops = {.tx = & mwl8k_tx, .start = & mwl8k_start, .stop = & mwl8k_stop, .suspend = (int (*)(struct ieee80211_hw *, struct cfg80211_wowlan *))0, .resume = (int (*)(struct ieee80211_hw *))0, .set_wakeup = (void (*)(struct ieee80211_hw *, bool ))0, .add_interface = & mwl8k_add_interface, .change_interface = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, enum nl80211_iftype , bool ))0, .remove_interface = & mwl8k_remove_interface, .config = & mwl8k_config, .bss_info_changed = & mwl8k_bss_info_changed, .start_ap = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .stop_ap = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .prepare_multicast = & mwl8k_prepare_multicast, .configure_filter = & mwl8k_configure_filter, .set_tim = (int (*)(struct ieee80211_hw *, struct ieee80211_sta *, bool ))0, .set_key = & mwl8k_set_key, .update_tkip_key = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_key_conf *, struct ieee80211_sta *, u32 , u16 *))0, .set_rekey_data = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_gtk_rekey_data *))0, .set_default_unicast_key = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, int ))0, .hw_scan = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_scan_request *))0, .cancel_hw_scan = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .sched_scan_start = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_sched_scan_request *, struct ieee80211_scan_ies *))0, .sched_scan_stop = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .sw_scan_start = & mwl8k_sw_scan_start, .sw_scan_complete = & mwl8k_sw_scan_complete, .get_stats = & mwl8k_get_stats, .get_key_seq = (void (*)(struct ieee80211_hw *, struct ieee80211_key_conf *, struct ieee80211_key_seq *))0, .set_frag_threshold = (int (*)(struct ieee80211_hw *, u32 ))0, .set_rts_threshold = & mwl8k_set_rts_threshold, .sta_add = & mwl8k_sta_add, .sta_remove = & mwl8k_sta_remove, .sta_add_debugfs = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct dentry *))0, .sta_remove_debugfs = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct dentry *))0, .sta_notify = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, enum sta_notify_cmd , struct ieee80211_sta *))0, .sta_state = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, enum ieee80211_sta_state , enum ieee80211_sta_state ))0, .sta_pre_rcu_remove = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *))0, .sta_rc_update = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, u32 ))0, .sta_rate_tbl_update = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *))0, .sta_statistics = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct station_info *))0, .conf_tx = & mwl8k_conf_tx, .get_tsf = (u64 (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .set_tsf = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, u64 ))0, .reset_tsf = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .tx_last_beacon = (int (*)(struct ieee80211_hw *))0, .ampdu_action = & mwl8k_ampdu_action, .get_survey = & mwl8k_get_survey, .rfkill_poll = (void (*)(struct ieee80211_hw *))0, .set_coverage_class = (void (*)(struct ieee80211_hw *, s16 ))0, .testmode_cmd = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, void *, int ))0, .testmode_dump = (int (*)(struct ieee80211_hw *, struct sk_buff *, struct netlink_callback *, void *, int ))0, .flush = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, u32 , bool ))0, .channel_switch = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *))0, .set_antenna = (int (*)(struct ieee80211_hw *, u32 , u32 ))0, .get_antenna = (int (*)(struct ieee80211_hw *, u32 *, u32 *))0, .remain_on_channel = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel *, int , enum ieee80211_roc_type ))0, .cancel_remain_on_channel = (int (*)(struct ieee80211_hw *))0, .set_ringparam = (int (*)(struct ieee80211_hw *, u32 , u32 ))0, .get_ringparam = (void (*)(struct ieee80211_hw *, u32 *, u32 *, u32 *, u32 *))0, .tx_frames_pending = (bool (*)(struct ieee80211_hw *))0, .set_bitrate_mask = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_bitrate_mask const *))0, .event_callback = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_event const *))0, .allow_buffered_frames = (void (*)(struct ieee80211_hw *, struct ieee80211_sta *, u16 , int , enum ieee80211_frame_release_type , bool ))0, .release_buffered_frames = (void (*)(struct ieee80211_hw *, struct ieee80211_sta *, u16 , int , enum ieee80211_frame_release_type , bool ))0, .get_et_sset_count = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, int ))0, .get_et_stats = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ethtool_stats *, u64 *))0, .get_et_strings = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, u32 , u8 *))0, .mgd_prepare_tx = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .mgd_protect_tdls_discover = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .add_chanctx = (int (*)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *))0, .remove_chanctx = (void (*)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *))0, .change_chanctx = (void (*)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *, u32 ))0, .assign_vif_chanctx = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_chanctx_conf *))0, .unassign_vif_chanctx = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_chanctx_conf *))0, .switch_vif_chanctx = (int (*)(struct ieee80211_hw *, struct ieee80211_vif_chanctx_switch *, int , enum ieee80211_chanctx_switch_mode ))0, .reconfig_complete = (void (*)(struct ieee80211_hw *, enum ieee80211_reconfig_type ))0, .ipv6_addr_change = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct inet6_dev *))0, .channel_switch_beacon = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_chan_def *))0, .pre_channel_switch = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *))0, .post_channel_switch = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .join_ibss = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .leave_ibss = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *))0, .get_expected_throughput = (u32 (*)(struct ieee80211_sta *))0, .get_txpower = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, int *))0, .tdls_channel_switch = (int (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, u8 , struct cfg80211_chan_def *, struct sk_buff *, u32 ))0, .tdls_cancel_channel_switch = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *))0, .tdls_recv_channel_switch = (void (*)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_tdls_ch_sw_params *))0, .wake_tx_queue = (void (*)(struct ieee80211_hw *, struct ieee80211_txq *))0};

#line 5610  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_finalize_join_worker(struct work_struct *work)
{
  struct mwl8k_priv *tmp;
  {
    
#line 5613 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 5613 
    tmp = (struct mwl8k_priv *)__mptr + 18446744073709548760U;
  }
  
#line 5612 
  struct mwl8k_priv *priv = tmp;
  
#line 5614 
  struct sk_buff *skb = priv->beacon_skb;
  
#line 5615 
  struct ieee80211_mgmt *mgmt = (struct ieee80211_mgmt *)skb->data;
  
#line 5616 
  int len = (int)(skb->len + 4294967260U);
  
#line 5617 
  u8 const *tim = cfg80211_find_ie((unsigned char)5,(u8 const *)(& mgmt->u.beacon.variable),len);
  
#line 5619 
  int dtim_period = 1;
  
#line 5621 
  if (tim != (u8 const *)0U && (unsigned int)*(tim + 1U) > 1U) 
#line 5622 
                                                               dtim_period = (int)*(tim + 3U); else ;
  
#line 5624 
  mwl8k_cmd_finalize_join(priv->hw,(void *)skb->data,(int)skb->len,dtim_period);
  
#line 5626 
  consume_skb(skb);
  
#line 5627 
  priv->beacon_skb = (struct sk_buff *)0;
  
#line 5628 
  return;
}


#line 5645  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static struct mwl8k_device_info mwl8k_info_tbl[4U] = {{.part_name = (char *)"88w8363", .helper_image = (char *)"mwl8k/helper_8363.fw", .fw_image_sta = (char *)"mwl8k/fmimage_8363.fw", .fw_image_ap = (char *)0, .ap_rxd_ops = (struct rxd_ops *)0, .fw_api_ap = 0U}, {.part_name = (char *)"88w8687", .helper_image = (char *)"mwl8k/helper_8687.fw", .fw_image_sta = (char *)"mwl8k/fmimage_8687.fw", .fw_image_ap = (char *)0, .ap_rxd_ops = (struct rxd_ops *)0, .fw_api_ap = 0U}, {.part_name = (char *)"88w8366", .helper_image = (char *)"mwl8k/helper_8366.fw", .fw_image_sta = (char *)"mwl8k/fmimage_8366.fw", .fw_image_ap = (char *)"mwl8k/fmimage_8366_ap-", .ap_rxd_ops = & rxd_ap_ops, .fw_api_ap = 3U}, {.part_name = (char *)"88w8764", .helper_image = (char *)0, .fw_image_sta = (char *)0, .fw_image_ap = (char *)"mwl8k/fmimage_8764_ap-", .ap_rxd_ops = & rxd_ap_ops, .fw_api_ap = 1U}};

#line 5680  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static struct pci_device_id const mwl8k_pci_id_table[11U] = {{.vendor = 4523U, .device = 10762U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 10764U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 10788U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4523U, .device = 10795U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 1UL}, {.vendor = 4523U, .device = 10800U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 1UL}, {.vendor = 4523U, .device = 10816U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 2UL}, {.vendor = 4523U, .device = 10817U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 2UL}, {.vendor = 4523U, .device = 10818U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 2UL}, {.vendor = 4523U, .device = 10819U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 2UL}, {.vendor = 4523U, .device = 11062U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 3UL}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 5693  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
struct pci_device_id const __mod_pci__mwl8k_pci_id_table_device_table[11U];

#line 5695  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_request_alt_fw(struct mwl8k_priv *priv)
{
  int __retres;
  int rc;
  char const *tmp;
  
#line 5698 
  ;
  
#line 5698 
  ;
  
#line 5698 
  tmp = pci_name((struct pci_dev const *)priv->pdev);
  
#line 5698 
  printk("\001",tmp,priv->fw_pref,priv->fw_alt);
  
#line 5701 
  rc = mwl8k_request_fw(priv,(char const *)priv->fw_alt,& priv->fw_ucode,(_Bool)1);
  
#line 5702 
  if (rc != 0) {
    char const *tmp_0;
    
#line 5703 
    ;
    
#line 5703 
    tmp_0 = pci_name((struct pci_dev const *)priv->pdev);
    
#line 5703 
    printk("\001",tmp_0,priv->fw_alt);
    
#line 5705 
    __retres = rc;
    
#line 5705 
    goto return_label;
  }
  else ;
  
#line 5707 
  __retres = 0;
  return_label: 
#line 5707 
                return __retres;
}


#line 5710 
static int mwl8k_firmware_load_success(struct mwl8k_priv *priv);


#line 5711  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_fw_state_machine(struct firmware const *fw, void *context)
{
  int rc;
  
#line 5713 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)context;
  
#line 5714 
  struct mwl8k_device_info *di = priv->device_info;
  
#line 5717 
  switch (priv->fw_state) {
    case (unsigned int)0: 
#line 5718 
    ;
    
#line 5719 
    if (fw == (struct firmware const *)0) {
      char const *tmp;
      
#line 5720 
      ;
      
#line 5720 
      tmp = pci_name((struct pci_dev const *)priv->pdev);
      
#line 5720 
      printk("\001",tmp,di->helper_image);
      
#line 5722 
      goto fail;
    }
    else ;
    
#line 5724 
    priv->fw_helper = fw;
    
#line 5725 
    rc = mwl8k_request_fw(priv,(char const *)priv->fw_pref,& priv->fw_ucode,(_Bool)1);
    
#line 5727 
    if (rc != 0 && priv->fw_alt != (char *)0) {
      
#line 5728 
      rc = mwl8k_request_alt_fw(priv);
      
#line 5729 
      if (rc != 0) 
#line 5730 
                   goto fail; else ;
      
#line 5731 
      priv->fw_state = 2U;
    }
    else 
      
#line 5732 
      if (rc != 0) 
#line 5733 
                   goto fail; else 
#line 5735 
                                   priv->fw_state = 1U;
    
#line 5736 
    goto ldv_53788;
    case (unsigned int)1: 
#line 5738 
    ;
    
#line 5739 
    if (fw == (struct firmware const *)0) {
      
#line 5740 
      if (priv->fw_alt != (char *)0) {
        
#line 5741 
        rc = mwl8k_request_alt_fw(priv);
        
#line 5742 
        if (rc != 0) 
#line 5743 
                     goto fail; else ;
        
#line 5744 
        priv->fw_state = 2U;
      }
      else 
#line 5746 
           goto fail;
    }
    else {
      
#line 5748 
      priv->fw_ucode = fw;
      
#line 5749 
      rc = mwl8k_firmware_load_success(priv);
      
#line 5750 
      if (rc != 0) 
#line 5751 
                   goto fail; else 
#line 5753 
                                   complete(& priv->firmware_loading_complete);
    }
    
#line 5755 
    goto ldv_53788;
    case (unsigned int)2: 
#line 5757 
    ;
    
#line 5758 
    if (fw == (struct firmware const *)0) {
      char const *tmp_0;
      
#line 5759 
      ;
      
#line 5759 
      tmp_0 = pci_name((struct pci_dev const *)priv->pdev);
      
#line 5759 
      printk("\001",tmp_0,di->helper_image);
      
#line 5761 
      goto fail;
    }
    else ;
    
#line 5763 
    priv->fw_ucode = fw;
    
#line 5764 
    rc = mwl8k_firmware_load_success(priv);
    
#line 5765 
    if (rc != 0) 
#line 5766 
                 goto fail; else 
#line 5768 
                                 complete(& priv->firmware_loading_complete);
    
#line 5769 
    goto ldv_53788;
    default: 
#line 5771 
    ;
    
#line 5772 
    printk("\001",(char *)"mwl8k",priv->fw_state);
    
#line 5776 
    ldv_inline_asm();
    
#line 5774 
    ;
  }
  ldv_53788: 
#line 5777 
  ;
  
#line 5777 
  goto return_label;
  fail: 
#line 5779 
  ;
  
#line 5780 
  priv->fw_state = 3U;
  
#line 5781 
  complete(& priv->firmware_loading_complete);
  
#line 5782 
  device_release_driver(& (priv->pdev)->dev);
  
#line 5783 
  mwl8k_release_firmware(priv);
  return_label: 
#line 5784 
                return;
}


#line 5787  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_init_firmware(struct ieee80211_hw *hw, char *fw_image, bool nowait)
{
  int __retres;
  int rc;
  
#line 5790 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 5792 
  int count = 1;
  retry: 
#line 5794 
  ;
  
#line 5796 
  mwl8k_hw_reset(priv);
  
#line 5799 
  rc = mwl8k_request_firmware(priv,fw_image,(_Bool)((bool)((int)nowait) != 0));
  
#line 5800 
  if (rc != 0) {
    
#line 5801 
    dev_err((struct device const *)(& (hw->wiphy)->dev),"Firmware files not found\n");
    
#line 5802 
    __retres = rc;
    
#line 5802 
    goto return_label;
  }
  else ;
  
#line 5805 
  if ((int)nowait != 0) {
    
#line 5806 
    __retres = rc;
    
#line 5806 
    goto return_label;
  }
  else ;
  
#line 5809 
  rc = mwl8k_load_firmware(hw);
  
#line 5810 
  if (rc != 0) 
#line 5811 
               dev_err((struct device const *)(& (hw->wiphy)->dev),"Cannot start firmware\n"); else ;
  
#line 5814 
  mwl8k_release_firmware(priv);
  
#line 5816 
  if (rc != 0 && count != 0) {
    
#line 5820 
    count -= 1;
    
#line 5821 
    dev_err((struct device const *)(& (hw->wiphy)->dev),"Trying to reload the firmware again\n");
    
#line 5822 
    msleep(20U);
    
#line 5823 
    goto retry;
  }
  else ;
  
#line 5826 
  __retres = rc;
  return_label: 
#line 5826 
                return __retres;
}


#line 5829  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_init_txqs(struct ieee80211_hw *hw)
{
  int i;
  
#line 5831 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 5832 
  int rc = 0;
  
#line 5835 
  i = 0;
  
#line 5835 
  goto ldv_53809;
  ldv_53808: 
#line 5836 
  ;
  
#line 5836 
  rc = mwl8k_txq_init(hw,i);
  
#line 5837 
  if (rc != 0) 
#line 5838 
               goto ldv_53807; else ;
  
#line 5839 
  if ((int)priv->ap_fw != 0) 
#line 5840 
                             iowrite32((unsigned int)priv->txq[i].txd_dma,priv->sram + priv->txq_offset[i]); else ;
  
#line 5835 
  i += 1;
  ldv_53809: 
#line 5836 
  ;
  
#line 5835 
  if ((int)priv->num_ampdu_queues + 4 > i) 
#line 5837 
                                           goto ldv_53808; else 
#line 5840 
                                                                goto ldv_53807;
  ldv_53807: 
#line 5841 
  ;
  
#line 5843 
  return rc;
}


#line 5847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_probe_hw(struct ieee80211_hw *hw)
{
  int __retres;
  int i;
  char *tmp;
  
#line 5849 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 5850 
  int rc = 0;
  
#line 5853 
  if ((int)priv->ap_fw != 0) {
    
#line 5854 
    priv->rxd_ops = (priv->device_info)->ap_rxd_ops;
    
#line 5855 
    if (priv->rxd_ops == (struct rxd_ops *)0) {
      
#line 5856 
      dev_err((struct device const *)(& (hw->wiphy)->dev),"Driver does not have AP firmware image support for this hardware\n");
      
#line 5858 
      rc = -2;
      
#line 5859 
      goto err_stop_firmware;
    }
    else ;
  }
  else 
#line 5862 
       priv->rxd_ops = & rxd_sta_ops;
  
#line 5865 
  priv->sniffer_enabled = (_Bool)0;
  
#line 5866 
  priv->wmm_enabled = (_Bool)0;
  
#line 5867 
  priv->pending_tx_pkts = 0;
  
#line 5868 
  atomic_set(& priv->watchdog_event_pending,0);
  
#line 5870 
  rc = mwl8k_rxq_init(hw,0);
  
#line 5871 
  if (rc != 0) 
#line 5872 
               goto err_stop_firmware; else ;
  
#line 5873 
  rxq_refill(hw,0,2147483647);
  
#line 5881 
  priv->num_ampdu_queues = (unsigned char)0U;
  
#line 5882 
  if (! priv->ap_fw) {
    
#line 5883 
    rc = mwl8k_init_txqs(hw);
    
#line 5884 
    if (rc != 0) 
#line 5885 
                 goto err_free_queues; else ;
  }
  else ;
  
#line 5888 
  iowrite32(0U,priv->regs + 3120U);
  
#line 5889 
  iowrite32(0U,priv->regs + 3124U);
  
#line 5890 
  iowrite32(16387U,priv->regs + 3128U);
  
#line 5893 
  iowrite32(4U,priv->regs + 3132U);
  
#line 5896 
  rc = ldv_request_irq_123((priv->pdev)->irq,& mwl8k_interrupt,128UL,"mwl8k",(void *)hw);
  
#line 5898 
  if (rc != 0) {
    
#line 5899 
    dev_err((struct device const *)(& (hw->wiphy)->dev),"failed to register IRQ handler\n");
    
#line 5900 
    goto err_free_queues;
  }
  else ;
  
#line 5909 
  if (! priv->hw_restart_in_progress) 
#line 5910 
                                      memset((void *)(& priv->ampdu),0,128UL); else ;
  
#line 5917 
  iowrite32(1068271U,priv->regs + 3124U);
  
#line 5920 
  if ((int)priv->ap_fw != 0) {
    
#line 5921 
    rc = mwl8k_cmd_get_hw_spec_ap(hw);
    
#line 5922 
    if (rc == 0) 
#line 5923 
                 rc = mwl8k_init_txqs(hw); else ;
    
#line 5924 
    if (rc == 0) 
#line 5925 
                 rc = mwl8k_cmd_set_hw_spec(hw); else ;
  }
  else 
#line 5927 
       rc = mwl8k_cmd_get_hw_spec_sta(hw);
  
#line 5929 
  if (rc != 0) {
    
#line 5930 
    dev_err((struct device const *)(& (hw->wiphy)->dev),"Cannot initialise firmware\n");
    
#line 5931 
    goto err_free_irq;
  }
  else ;
  
#line 5935 
  rc = mwl8k_cmd_radio_disable(hw);
  
#line 5936 
  if (rc != 0) {
    
#line 5937 
    dev_err((struct device const *)(& (hw->wiphy)->dev),"Cannot disable\n");
    
#line 5938 
    goto err_free_irq;
  }
  else ;
  
#line 5942 
  rc = mwl8k_cmd_set_mac_addr(hw,(struct ieee80211_vif *)0,(u8 *)"\000\000\000\000\000\000");
  
#line 5943 
  if (rc != 0) {
    
#line 5944 
    dev_err((struct device const *)(& (hw->wiphy)->dev),"Cannot clear MAC address\n");
    
#line 5945 
    goto err_free_irq;
  }
  else ;
  
#line 5949 
  rc = mwl8k_cmd_rf_antenna(hw,1,3);
  
#line 5950 
  if (rc != 0) 
#line 5951 
               dev_warn((struct device const *)(& (hw->wiphy)->dev),"failed to set # of RX antennas"); else ;
  
#line 5952 
  rc = mwl8k_cmd_rf_antenna(hw,2,7);
  
#line 5953 
  if (rc != 0) 
#line 5954 
               dev_warn((struct device const *)(& (hw->wiphy)->dev),"failed to set # of TX antennas"); else ;
  
#line 5958 
  iowrite32(0U,priv->regs + 3124U);
  
#line 5959 
  ldv_free_irq_124((priv->pdev)->irq,(void *)hw);
  
#line 5961 
  ;
  
#line 5961 
  ;
  
#line 5961 
  ;
  
#line 5961 
  ;
  
#line 5961 
  if ((int)priv->ap_fw != 0) 
#line 5961 
                             tmp = (char *)"AP"; else 
#line 5961 
                                                      tmp = (char *)"STA";
  
#line 5961 
  ;
  
#line 5961 
  ;
  
#line 5961 
  ;
  
#line 5961 
  ;
  
#line 5961 
  _dev_info((struct device const *)(& (hw->wiphy)->dev),"%s v%d, %pm, %s firmware %u.%u.%u.%u\n",(priv->device_info)->part_name,(int)priv->hw_rev,(u8 *)(& (hw->wiphy)->perm_addr),tmp,priv->fw_rev >> 24,(priv->fw_rev >> 16) & 255U,(priv->fw_rev >> 8) & 255U,priv->fw_rev & 255U);
  
#line 5968 
  __retres = 0;
  
#line 5968 
  goto return_label;
  err_free_irq: 
#line 5970 
  ;
  
#line 5971 
  iowrite32(0U,priv->regs + 3124U);
  
#line 5972 
  ldv_free_irq_125((priv->pdev)->irq,(void *)hw);
  err_free_queues: 
#line 5974 
  ;
  
#line 5975 
  i = 0;
  
#line 5975 
  goto ldv_53820;
  ldv_53819: 
#line 5976 
  ;
  
#line 5976 
  mwl8k_txq_deinit(hw,i);
  
#line 5975 
  i += 1;
  ldv_53820: 
#line 5976 
  ;
  
#line 5975 
  if ((int)priv->num_ampdu_queues + 4 > i) 
#line 5977 
                                           goto ldv_53819; else 
#line 5980 
                                                                goto ldv_53821;
  ldv_53821: 
#line 5981 
  ;
  
#line 5977 
  mwl8k_rxq_deinit(hw,0);
  err_stop_firmware: 
#line 5979 
  ;
  
#line 5980 
  mwl8k_hw_reset(priv);
  
#line 5982 
  __retres = rc;
  return_label: 
#line 5982 
                return __retres;
}


#line 5989  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_reload_firmware(struct ieee80211_hw *hw, char *fw_image)
{
  int __retres;
  int i;
  struct mwl8k_vif *vif;
  struct mwl8k_vif *tmp_vif;
  
#line 5991 
  int rc = 0;
  
#line 5992 
  struct mwl8k_priv *priv = (struct mwl8k_priv *)hw->priv;
  
#line 5995 
  mwl8k_stop(hw);
  
#line 5996 
  mwl8k_rxq_deinit(hw,0);
  
#line 6003 
  if ((int)priv->hw_restart_in_progress != 0) {
    struct mwl8k_vif *tmp;
    struct mwl8k_vif *tmp_0;
    struct mwl8k_vif *tmp_1;
    {
      
#line 6004 
      struct list_head const *__mptr = (struct list_head const *)priv->vif_list.next;
      
#line 6004 
      tmp = (struct mwl8k_vif *)__mptr;
    }
    
#line 6004 
    vif = tmp;
    {
      
#line 6004 
      struct list_head const *__mptr_0 = (struct list_head const *)vif->list.next;
      
#line 6004 
      tmp_0 = (struct mwl8k_vif *)__mptr_0;
    }
    
#line 6005 
    tmp_vif = tmp_0;
    
#line 6004 
    goto ldv_53838;
    ldv_53837: 
#line 6005 
    ;
    
#line 6005 
    mwl8k_remove_vif(priv,vif);
    
#line 6004 
    vif = tmp_vif;
    {
      
#line 6004 
      struct list_head const *__mptr_1 = (struct list_head const *)tmp_vif->list.next;
      
#line 6004 
      tmp_1 = (struct mwl8k_vif *)__mptr_1;
    }
    
#line 6004 
    tmp_vif = tmp_1;
    ldv_53838: 
#line 6006 
    ;
    
#line 6004 
    if (& vif->list != & priv->vif_list) 
#line 6006 
                                         goto ldv_53837; else 
#line 6009 
                                                              goto ldv_53839;
    ldv_53839: 
#line 6010 
    ;
  }
  else ;
  
#line 6007 
  i = 0;
  
#line 6007 
  goto ldv_53841;
  ldv_53840: 
#line 6008 
  ;
  
#line 6008 
  mwl8k_txq_deinit(hw,i);
  
#line 6007 
  i += 1;
  ldv_53841: 
#line 6008 
  ;
  
#line 6007 
  if ((int)priv->num_ampdu_queues + 4 > i) 
#line 6009 
                                           goto ldv_53840; else 
#line 6012 
                                                                goto ldv_53842;
  ldv_53842: 
#line 6013 
  ;
  
#line 6010 
  rc = mwl8k_init_firmware(hw,fw_image,(_Bool)0);
  
#line 6011 
  if (rc != 0) 
#line 6012 
               goto fail; else ;
  
#line 6014 
  rc = mwl8k_probe_hw(hw);
  
#line 6015 
  if (rc != 0) 
#line 6016 
               goto fail; else ;
  
#line 6018 
  if ((int)priv->hw_restart_in_progress != 0) {
    
#line 6019 
    __retres = rc;
    
#line 6019 
    goto return_label;
  }
  else ;
  
#line 6021 
  rc = mwl8k_start(hw);
  
#line 6022 
  if (rc != 0) 
#line 6023 
               goto fail; else ;
  
#line 6025 
  rc = mwl8k_config(hw,4294967295U);
  
#line 6026 
  if (rc != 0) 
#line 6027 
               goto fail; else ;
  
#line 6029 
  i = 0;
  
#line 6029 
  goto ldv_53845;
  ldv_53844: 
#line 6030 
  ;
  
#line 6030 
  rc = mwl8k_conf_tx(hw,(struct ieee80211_vif *)0,(unsigned short)((int)((unsigned short)i)),(struct ieee80211_tx_queue_params const *)(& priv->wmm_params[i]));
  
#line 6031 
  if (rc != 0) 
#line 6032 
               goto fail; else ;
  
#line 6029 
  i += 1;
  ldv_53845: 
#line 6030 
  ;
  
#line 6029 
  if (i <= 3) 
#line 6031 
              goto ldv_53844; else 
#line 6034 
                                   goto ldv_53846;
  ldv_53846: 
#line 6035 
  ;
  
#line 6035 
  __retres = rc;
  
#line 6035 
  goto return_label;
  fail: 
#line 6037 
  ;
  
#line 6038 
  printk("\001");
  
#line 6039 
  __retres = rc;
  return_label: 
#line 6039 
                return __retres;
}


#line 6042  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static struct ieee80211_iface_limit const ap_if_limits[2U] = {{.max = (unsigned short)8U, .types = (unsigned short)8U}, {.max = (unsigned short)1U, .types = (unsigned short)4U}};

#line 6047  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static struct ieee80211_iface_combination const ap_if_comb = {.limits = (struct ieee80211_iface_limit const *)(& ap_if_limits), .num_different_channels = 1U, .max_interfaces = (unsigned short)8U, .n_limits = (unsigned char)2U, .beacon_int_infra_match = (_Bool)0, .radar_detect_widths = (unsigned char)0, .radar_detect_regions = (unsigned char)0};

#line 6055  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_firmware_load_success(struct mwl8k_priv *priv)
{
  int __retres;
  int i;
  int rc;
  int tmp;
  
#line 6057 
  struct ieee80211_hw *hw = priv->hw;
  
#line 6060 
  rc = mwl8k_load_firmware(hw);
  
#line 6061 
  mwl8k_release_firmware(priv);
  
#line 6062 
  if (rc != 0) {
    
#line 6063 
    dev_err((struct device const *)(& (hw->wiphy)->dev),"Cannot start firmware\n");
    
#line 6064 
    __retres = rc;
    
#line 6064 
    goto return_label;
  }
  else ;
  
#line 6071 
  hw->extra_tx_headroom = 22U;
  
#line 6074 
  if ((int)priv->ap_fw != 0) 
#line 6074 
                             tmp = 8; else 
#line 6074 
                                           tmp = 0;
  
#line 6074 
  hw->extra_tx_headroom -= (unsigned int)tmp;
  
#line 6076 
  hw->queues = (unsigned short)4U;
  
#line 6079 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_SIGNAL_DBM);
  
#line 6080 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_HAS_RATE_CONTROL);
  
#line 6086 
  if ((int)priv->ap_fw != 0) 
#line 6087 
                             _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_AP_LINK_PS); else ;
  
#line 6089 
  hw->vif_data_size = 192;
  
#line 6090 
  hw->sta_data_size = 68;
  
#line 6092 
  priv->macids_used = 0U;
  
#line 6093 
  INIT_LIST_HEAD(& priv->vif_list);
  
#line 6096 
  priv->radio_on = (_Bool)0;
  
#line 6097 
  priv->radio_short_preamble = (_Bool)0;
  {
    struct lock_class_key __key;
    
#line 6100 
    __init_work(& priv->finalize_join_worker,0);
    
#line 6100 
    atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 6100 
    priv->finalize_join_worker.data = __constr_expr_37;
    
#line 6100 
    lockdep_init_map(& priv->finalize_join_worker.lockdep_map,"(&priv->finalize_join_worker)",& __key,0);
    
#line 6100 
    INIT_LIST_HEAD(& priv->finalize_join_worker.entry);
    
#line 6100 
    priv->finalize_join_worker.func = & mwl8k_finalize_join_worker;
  }
  {
    struct lock_class_key __key_0;
    
#line 6102 
    __init_work(& priv->watchdog_ba_handle,0);
    
#line 6102 
    atomic_long_t __constr_expr_38 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 6102 
    priv->watchdog_ba_handle.data = __constr_expr_38;
    
#line 6102 
    lockdep_init_map(& priv->watchdog_ba_handle.lockdep_map,"(&priv->watchdog_ba_handle)",& __key_0,0);
    
#line 6102 
    INIT_LIST_HEAD(& priv->watchdog_ba_handle.entry);
    
#line 6102 
    priv->watchdog_ba_handle.func = & mwl8k_watchdog_ba_events;
  }
  {
    struct lock_class_key __key_1;
    
#line 6104 
    __init_work(& priv->fw_reload,0);
    
#line 6104 
    atomic_long_t __constr_expr_39 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 6104 
    priv->fw_reload.data = __constr_expr_39;
    
#line 6104 
    lockdep_init_map(& priv->fw_reload.lockdep_map,"(&priv->fw_reload)",& __key_1,0);
    
#line 6104 
    INIT_LIST_HEAD(& priv->fw_reload.entry);
    
#line 6104 
    priv->fw_reload.func = & mwl8k_hw_restart_work;
  }
  
#line 6107 
  ldv_tasklet_init_126(& priv->poll_tx_task,& mwl8k_tx_poll,(unsigned long)hw);
  
#line 6108 
  tasklet_disable(& priv->poll_tx_task);
  
#line 6109 
  ldv_tasklet_init_127(& priv->poll_rx_task,& mwl8k_rx_poll,(unsigned long)hw);
  
#line 6110 
  tasklet_disable(& priv->poll_rx_task);
  
#line 6113 
  priv->cookie = (u32 *)pci_alloc_consistent(priv->pdev,4UL,& priv->cookie_dma);
  
#line 6114 
  if (priv->cookie == (u32 *)0U) {
    
#line 6115 
    __retres = -12;
    
#line 6115 
    goto return_label;
  }
  else ;
  {
    struct lock_class_key __key_2;
    
#line 6117 
    __mutex_init(& priv->fw_mutex,"&priv->fw_mutex",& __key_2);
  }
  
#line 6118 
  priv->fw_mutex_owner = (struct task_struct *)0;
  
#line 6119 
  priv->fw_mutex_depth = 0;
  
#line 6120 
  priv->hostcmd_wait = (struct completion *)0;
  
#line 6122 
  spinlock_check(& priv->tx_lock);
  {
    struct lock_class_key __key_3;
    
#line 6122 
    __raw_spin_lock_init(& priv->tx_lock.__anonCompField_spinlock_18.rlock,"&(&priv->tx_lock)->rlock",& __key_3);
  }
  
#line 6124 
  spinlock_check(& priv->stream_lock);
  {
    struct lock_class_key __key_4;
    
#line 6124 
    __raw_spin_lock_init(& priv->stream_lock.__anonCompField_spinlock_18.rlock,"&(&priv->stream_lock)->rlock",& __key_4);
  }
  
#line 6126 
  priv->tx_wait = (struct completion *)0;
  
#line 6128 
  rc = mwl8k_probe_hw(hw);
  
#line 6129 
  if (rc != 0) 
#line 6130 
               goto err_free_cookie; else ;
  
#line 6132 
  (hw->wiphy)->interface_modes = (unsigned short)0U;
  
#line 6134 
  if (priv->ap_macids_supported != 0U || (priv->device_info)->fw_image_ap != (char *)0) {
    
#line 6135 
    (hw->wiphy)->interface_modes = (unsigned short)((unsigned int)(hw->wiphy)->interface_modes | 8U);
    
#line 6136 
    (hw->wiphy)->interface_modes = (unsigned short)((unsigned int)(hw->wiphy)->interface_modes | 4U);
    
#line 6137 
    (hw->wiphy)->iface_combinations = & ap_if_comb;
    
#line 6138 
    (hw->wiphy)->n_iface_combinations = 1;
  }
  else ;
  
#line 6141 
  if (priv->sta_macids_supported != 0U || (priv->device_info)->fw_image_sta != (char *)0) 
    
#line 6142 
    (hw->wiphy)->interface_modes = (unsigned short)((unsigned int)(hw->wiphy)->interface_modes | 4U); else ;
  
#line 6144 
  rc = ieee80211_register_hw(hw);
  
#line 6145 
  if (rc != 0) {
    
#line 6146 
    dev_err((struct device const *)(& (hw->wiphy)->dev),"Cannot register device\n");
    
#line 6147 
    goto err_unprobe_hw;
  }
  else ;
  
#line 6150 
  __retres = 0;
  
#line 6150 
  goto return_label;
  err_unprobe_hw: 
#line 6152 
  ;
  
#line 6153 
  i = 0;
  
#line 6153 
  goto ldv_53870;
  ldv_53869: 
#line 6154 
  ;
  
#line 6154 
  mwl8k_txq_deinit(hw,i);
  
#line 6153 
  i += 1;
  ldv_53870: 
#line 6154 
  ;
  
#line 6153 
  if ((int)priv->num_ampdu_queues + 4 > i) 
#line 6155 
                                           goto ldv_53869; else 
#line 6158 
                                                                goto ldv_53871;
  ldv_53871: 
#line 6159 
  ;
  
#line 6155 
  mwl8k_rxq_deinit(hw,0);
  err_free_cookie: 
#line 6157 
  ;
  
#line 6158 
  if (priv->cookie != (u32 *)0U) 
#line 6159 
                                 pci_free_consistent(priv->pdev,4UL,(void *)priv->cookie,priv->cookie_dma); else ;
  
#line 6162 
  __retres = rc;
  return_label: 
#line 6162 
                return __retres;
}


#line 6164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_probe(struct pci_dev *pdev, struct pci_device_id const *id)
{
  int __retres;
  int printed_version;
  struct ieee80211_hw *hw;
  struct mwl8k_priv *priv;
  struct mwl8k_device_info *di;
  int rc;
  
#line 6173 
  if (printed_version == 0) {
    
#line 6174 
    printk("\001",(char *)"Marvell TOPDOG(R) 802.11 Wireless Network Driver",(char *)"0.13");
    
#line 6175 
    printed_version = 1;
  }
  else ;
  
#line 6179 
  rc = pci_enable_device(pdev);
  
#line 6180 
  if (rc != 0) {
    
#line 6181 
    printk("\001",(char *)"mwl8k");
    
#line 6183 
    __retres = rc;
    
#line 6183 
    goto return_label;
  }
  else ;
  
#line 6186 
  rc = pci_request_regions(pdev,"mwl8k");
  
#line 6187 
  if (rc != 0) {
    
#line 6188 
    printk("\001",(char *)"mwl8k");
    
#line 6190 
    goto err_disable_device;
  }
  else ;
  
#line 6193 
  pci_set_master(pdev);
  
#line 6196 
  hw = ldv_ieee80211_alloc_hw_128(4448UL,& mwl8k_ops);
  
#line 6197 
  if (hw == (struct ieee80211_hw *)0) {
    
#line 6198 
    printk("\001",(char *)"mwl8k");
    
#line 6199 
    rc = -12;
    
#line 6200 
    goto err_free_reg;
  }
  else ;
  
#line 6203 
  SET_IEEE80211_DEV(hw,& pdev->dev);
  
#line 6204 
  pci_set_drvdata(pdev,(void *)hw);
  
#line 6206 
  priv = (struct mwl8k_priv *)hw->priv;
  
#line 6207 
  priv->hw = hw;
  
#line 6208 
  priv->pdev = pdev;
  
#line 6209 
  priv->device_info = & mwl8k_info_tbl[id->driver_data];
  
#line 6211 
  if (id->driver_data == 3UL) 
#line 6212 
                              priv->is_8764 = (_Bool)1; else ;
  
#line 6214 
  priv->sram = pci_iomap(pdev,0,65536UL);
  
#line 6215 
  if (priv->sram == (void *)0) {
    
#line 6216 
    dev_err((struct device const *)(& (hw->wiphy)->dev),"Cannot map device SRAM\n");
    
#line 6217 
    rc = -5;
    
#line 6218 
    goto err_iounmap;
  }
  else ;
  
#line 6225 
  priv->regs = pci_iomap(pdev,1,65536UL);
  
#line 6226 
  if (priv->regs == (void *)0) {
    
#line 6227 
    priv->regs = pci_iomap(pdev,2,65536UL);
    
#line 6228 
    if (priv->regs == (void *)0) {
      
#line 6229 
      dev_err((struct device const *)(& (hw->wiphy)->dev),"Cannot map device registers\n");
      
#line 6230 
      rc = -5;
      
#line 6231 
      goto err_iounmap;
    }
    else ;
  }
  else ;
  
#line 6240 
  init_completion(& priv->firmware_loading_complete);
  
#line 6241 
  di = priv->device_info;
  
#line 6242 
  if ((int)ap_mode_default != 0 && di->fw_image_ap != (char *)0) {
    
#line 6243 
    priv->fw_pref = di->fw_image_ap;
    
#line 6244 
    priv->fw_alt = di->fw_image_sta;
  }
  else 
    
#line 6245 
    if (! ap_mode_default && di->fw_image_sta != (char *)0) {
      
#line 6246 
      priv->fw_pref = di->fw_image_sta;
      
#line 6247 
      priv->fw_alt = di->fw_image_ap;
    }
    else 
      
#line 6248 
      if (((int)ap_mode_default != 0 && di->fw_image_ap == (char *)0) && di->fw_image_sta != (char *)0) {
        
#line 6249 
        printk("\001");
        
#line 6250 
        priv->fw_pref = di->fw_image_sta;
      }
      else 
        
#line 6251 
        if ((! ap_mode_default && di->fw_image_sta == (char *)0) && di->fw_image_ap != (char *)0) {
          
#line 6252 
          printk("\001");
          
#line 6253 
          priv->fw_pref = di->fw_image_ap;
        }
        else ;
  
#line 6255 
  rc = mwl8k_init_firmware(hw,priv->fw_pref,(_Bool)1);
  
#line 6256 
  if (rc != 0) 
#line 6257 
               goto err_stop_firmware; else ;
  
#line 6259 
  priv->hw_restart_in_progress = (_Bool)0;
  
#line 6261 
  priv->running_bsses = 0U;
  
#line 6263 
  __retres = rc;
  
#line 6263 
  goto return_label;
  err_stop_firmware: 
#line 6265 
  ;
  
#line 6266 
  mwl8k_hw_reset(priv);
  err_iounmap: 
#line 6268 
  ;
  
#line 6269 
  if (priv->regs != (void *)0) 
#line 6270 
                               pci_iounmap(pdev,priv->regs); else ;
  
#line 6272 
  if (priv->sram != (void *)0) 
#line 6273 
                               pci_iounmap(pdev,priv->sram); else ;
  
#line 6275 
  ldv_ieee80211_free_hw_129(hw);
  err_free_reg: 
#line 6277 
  ;
  
#line 6278 
  pci_release_regions(pdev);
  err_disable_device: 
#line 6280 
  ;
  
#line 6281 
  pci_disable_device(pdev);
  
#line 6283 
  __retres = rc;
  return_label: 
#line 6283 
                return __retres;
}


#line 6286  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_remove(struct pci_dev *pdev)
{
  struct mwl8k_priv *priv;
  int i;
  
#line 6288 
  struct ieee80211_hw *hw = pci_get_drvdata(pdev);
  
#line 6292 
  if (hw == (struct ieee80211_hw *)0) 
#line 6293 
                                      goto return_label; else ;
  
#line 6294 
  priv = (struct mwl8k_priv *)hw->priv;
  
#line 6296 
  wait_for_completion(& priv->firmware_loading_complete);
  
#line 6298 
  if (priv->fw_state == 3U) {
    
#line 6299 
    mwl8k_hw_reset(priv);
    
#line 6300 
    goto unmap;
  }
  else ;
  
#line 6303 
  ieee80211_stop_queues(hw);
  
#line 6305 
  ieee80211_unregister_hw(hw);
  
#line 6308 
  tasklet_kill(& priv->poll_tx_task);
  
#line 6309 
  tasklet_kill(& priv->poll_rx_task);
  
#line 6312 
  mwl8k_hw_reset(priv);
  
#line 6315 
  i = 0;
  
#line 6315 
  goto ldv_53893;
  ldv_53892: 
#line 6316 
  ;
  
#line 6316 
  mwl8k_txq_reclaim(hw,i,2147483647,1);
  
#line 6315 
  i += 1;
  ldv_53893: 
#line 6316 
  ;
  
#line 6315 
  if ((int)priv->num_ampdu_queues + 4 > i) 
#line 6317 
                                           goto ldv_53892; else 
#line 6320 
                                                                goto ldv_53894;
  ldv_53894: 
#line 6321 
  ;
  
#line 6318 
  i = 0;
  
#line 6318 
  goto ldv_53896;
  ldv_53895: 
#line 6319 
  ;
  
#line 6319 
  mwl8k_txq_deinit(hw,i);
  
#line 6318 
  i += 1;
  ldv_53896: 
#line 6319 
  ;
  
#line 6318 
  if ((int)priv->num_ampdu_queues + 4 > i) 
#line 6320 
                                           goto ldv_53895; else 
#line 6323 
                                                                goto ldv_53897;
  ldv_53897: 
#line 6324 
  ;
  
#line 6321 
  mwl8k_rxq_deinit(hw,0);
  
#line 6323 
  pci_free_consistent(priv->pdev,4UL,(void *)priv->cookie,priv->cookie_dma);
  unmap: 
#line 6325 
  ;
  
#line 6326 
  pci_iounmap(pdev,priv->regs);
  
#line 6327 
  pci_iounmap(pdev,priv->sram);
  
#line 6328 
  ldv_ieee80211_free_hw_130(hw);
  
#line 6329 
  pci_release_regions(pdev);
  
#line 6330 
  pci_disable_device(pdev);
  return_label: 
#line 6331 
                return;
}


#line 6333  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static struct pci_driver mwl8k_driver = {.node = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "mwl8k", .id_table = (struct pci_device_id const *)(& mwl8k_pci_id_table), .probe = & mwl8k_probe, .remove = & mwl8k_remove, .suspend = (int (*)(struct pci_dev *, pm_message_t ))0, .suspend_late = (int (*)(struct pci_dev *, pm_message_t ))0, .resume_early = (int (*)(struct pci_dev *))0, .resume = (int (*)(struct pci_dev *))0, .shutdown = (void (*)(struct pci_dev *))0, .sriov_configure = (int (*)(struct pci_dev *, int ))0, .err_handler = (struct pci_error_handlers const *)0, .driver = {.name = (char const *)0, .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)0, .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = (struct dev_pm_ops const *)0, .p = (struct driver_private *)0}, .dynids = {.lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 0U, .owner_cpu = 0U, .owner = (void *)0, .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char const *)0, .cpu = 0, .ip = 0UL}}}}, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}}};

#line 6340  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static int mwl8k_driver_init(void)
{
  int tmp;
  
#line 6340 
  tmp = ldv___pci_register_driver_131(& mwl8k_driver,& __this_module,"mwl8k");
  
#line 6340 
  return tmp;
}


#line 6340  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/mwl8k.c"
static void mwl8k_driver_exit(void)
{
  
#line 6340 
  ldv_pci_unregister_driver_132(& mwl8k_driver);
  
#line 6341 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
void (*ldv_emg_alias_None_2)(unsigned long ) = & mwl8k_rx_poll;

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
struct ieee80211_ops *ldv_emg_alias_mwl8k_ops_2 = (struct ieee80211_ops *)(& mwl8k_ops);

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
struct pci_driver *ldv_emg_alias_mwl8k_driver_2 = & mwl8k_driver;

#line 61 
void ldv_emg_tasklet_init(struct tasklet_struct *arg0, void (*arg1)(unsigned long ), unsigned long arg2);


#line 62 
void ldv_emg_ieee80211_free_hw(struct ieee80211_hw *arg0);


#line 63 
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);


#line 64 
void ldv_emg_free_irq(unsigned int arg0, void *arg1);


#line 65 
void ldv_emg_tasklet_schedule(struct tasklet_struct *arg0);


#line 66 
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);


#line 67 
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0);


#line 68 
struct ieee80211_hw *ldv_emg_ieee80211_alloc_hw(unsigned long arg0, struct ieee80211_ops *arg1);


#line 72  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
void ldv_emg_wrapper_mwl8k_bss_info_changed_15(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, struct ieee80211_bss_conf *arg2, unsigned int arg3)
{
  
#line 73 
  mwl8k_bss_info_changed(arg0,arg1,arg2,arg3);
  
#line 74 
  return;
}


#line 77  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
void ldv_emg_wrapper_mwl8k_remove_interface_14(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1)
{
  
#line 78 
  mwl8k_remove_interface(arg0,arg1);
  
#line 79 
  return;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
void ldv_emg_wrapper_mwl8k_stop_20(struct ieee80211_hw *arg0)
{
  
#line 83 
  mwl8k_stop(arg0);
  
#line 84 
  return;
}


#line 87  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
int ldv_emg_wrapper_mwl8k_get_stats_4(struct ieee80211_hw *arg0, struct ieee80211_low_level_stats *arg1)
{
  int tmp;
  
#line 88 
  tmp = mwl8k_get_stats(arg0,arg1);
  
#line 88 
  return tmp;
}


#line 92  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
int ldv_emg_wrapper_mwl8k_ampdu_action_16(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, enum ieee80211_ampdu_mlme_action arg2, struct ieee80211_sta *arg3, unsigned short arg4, unsigned short *arg5, unsigned char arg6)
{
  int tmp;
  
#line 93 
  tmp = mwl8k_ampdu_action(arg0,arg1,arg2,arg3,(unsigned short)((int)arg4),arg5,(unsigned char)((int)arg6));
  
#line 93 
  return tmp;
}


#line 97  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
void ldv_emg_wrapper_mwl8k_sw_scan_start_18(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, unsigned char *arg2)
{
  
#line 98 
  mwl8k_sw_scan_start(arg0,arg1,(u8 const *)arg2);
  
#line 99 
  return;
}


#line 102  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
void ldv_emg_wrapper_mwl8k_sw_scan_complete_17(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1)
{
  
#line 103 
  mwl8k_sw_scan_complete(arg0,arg1);
  
#line 104 
  return;
}


#line 107  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
int ldv_emg_wrapper_mwl8k_conf_tx_10(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, unsigned short arg2, struct ieee80211_tx_queue_params *arg3)
{
  int tmp;
  
#line 108 
  tmp = mwl8k_conf_tx(arg0,arg1,(unsigned short)((int)arg2),(struct ieee80211_tx_queue_params const *)arg3);
  
#line 108 
  return tmp;
}


#line 112  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
void ldv_emg_wrapper_mwl8k_tx_11(struct ieee80211_hw *arg0, struct ieee80211_tx_control *arg1, struct sk_buff *arg2)
{
  
#line 113 
  mwl8k_tx(arg0,arg1,arg2);
  
#line 114 
  return;
}


#line 117  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
int ldv_emg_wrapper_mwl8k_add_interface_5(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1)
{
  int tmp;
  
#line 118 
  tmp = mwl8k_add_interface(arg0,arg1);
  
#line 118 
  return tmp;
}


#line 122  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
int ldv_emg_wrapper_mwl8k_probe_2(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  int tmp;
  
#line 123 
  tmp = mwl8k_probe(arg0,(struct pci_device_id const *)arg1);
  
#line 123 
  return tmp;
}


#line 127  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
int ldv_emg_mwl8k_driver_init(void)
{
  int tmp;
  
#line 128 
  tmp = mwl8k_driver_init();
  
#line 128 
  return tmp;
}


#line 131  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
int ldv_emg_wrapper_mwl8k_config_13(struct ieee80211_hw *arg0, unsigned int arg1)
{
  int tmp;
  
#line 132 
  tmp = mwl8k_config(arg0,arg1);
  
#line 132 
  return tmp;
}


#line 136  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
unsigned long long ldv_emg_wrapper_mwl8k_prepare_multicast_3(struct ieee80211_hw *arg0, struct netdev_hw_addr_list *arg1)
{
  unsigned long long tmp;
  
#line 137 
  tmp = mwl8k_prepare_multicast(arg0,arg1);
  
#line 137 
  return tmp;
}


#line 141  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
int ldv_emg_wrapper_mwl8k_start_2(struct ieee80211_hw *arg0)
{
  int tmp;
  
#line 142 
  tmp = mwl8k_start(arg0);
  
#line 142 
  return tmp;
}


#line 146  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
int ldv_emg_wrapper_mwl8k_sta_add_8(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, struct ieee80211_sta *arg2)
{
  int tmp;
  
#line 147 
  tmp = mwl8k_sta_add(arg0,arg1,arg2);
  
#line 147 
  return tmp;
}


#line 151  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
void ldv_emg_wrapper_mwl8k_configure_filter_12(struct ieee80211_hw *arg0, unsigned int arg1, unsigned int *arg2, unsigned long long arg3)
{
  
#line 152 
  mwl8k_configure_filter(arg0,arg1,arg2,arg3);
  
#line 153 
  return;
}


#line 156  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
int ldv_emg_wrapper_mwl8k_get_survey_6(struct ieee80211_hw *arg0, int arg1, struct survey_info *arg2)
{
  int tmp;
  
#line 157 
  tmp = mwl8k_get_survey(arg0,arg1,arg2);
  
#line 157 
  return tmp;
}


#line 161  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
int ldv_emg_wrapper_mwl8k_sta_remove_19(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, struct ieee80211_sta *arg2)
{
  int tmp;
  
#line 162 
  tmp = mwl8k_sta_remove(arg0,arg1,arg2);
  
#line 162 
  return tmp;
}


#line 166  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
void ldv_emg_mwl8k_driver_exit(void)
{
  
#line 167 
  mwl8k_driver_exit();
  
#line 168 
  return;
}


#line 170  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
enum irqreturn ldv_emg_wrapper_mwl8k_interrupt_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 171 
  tmp = mwl8k_interrupt(arg0,arg1);
  
#line 171 
  return tmp;
}


#line 175  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
int ldv_emg_wrapper_mwl8k_set_key_9(struct ieee80211_hw *arg0, enum set_key_cmd arg1, struct ieee80211_vif *arg2, struct ieee80211_sta *arg3, struct ieee80211_key_conf *arg4)
{
  int tmp;
  
#line 176 
  tmp = mwl8k_set_key(arg0,arg1,arg2,arg3,arg4);
  
#line 176 
  return tmp;
}


#line 180  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
void ldv_emg_wrapper_mwl8k_remove_3(struct pci_dev *arg0)
{
  
#line 181 
  mwl8k_remove(arg0);
  
#line 182 
  return;
}


#line 185  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
int ldv_emg_wrapper_mwl8k_set_rts_threshold_7(struct ieee80211_hw *arg0, unsigned int arg1)
{
  int tmp;
  
#line 186 
  tmp = mwl8k_set_rts_threshold(arg0,arg1);
  
#line 186 
  return tmp;
}


#line 244  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void atomic_inc(atomic_t *v)
{
  
#line 247 
  ldv_atomic_inc(v);
  
#line 248 
  return;
}


#line 251  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void atomic_dec(atomic_t *v)
{
  
#line 254 
  ldv_atomic_dec(v);
  
#line 255 
  return;
}


#line 594  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void *kmalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 597 
  tmp = ldv_kmalloc(size,flags);
  
#line 597 
  return tmp;
}


#line 608  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 611 
  tmp = ldv_kcalloc(n,size,flags);
  
#line 611 
  return tmp;
}


#line 615  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 618 
  tmp = ldv_kzalloc(size,flags);
  
#line 618 
  return tmp;
}


#line 861  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_lock_bh_72(spinlock_t *lock)
{
  
#line 865 
  ldv_spin_model_lock((char *)"tx_lock_of_mwl8k_priv");
  
#line 867 
  spin_lock_bh(lock);
  
#line 868 
  return;
}


#line 871  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_unlock_bh_73(spinlock_t *lock)
{
  
#line 875 
  ldv_spin_model_unlock((char *)"tx_lock_of_mwl8k_priv");
  
#line 877 
  spin_unlock_bh(lock);
  
#line 878 
  return;
}


#line 881  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_lock_bh_74(spinlock_t *lock)
{
  
#line 885 
  ldv_spin_model_lock((char *)"tx_lock_of_mwl8k_priv");
  
#line 887 
  spin_lock_bh(lock);
  
#line 888 
  return;
}


#line 891  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_unlock_bh_75(spinlock_t *lock)
{
  
#line 895 
  ldv_spin_model_unlock((char *)"tx_lock_of_mwl8k_priv");
  
#line 897 
  spin_unlock_bh(lock);
  
#line 898 
  return;
}


#line 901  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_lock_bh_76(spinlock_t *lock)
{
  
#line 905 
  ldv_spin_model_lock((char *)"tx_lock_of_mwl8k_priv");
  
#line 907 
  spin_lock_bh(lock);
  
#line 908 
  return;
}


#line 911  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_unlock_bh_77(spinlock_t *lock)
{
  
#line 915 
  ldv_spin_model_unlock((char *)"tx_lock_of_mwl8k_priv");
  
#line 917 
  spin_unlock_bh(lock);
  
#line 918 
  return;
}


#line 921  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_lock_78(spinlock_t *lock)
{
  
#line 925 
  ldv_spin_model_lock((char *)"stream_lock_of_mwl8k_priv");
  
#line 927 
  spin_lock(lock);
  
#line 928 
  return;
}


#line 931  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_unlock_79(spinlock_t *lock)
{
  
#line 935 
  ldv_spin_model_unlock((char *)"stream_lock_of_mwl8k_priv");
  
#line 937 
  spin_unlock(lock);
  
#line 938 
  return;
}


#line 941  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_unlock_80(spinlock_t *lock)
{
  
#line 945 
  ldv_spin_model_unlock((char *)"stream_lock_of_mwl8k_priv");
  
#line 947 
  spin_unlock(lock);
  
#line 948 
  return;
}


#line 951  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_lock_81(spinlock_t *lock)
{
  
#line 955 
  ldv_spin_model_lock((char *)"stream_lock_of_mwl8k_priv");
  
#line 957 
  spin_lock(lock);
  
#line 958 
  return;
}


#line 961  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_unlock_82(spinlock_t *lock)
{
  
#line 965 
  ldv_spin_model_unlock((char *)"stream_lock_of_mwl8k_priv");
  
#line 967 
  spin_unlock(lock);
  
#line 968 
  return;
}


#line 971  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_lock_bh_83(spinlock_t *lock)
{
  
#line 975 
  ldv_spin_model_lock((char *)"tx_lock_of_mwl8k_priv");
  
#line 977 
  spin_lock_bh(lock);
  
#line 978 
  return;
}


#line 981  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_lock_84(spinlock_t *lock)
{
  
#line 985 
  ldv_spin_model_lock((char *)"stream_lock_of_mwl8k_priv");
  
#line 987 
  spin_lock(lock);
  
#line 988 
  return;
}


#line 991  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_unlock_85(spinlock_t *lock)
{
  
#line 995 
  ldv_spin_model_unlock((char *)"stream_lock_of_mwl8k_priv");
  
#line 997 
  spin_unlock(lock);
  
#line 998 
  return;
}


#line 1001  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_unlock_bh_86(spinlock_t *lock)
{
  
#line 1005 
  ldv_spin_model_unlock((char *)"tx_lock_of_mwl8k_priv");
  
#line 1007 
  spin_unlock_bh(lock);
  
#line 1008 
  return;
}


#line 1011  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_unlock_bh_87(spinlock_t *lock)
{
  
#line 1015 
  ldv_spin_model_unlock((char *)"tx_lock_of_mwl8k_priv");
  
#line 1017 
  spin_unlock_bh(lock);
  
#line 1018 
  return;
}


#line 1021  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_lock_88(spinlock_t *lock)
{
  
#line 1025 
  ldv_spin_model_lock((char *)"stream_lock_of_mwl8k_priv");
  
#line 1027 
  spin_lock(lock);
  
#line 1028 
  return;
}


#line 1031  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_unlock_89(spinlock_t *lock)
{
  
#line 1035 
  ldv_spin_model_unlock((char *)"stream_lock_of_mwl8k_priv");
  
#line 1037 
  spin_unlock(lock);
  
#line 1038 
  return;
}


#line 1041  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_mutex_lock_90(struct mutex *ldv_func_arg1)
{
  
#line 1045 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"fw_mutex_of_mwl8k_priv");
  
#line 1046 
  return;
}


#line 1049  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_mutex_unlock_91(struct mutex *ldv_func_arg1)
{
  
#line 1053 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"fw_mutex_of_mwl8k_priv");
  
#line 1054 
  return;
}


#line 1057  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_mutex_unlock_92(struct mutex *ldv_func_arg1)
{
  
#line 1061 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"fw_mutex_of_mwl8k_priv");
  
#line 1062 
  return;
}


#line 1065  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_lock_93(spinlock_t *lock)
{
  
#line 1069 
  ldv_spin_model_lock((char *)"stream_lock_of_mwl8k_priv");
  
#line 1071 
  spin_lock(lock);
  
#line 1072 
  return;
}


#line 1075  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_unlock_94(spinlock_t *lock)
{
  
#line 1079 
  ldv_spin_model_unlock((char *)"stream_lock_of_mwl8k_priv");
  
#line 1081 
  spin_unlock(lock);
  
#line 1082 
  return;
}


#line 1085  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_lock_95(spinlock_t *lock)
{
  
#line 1089 
  ldv_spin_model_lock((char *)"stream_lock_of_mwl8k_priv");
  
#line 1091 
  spin_lock(lock);
  
#line 1092 
  return;
}


#line 1095  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_unlock_96(spinlock_t *lock)
{
  
#line 1099 
  ldv_spin_model_unlock((char *)"stream_lock_of_mwl8k_priv");
  
#line 1101 
  spin_unlock(lock);
  
#line 1102 
  return;
}


#line 1105  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_lock_97(spinlock_t *lock)
{
  
#line 1109 
  ldv_spin_model_lock((char *)"stream_lock_of_mwl8k_priv");
  
#line 1111 
  spin_lock(lock);
  
#line 1112 
  return;
}


#line 1115  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_unlock_98(spinlock_t *lock)
{
  
#line 1119 
  ldv_spin_model_unlock((char *)"stream_lock_of_mwl8k_priv");
  
#line 1121 
  spin_unlock(lock);
  
#line 1122 
  return;
}


#line 1125  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_lock_99(spinlock_t *lock)
{
  
#line 1129 
  ldv_spin_model_lock((char *)"stream_lock_of_mwl8k_priv");
  
#line 1131 
  spin_lock(lock);
  
#line 1132 
  return;
}


#line 1135  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_unlock_100(spinlock_t *lock)
{
  
#line 1139 
  ldv_spin_model_unlock((char *)"stream_lock_of_mwl8k_priv");
  
#line 1141 
  spin_unlock(lock);
  
#line 1142 
  return;
}


#line 1145  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_tasklet_schedule_101(struct tasklet_struct *t)
{
  
#line 1149 
  ldv_emg_tasklet_schedule(t);
  
#line 1150 
  return;
}


#line 1153  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_tasklet_schedule_102(struct tasklet_struct *t)
{
  
#line 1157 
  ldv_emg_tasklet_schedule(t);
  
#line 1158 
  return;
}


#line 1161  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static int ldv_mutex_is_locked_103(struct mutex *lock)
{
  int tmp;
  
#line 1164 
  tmp = ldv_mutex_model_is_locked(lock,(char *)"fw_mutex_of_mwl8k_priv");
  
#line 1164 
  return tmp;
}


#line 1168  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_lock_bh_104(spinlock_t *lock)
{
  
#line 1172 
  ldv_spin_model_lock((char *)"tx_lock_of_mwl8k_priv");
  
#line 1174 
  spin_lock_bh(lock);
  
#line 1175 
  return;
}


#line 1178  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_unlock_bh_105(spinlock_t *lock)
{
  
#line 1182 
  ldv_spin_model_unlock((char *)"tx_lock_of_mwl8k_priv");
  
#line 1184 
  spin_unlock_bh(lock);
  
#line 1185 
  return;
}


#line 1188  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_tasklet_schedule_106(struct tasklet_struct *t)
{
  
#line 1192 
  ldv_emg_tasklet_schedule(t);
  
#line 1193 
  return;
}


#line 1196  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_tasklet_schedule_107(struct tasklet_struct *t)
{
  
#line 1200 
  ldv_emg_tasklet_schedule(t);
  
#line 1201 
  return;
}


#line 1204  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static int ldv_request_irq_108(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1208 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1208 
  return tmp;
}


#line 1212  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_free_irq_109(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1216 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1217 
  return;
}


#line 1220  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_free_irq_110(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1224 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1225 
  return;
}


#line 1228  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_lock_111(spinlock_t *lock)
{
  
#line 1232 
  ldv_spin_model_lock((char *)"stream_lock_of_mwl8k_priv");
  
#line 1234 
  spin_lock(lock);
  
#line 1235 
  return;
}


#line 1238  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_unlock_112(spinlock_t *lock)
{
  
#line 1242 
  ldv_spin_model_unlock((char *)"stream_lock_of_mwl8k_priv");
  
#line 1244 
  spin_unlock(lock);
  
#line 1245 
  return;
}


#line 1248  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_lock_113(spinlock_t *lock)
{
  
#line 1252 
  ldv_spin_model_lock((char *)"stream_lock_of_mwl8k_priv");
  
#line 1254 
  spin_lock(lock);
  
#line 1255 
  return;
}


#line 1258  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_unlock_114(spinlock_t *lock)
{
  
#line 1262 
  ldv_spin_model_unlock((char *)"stream_lock_of_mwl8k_priv");
  
#line 1264 
  spin_unlock(lock);
  
#line 1265 
  return;
}


#line 1268  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_lock_115(spinlock_t *lock)
{
  
#line 1272 
  ldv_spin_model_lock((char *)"stream_lock_of_mwl8k_priv");
  
#line 1274 
  spin_lock(lock);
  
#line 1275 
  return;
}


#line 1278  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_unlock_116(spinlock_t *lock)
{
  
#line 1282 
  ldv_spin_model_unlock((char *)"stream_lock_of_mwl8k_priv");
  
#line 1284 
  spin_unlock(lock);
  
#line 1285 
  return;
}


#line 1288  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_lock_117(spinlock_t *lock)
{
  
#line 1292 
  ldv_spin_model_lock((char *)"stream_lock_of_mwl8k_priv");
  
#line 1294 
  spin_lock(lock);
  
#line 1295 
  return;
}


#line 1298  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_unlock_118(spinlock_t *lock)
{
  
#line 1302 
  ldv_spin_model_unlock((char *)"stream_lock_of_mwl8k_priv");
  
#line 1304 
  spin_unlock(lock);
  
#line 1305 
  return;
}


#line 1308  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_lock_119(spinlock_t *lock)
{
  
#line 1312 
  ldv_spin_model_lock((char *)"stream_lock_of_mwl8k_priv");
  
#line 1314 
  spin_lock(lock);
  
#line 1315 
  return;
}


#line 1318  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_unlock_120(spinlock_t *lock)
{
  
#line 1322 
  ldv_spin_model_unlock((char *)"stream_lock_of_mwl8k_priv");
  
#line 1324 
  spin_unlock(lock);
  
#line 1325 
  return;
}


#line 1328  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_lock_121(spinlock_t *lock)
{
  
#line 1332 
  ldv_spin_model_lock((char *)"stream_lock_of_mwl8k_priv");
  
#line 1334 
  spin_lock(lock);
  
#line 1335 
  return;
}


#line 1338  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_spin_unlock_122(spinlock_t *lock)
{
  
#line 1342 
  ldv_spin_model_unlock((char *)"stream_lock_of_mwl8k_priv");
  
#line 1344 
  spin_unlock(lock);
  
#line 1345 
  return;
}


#line 1348  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static int ldv_request_irq_123(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1352 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1352 
  return tmp;
}


#line 1356  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_free_irq_124(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1360 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1361 
  return;
}


#line 1364  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_free_irq_125(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1368 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1369 
  return;
}


#line 1372  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_tasklet_init_126(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3)
{
  
#line 1376 
  ldv_emg_tasklet_init(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1377 
  return;
}


#line 1380  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_tasklet_init_127(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3)
{
  
#line 1384 
  ldv_emg_tasklet_init(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1385 
  return;
}


#line 1388  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static struct ieee80211_hw *ldv_ieee80211_alloc_hw_128(size_t priv_data_len, struct ieee80211_ops const *ops)
{
  struct ieee80211_hw *tmp;
  
#line 1392 
  tmp = ldv_emg_ieee80211_alloc_hw(priv_data_len,(struct ieee80211_ops *)ops);
  
#line 1392 
  return tmp;
}


#line 1396  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_ieee80211_free_hw_129(struct ieee80211_hw *ldv_func_arg1)
{
  
#line 1400 
  ldv_emg_ieee80211_free_hw(ldv_func_arg1);
  
#line 1401 
  return;
}


#line 1404  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_ieee80211_free_hw_130(struct ieee80211_hw *ldv_func_arg1)
{
  
#line 1408 
  ldv_emg_ieee80211_free_hw(ldv_func_arg1);
  
#line 1409 
  return;
}


#line 1412  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static int ldv___pci_register_driver_131(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3)
{
  int tmp;
  
#line 1416 
  tmp = ldv_emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,(char *)ldv_func_arg3);
  
#line 1416 
  return tmp;
}


#line 1420  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/weaver/.tmp_mwl8k.c.aux"
static void ldv_pci_unregister_driver_132(struct pci_driver *ldv_func_arg1)
{
  
#line 1424 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 1425 
  return;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 28 
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
void rtnl_lock(void);


#line 28 
void rtnl_unlock(void);


#line 68  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_ieee80211_scenario_11(void *arg0);


#line 69 
int main(void);


#line 73 
void *ldv_pci_scenario_10(void *arg0);


#line 75 
void ldv_dispatch_deregister_2_1(struct pci_driver *arg0);


#line 77 
void ldv_dispatch_register_4_3(struct pci_driver *arg0);


#line 78 
void ldv_dispatch_irq_deregister_8_1(int arg0);


#line 80 
void ldv_dispatch_irq_register_3_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);


#line 83 
void ldv_dispatch_register_6_3(struct ieee80211_hw *arg0);


#line 84 
void ldv_dispatch_deregister_5_2(struct ieee80211_hw *arg0);


#line 85 
void *ldv_interrupt_scenario_12(void *arg0);


#line 86 
void *ldv_initialization_1(void *arg0);


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_10;

#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_12;

#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_11;

#line 95  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_ieee80211_scenario_11(void *arg0)
{
  void *__retres;
  unsigned int ldv_11_ldv_param_3_26;
  struct ieee80211_low_level_stats *ldv_11_ldv_param_1_3;
  enum set_key_cmd *ldv_11_ldv_param_1_10;
  unsigned char ldv_11_ldv_param_6_32;
  enum ieee80211_ampdu_mlme_action *ldv_11_ldv_param_2_28;
  struct ieee80211_sta *ldv_11_ldv_param_3_29;
  struct ieee80211_sta *ldv_11_ldv_param_3_12;
  struct ieee80211_hw *ldv_11_resource;
  struct ieee80211_vif *ldv_11_ldv_param_1_14;
  unsigned short ldv_11_ldv_param_4_30;
  struct netdev_hw_addr_list *ldv_11_ldv_param_1_2;
  struct ieee80211_vif *ldv_11_ldv_param_1_4;
  struct ieee80211_bss_conf *ldv_11_ldv_param_2_25;
  struct ieee80211_vif *ldv_11_ldv_param_2_11;
  struct cfg80211_wowlan *ldv_11_ldv_param_1_38;
  struct ieee80211_vif *ldv_11_ldv_param_1_8;
  struct survey_info *ldv_11_ldv_param_2_37;
  unsigned int *ldv_11_ldv_param_2_20;
  struct ieee80211_vif *ldv_11_ldv_param_1_27;
  struct ieee80211_vif *ldv_11_ldv_param_1_5;
  struct ieee80211_vif *ldv_11_ldv_param_1_23;
  unsigned int ldv_11_ldv_param_1_19;
  unsigned short ldv_11_ldv_param_2_15;
  struct ieee80211_vif *ldv_11_ldv_param_1_33;
  unsigned int ldv_11_ldv_param_1_7;
  unsigned long long ldv_11_ldv_param_3_21;
  struct ieee80211_tx_control *ldv_11_ldv_param_1_17;
  unsigned char *ldv_11_ldv_param_2_35;
  struct ieee80211_key_conf *ldv_11_ldv_param_4_13;
  struct ieee80211_vif *ldv_11_ldv_param_1_24;
  int ldv_11_ldv_param_1_36;
  struct ieee80211_vif *ldv_11_ldv_param_1_34;
  struct ieee80211_sta *ldv_11_ldv_param_2_6;
  unsigned int ldv_11_ldv_param_1_22;
  struct ieee80211_sta *ldv_11_ldv_param_2_9;
  struct sk_buff *ldv_11_ldv_param_2_18;
  struct ieee80211_tx_queue_params *ldv_11_ldv_param_3_16;
  unsigned short *ldv_11_ldv_param_5_31;
  int tmp_1;
  int tmp_2;
  
#line 123 
  struct ieee80211_ops *ldv_11_container = ldv_emg_alias_mwl8k_ops_2;
  
#line 136 
  int ldv_11_ret = ldv_undef_int();
  
#line 139 
  struct ldv_struct_ieee80211_scenario_11 *data = (struct ldv_struct_ieee80211_scenario_11 *)arg0;
  
#line 143 
  ldv_11_ret = ldv_undef_int();
  
#line 146 
  if (data != (struct ldv_struct_ieee80211_scenario_11 *)0) {
    
#line 147 
    ldv_11_resource = data->arg0;
    
#line 148 
    ldv_free((void *)data);
  }
  else ;
  
#line 156 
  goto ldv_main_11;
  
#line 158 
  __retres = (void *)0;
  
#line 158 
  goto return_label;
  ldv_main_11: 
#line 161 
  ;
  
#line 164 
  tmp_1 = ldv_undef_int();
  
#line 164 
  if (tmp_1 != 0) {
    int tmp_0;
    
#line 167 
    rtnl_lock();
    
#line 169 
    ldv_11_ret = ldv_emg_wrapper_mwl8k_start_2(ldv_11_resource);
    
#line 171 
    ldv_11_ret = ldv_filter_err_code(ldv_11_ret);
    
#line 172 
    rtnl_unlock();
    
#line 175 
    tmp_0 = ldv_undef_int();
    
#line 175 
    if (tmp_0 != 0) {
      
#line 177 
      __VERIFIER_assume(ldv_11_ret == 0);
      
#line 184 
      goto ldv_started_11;
    }
    else {
      
#line 188 
      __VERIFIER_assume(ldv_11_ret != 0);
      
#line 195 
      goto ldv_main_11;
    }
  }
  else {
    
#line 204 
    __retres = (void *)0;
    
#line 204 
    goto return_label;
  }
  
#line 207 
  __retres = (void *)0;
  
#line 207 
  goto return_label;
  ldv_started_11: 
#line 210 
  ;
  
#line 213 
  tmp_2 = ldv_undef_int();
  
#line 213 
  switch (tmp_2) {
    int tmp_5;
    case 1: 
#line 214 
    ;
    
#line 216 
    ldv_11_ldv_param_1_38 = (struct cfg80211_wowlan *)ldv_xmalloc_unknown_size(0UL);
    
#line 220 
    if (ldv_11_container->suspend != (int (*)(struct ieee80211_hw *, struct cfg80211_wowlan *))0) 
      
#line 222 
      (*(ldv_11_container->suspend))(ldv_11_resource,ldv_11_ldv_param_1_38); else ;
    
#line 227 
    ldv_free((void *)ldv_11_ldv_param_1_38);
    
#line 231 
    if (ldv_11_container->resume != (int (*)(struct ieee80211_hw *))0) 
      
#line 233 
      (*(ldv_11_container->resume))(ldv_11_resource); else ;
    
#line 241 
    goto ldv_started_11;
    case 2: 
#line 244 
    ;
    
#line 247 
    rtnl_lock();
    
#line 249 
    ldv_emg_wrapper_mwl8k_stop_20(ldv_11_resource);
    
#line 251 
    rtnl_unlock();
    
#line 258 
    goto ldv_main_11;
    case 3: 
#line 261 
    ;
    
#line 263 
    ldv_11_ldv_param_1_2 = (struct netdev_hw_addr_list *)ldv_xmalloc_unknown_size(0UL);
    
#line 266 
    tmp_5 = ldv_undef_int();
    
#line 266 
    switch (tmp_5) {
      case 1: 
#line 267 
      ;
      
#line 270 
      ldv_emg_wrapper_mwl8k_prepare_multicast_3(ldv_11_resource,ldv_11_ldv_param_1_2);
      
#line 273 
      goto ldv_50818;
      case 2: 
#line 275 
      ;
      
#line 277 
      ldv_11_ldv_param_2_37 = (struct survey_info *)ldv_xmalloc_unknown_size(0UL);
      
#line 282 
      ldv_emg_wrapper_mwl8k_get_survey_6(ldv_11_resource,ldv_11_ldv_param_1_36,ldv_11_ldv_param_2_37);
      
#line 286 
      ldv_free((void *)ldv_11_ldv_param_2_37);
      
#line 289 
      goto ldv_50818;
      case 3: 
#line 291 
      ;
      
#line 293 
      ldv_11_ldv_param_2_35 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 294 
      ldv_11_ldv_param_1_34 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 299 
      ldv_emg_wrapper_mwl8k_sw_scan_start_18(ldv_11_resource,ldv_11_ldv_param_1_34,ldv_11_ldv_param_2_35);
      
#line 303 
      ldv_free((void *)ldv_11_ldv_param_2_35);
      
#line 304 
      ldv_free((void *)ldv_11_ldv_param_1_34);
      
#line 307 
      goto ldv_50818;
      case 4: 
#line 309 
      ;
      
#line 311 
      ldv_11_ldv_param_1_33 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 316 
      ldv_emg_wrapper_mwl8k_sw_scan_complete_17(ldv_11_resource,ldv_11_ldv_param_1_33);
      
#line 320 
      ldv_free((void *)ldv_11_ldv_param_1_33);
      
#line 323 
      goto ldv_50818;
      case 5: 
#line 325 
      ;
      
#line 327 
      ldv_11_ldv_param_3_29 = (struct ieee80211_sta *)ldv_xmalloc_unknown_size(0UL);
      
#line 328 
      ldv_11_ldv_param_2_28 = (enum ieee80211_ampdu_mlme_action *)ldv_xmalloc_unknown_size(0UL);
      
#line 329 
      ldv_11_ldv_param_1_27 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 330 
      ldv_11_ldv_param_5_31 = (unsigned short *)ldv_xmalloc_unknown_size(0UL);
      
#line 335 
      ldv_emg_wrapper_mwl8k_ampdu_action_16(ldv_11_resource,ldv_11_ldv_param_1_27,*ldv_11_ldv_param_2_28,ldv_11_ldv_param_3_29,(unsigned short)((int)ldv_11_ldv_param_4_30),ldv_11_ldv_param_5_31,(unsigned char)((int)ldv_11_ldv_param_6_32));
      
#line 339 
      ldv_free((void *)ldv_11_ldv_param_3_29);
      
#line 340 
      ldv_free((void *)ldv_11_ldv_param_2_28);
      
#line 341 
      ldv_free((void *)ldv_11_ldv_param_1_27);
      
#line 342 
      ldv_free((void *)ldv_11_ldv_param_5_31);
      
#line 345 
      goto ldv_50818;
      case 6: 
#line 347 
      ;
      
#line 349 
      ldv_11_ldv_param_1_24 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 350 
      ldv_11_ldv_param_2_25 = (struct ieee80211_bss_conf *)ldv_xmalloc_unknown_size(0UL);
      
#line 355 
      ldv_emg_wrapper_mwl8k_bss_info_changed_15(ldv_11_resource,ldv_11_ldv_param_1_24,ldv_11_ldv_param_2_25,ldv_11_ldv_param_3_26);
      
#line 359 
      ldv_free((void *)ldv_11_ldv_param_1_24);
      
#line 360 
      ldv_free((void *)ldv_11_ldv_param_2_25);
      
#line 363 
      goto ldv_50818;
      case 7: 
#line 365 
      ;
      
#line 367 
      ldv_11_ldv_param_1_23 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 372 
      ldv_emg_wrapper_mwl8k_remove_interface_14(ldv_11_resource,ldv_11_ldv_param_1_23);
      
#line 376 
      ldv_free((void *)ldv_11_ldv_param_1_23);
      
#line 379 
      goto ldv_50818;
      case 8: 
#line 381 
      ;
      
#line 387 
      ldv_emg_wrapper_mwl8k_config_13(ldv_11_resource,ldv_11_ldv_param_1_22);
      
#line 393 
      goto ldv_50818;
      case 9: 
#line 395 
      ;
      
#line 397 
      ldv_11_ldv_param_2_20 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
      
#line 402 
      ldv_emg_wrapper_mwl8k_configure_filter_12(ldv_11_resource,ldv_11_ldv_param_1_19,ldv_11_ldv_param_2_20,ldv_11_ldv_param_3_21);
      
#line 406 
      ldv_free((void *)ldv_11_ldv_param_2_20);
      
#line 409 
      goto ldv_50818;
      case 10: 
#line 411 
      ;
      
#line 413 
      ldv_11_ldv_param_2_18 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 414 
      ldv_11_ldv_param_1_17 = (struct ieee80211_tx_control *)ldv_xmalloc_unknown_size(0UL);
      
#line 419 
      ldv_emg_wrapper_mwl8k_tx_11(ldv_11_resource,ldv_11_ldv_param_1_17,ldv_11_ldv_param_2_18);
      
#line 423 
      ldv_free((void *)ldv_11_ldv_param_2_18);
      
#line 424 
      ldv_free((void *)ldv_11_ldv_param_1_17);
      
#line 427 
      goto ldv_50818;
      case 11: 
#line 429 
      ;
      
#line 431 
      ldv_11_ldv_param_1_14 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 432 
      ldv_11_ldv_param_3_16 = (struct ieee80211_tx_queue_params *)ldv_xmalloc_unknown_size(0UL);
      
#line 437 
      ldv_emg_wrapper_mwl8k_conf_tx_10(ldv_11_resource,ldv_11_ldv_param_1_14,(unsigned short)((int)ldv_11_ldv_param_2_15),ldv_11_ldv_param_3_16);
      
#line 441 
      ldv_free((void *)ldv_11_ldv_param_1_14);
      
#line 442 
      ldv_free((void *)ldv_11_ldv_param_3_16);
      
#line 445 
      goto ldv_50818;
      case 12: 
#line 447 
      ;
      
#line 449 
      ldv_11_ldv_param_1_10 = (enum set_key_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 450 
      ldv_11_ldv_param_4_13 = (struct ieee80211_key_conf *)ldv_xmalloc_unknown_size(0UL);
      
#line 451 
      ldv_11_ldv_param_2_11 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 452 
      ldv_11_ldv_param_3_12 = (struct ieee80211_sta *)ldv_xmalloc_unknown_size(0UL);
      
#line 457 
      ldv_emg_wrapper_mwl8k_set_key_9(ldv_11_resource,*ldv_11_ldv_param_1_10,ldv_11_ldv_param_2_11,ldv_11_ldv_param_3_12,ldv_11_ldv_param_4_13);
      
#line 461 
      ldv_free((void *)ldv_11_ldv_param_1_10);
      
#line 462 
      ldv_free((void *)ldv_11_ldv_param_4_13);
      
#line 463 
      ldv_free((void *)ldv_11_ldv_param_2_11);
      
#line 464 
      ldv_free((void *)ldv_11_ldv_param_3_12);
      
#line 467 
      goto ldv_50818;
      case 13: 
#line 469 
      ;
      
#line 471 
      ldv_11_ldv_param_2_9 = (struct ieee80211_sta *)ldv_xmalloc_unknown_size(0UL);
      
#line 472 
      ldv_11_ldv_param_1_8 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 477 
      ldv_emg_wrapper_mwl8k_sta_add_8(ldv_11_resource,ldv_11_ldv_param_1_8,ldv_11_ldv_param_2_9);
      
#line 481 
      ldv_free((void *)ldv_11_ldv_param_2_9);
      
#line 482 
      ldv_free((void *)ldv_11_ldv_param_1_8);
      
#line 485 
      goto ldv_50818;
      case 14: 
#line 487 
      ;
      
#line 493 
      ldv_emg_wrapper_mwl8k_set_rts_threshold_7(ldv_11_resource,ldv_11_ldv_param_1_7);
      
#line 499 
      goto ldv_50818;
      case 15: 
#line 501 
      ;
      
#line 503 
      ldv_11_ldv_param_1_5 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 504 
      ldv_11_ldv_param_2_6 = (struct ieee80211_sta *)ldv_xmalloc_unknown_size(0UL);
      
#line 509 
      ldv_emg_wrapper_mwl8k_sta_remove_19(ldv_11_resource,ldv_11_ldv_param_1_5,ldv_11_ldv_param_2_6);
      
#line 513 
      ldv_free((void *)ldv_11_ldv_param_1_5);
      
#line 514 
      ldv_free((void *)ldv_11_ldv_param_2_6);
      
#line 517 
      goto ldv_50818;
      case 16: 
#line 519 
      ;
      
#line 521 
      ldv_11_ldv_param_1_4 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
      
#line 526 
      ldv_emg_wrapper_mwl8k_add_interface_5(ldv_11_resource,ldv_11_ldv_param_1_4);
      
#line 530 
      ldv_free((void *)ldv_11_ldv_param_1_4);
      
#line 533 
      goto ldv_50818;
      case 17: 
#line 535 
      ;
      
#line 537 
      ldv_11_ldv_param_1_3 = (struct ieee80211_low_level_stats *)ldv_xmalloc_unknown_size(0UL);
      
#line 542 
      ldv_emg_wrapper_mwl8k_get_stats_4(ldv_11_resource,ldv_11_ldv_param_1_3);
      
#line 546 
      ldv_free((void *)ldv_11_ldv_param_1_3);
      
#line 549 
      goto ldv_50818;
      default: 
#line 551 
      ;
      
#line 551 
      __VERIFIER_assume(0);
    }
    ldv_50818: 
#line 553 
    ;
    
#line 553 
    goto ldv_50836;
    default: 
#line 555 
    ;
    
#line 555 
    __VERIFIER_assume(0);
  }
  ldv_50836: 
#line 558 
  ;
  
#line 558 
  ldv_free((void *)ldv_11_ldv_param_1_2);
  
#line 565 
  goto ldv_started_11;
  
#line 567 
  __retres = (void *)0;
  return_label: 
#line 567 
                return __retres;
}


#line 572  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 575 
  ldv_initialize();
  
#line 578 
  ldv_initialization_1((void *)0);
  
#line 580 
  __retres = 0;
  
#line 580 
  return __retres;
}


#line 585  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  int __retres;
  int tmp_0;
  
#line 588 
  struct pci_driver *ldv_4_pci_driver = ldv_emg_alias_mwl8k_driver_2;
  
#line 592 
  tmp_0 = ldv_undef_int();
  
#line 592 
  if (tmp_0 != 0) {
    
#line 594 
    ldv_4_pci_driver = arg0;
    
#line 598 
    ldv_dispatch_register_4_3(ldv_4_pci_driver);
    
#line 602 
    __retres = 0;
    
#line 602 
    goto return_label;
  }
  else {
    int tmp;
    
#line 609 
    tmp = ldv_undef_int_negative();
    
#line 609 
    __retres = tmp;
    
#line 609 
    goto return_label;
  }
  return_label: 
#line 592 
                return __retres;
}


#line 619  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_tasklet_init(struct tasklet_struct *arg0, void (*arg1)(unsigned long ), unsigned long arg2)
{
  
#line 624 
  arg0->func = arg1;
  
#line 625 
  arg0->data = arg2;
  
#line 626 
  arg0->count.counter = 0;
  
#line 630 
  goto return_label;
  return_label: 
#line 632 
                return;
}


#line 637  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_tasklet_schedule(struct tasklet_struct *arg0)
{
  unsigned long ldv_9_ldv_param_0_2;
  struct tasklet_struct *ldv_9_tasklet_struct;
  
#line 644 
  ldv_9_tasklet_struct = arg0;
  
#line 651 
  if (ldv_9_tasklet_struct->count.counter == 0) 
#line 653 
                                                (*ldv_emg_alias_None_2)(ldv_9_ldv_param_0_2); else ;
  
#line 661 
  goto return_label;
  return_label: 
#line 663 
                return;
}


#line 668  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_10(void *arg0)
{
  void *__retres;
  struct pci_dev *ldv_10_resource_1;
  struct pci_device_id *ldv_10_ldv_param_1_2;
  struct pm_message ldv_10_resource_0;
  int tmp_2;
  int tmp_3;
  
#line 673 
  struct pci_driver *ldv_10_container = ldv_emg_alias_mwl8k_driver_2;
  
#line 674 
  int ldv_10_ret = ldv_undef_int();
  
#line 677 
  struct ldv_struct_pci_scenario_10 *data = (struct ldv_struct_pci_scenario_10 *)arg0;
  
#line 681 
  ldv_10_ret = ldv_undef_int();
  
#line 684 
  if (data != (struct ldv_struct_pci_scenario_10 *)0) {
    
#line 685 
    ldv_10_container = data->arg0;
    
#line 686 
    ldv_free((void *)data);
  }
  else ;
  
#line 697 
  goto ldv_main_10;
  
#line 699 
  __retres = (void *)0;
  
#line 699 
  goto return_label;
  ldv_main_10: 
#line 702 
  ;
  
#line 705 
  tmp_2 = ldv_undef_int();
  
#line 705 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 707 
    ldv_10_ldv_param_1_2 = (struct pci_device_id *)ldv_xmalloc_unknown_size(0UL);
    
#line 712 
    ldv_pre_probe();
    
#line 714 
    ldv_10_ret = ldv_emg_wrapper_mwl8k_probe_2(ldv_10_resource_1,ldv_10_ldv_param_1_2);
    
#line 716 
    ldv_10_ret = ldv_post_probe(ldv_10_ret);
    
#line 720 
    ldv_free((void *)ldv_10_ldv_param_1_2);
    
#line 723 
    tmp_1 = ldv_undef_int();
    
#line 723 
    if (tmp_1 != 0) {
      
#line 725 
      __VERIFIER_assume(ldv_10_ret == 0);
      
#line 732 
      goto ldv_call_10;
    }
    else {
      
#line 736 
      __VERIFIER_assume(ldv_10_ret != 0);
      
#line 743 
      goto ldv_main_10;
    }
  }
  else {
    
#line 755 
    __retres = (void *)0;
    
#line 755 
    goto return_label;
  }
  
#line 758 
  __retres = (void *)0;
  
#line 758 
  goto return_label;
  ldv_call_10: 
#line 761 
  ;
  
#line 764 
  tmp_3 = ldv_undef_int();
  
#line 764 
  switch (tmp_3) {
    case 1: 
#line 765 
    ;
    
#line 774 
    goto ldv_call_10;
    case 2: 
#line 777 
    ;
    
#line 779 
    if (ldv_10_container->suspend != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 781 
      ldv_10_ret = (*(ldv_10_container->suspend))(ldv_10_resource_1,ldv_10_resource_0);
      
#line 783 
      ldv_10_ret = ldv_filter_err_code(ldv_10_ret);
    }
    else 
#line 785 
         ldv_10_ret = ldv_undef_int();
    
#line 790 
    if (ldv_10_container->suspend_late != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 792 
      ldv_10_ret = (*(ldv_10_container->suspend_late))(ldv_10_resource_1,ldv_10_resource_0);
      
#line 794 
      ldv_10_ret = ldv_filter_err_code(ldv_10_ret);
    }
    else 
#line 796 
         ldv_10_ret = ldv_undef_int();
    
#line 801 
    if (ldv_10_container->resume_early != (int (*)(struct pci_dev *))0) 
      
#line 803 
      (*(ldv_10_container->resume_early))(ldv_10_resource_1); else ;
    
#line 808 
    if (ldv_10_container->resume != (int (*)(struct pci_dev *))0) 
#line 810 
                                                                  (*(ldv_10_container->resume))(ldv_10_resource_1); else ;
    
#line 818 
    goto ldv_call_10;
    case 3: 
#line 821 
    ;
    
#line 823 
    if (ldv_10_container->shutdown != (void (*)(struct pci_dev *))0) 
      
#line 825 
      (*(ldv_10_container->shutdown))(ldv_10_resource_1); else ;
    
#line 831 
    ldv_emg_wrapper_mwl8k_remove_3(ldv_10_resource_1);
    
#line 838 
    goto ldv_main_10;
    default: 
#line 841 
    ;
    
#line 841 
    __VERIFIER_assume(0);
  }
  
#line 844 
  __retres = (void *)0;
  return_label: 
#line 844 
                return __retres;
}


#line 849  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0)
{
  
#line 852 
  struct pci_driver *ldv_2_pci_driver = ldv_emg_alias_mwl8k_driver_2;
  
#line 855 
  ldv_2_pci_driver = arg0;
  
#line 859 
  ldv_dispatch_deregister_2_1(ldv_2_pci_driver);
  
#line 863 
  goto return_label;
  return_label: 
#line 865 
                return;
}


#line 870  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_2_1(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_10 *cf_arg_10;
  int tmp;
  
#line 873 
  tmp = ldv_undef_int();
  
#line 873 
  switch (tmp) {
    case 0: 
#line 874 
    ;
    
#line 875 
    ret = pthread_join(ldv_thread_10,(void **)0);
    
#line 876 
    __VERIFIER_assume(ret == 0);
    
#line 877 
    goto ldv_50883;
    default: 
#line 879 
    ;
    
#line 879 
    __VERIFIER_assume(0);
  }
  ldv_50883: 
#line 880 
  ;
  
#line 881 
  return;
}


#line 885  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/emg/environment_model.c"
struct ieee80211_hw *ldv_emg_ieee80211_alloc_hw(unsigned long arg0, struct ieee80211_ops *arg1)
{
  struct ieee80211_hw *__retres;
  struct ieee80211_hw *ldv_6_ieee80211_hw;
  int tmp_0;
  
#line 888 
  struct ieee80211_ops *ldv_6_ieee80211_ops = ldv_emg_alias_mwl8k_ops_2;
  
#line 893 
  tmp_0 = ldv_undef_int();
  
#line 893 
  if (tmp_0 != 0) {
    
#line 895 
    ldv_6_ieee80211_ops = arg1;
    
#line 896 
    ldv_6_ieee80211_hw = (struct ieee80211_hw *)ldv_xmalloc_unknown_size(0UL);
    
#line 900 
    ldv_dispatch_register_6_3(ldv_6_ieee80211_hw);
    
#line 904 
    __retres = ldv_6_ieee80211_hw;
    
#line 904 
    goto return_label;
  }
  else {
    
#line 911 
    __retres = (struct ieee80211_hw *)0;
    
#line 911 
    goto return_label;
  }
  return_label: 
#line 893 
                return __retres;
}


#line 921  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_4_3(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_10 *cf_arg_10;
  int tmp;
  
#line 924 
  tmp = ldv_undef_int();
  
#line 924 
  switch (tmp) {
    case 0: 
#line 925 
    ;
    
#line 926 
    cf_arg_10 = (struct ldv_struct_pci_scenario_10 *)ldv_xmalloc(16UL);
    
#line 927 
    cf_arg_10->arg0 = arg0;
    
#line 928 
    ret = pthread_create(& ldv_thread_10,(pthread_attr_t const *)0,& ldv_pci_scenario_10,(void *)cf_arg_10);
    
#line 929 
    __VERIFIER_assume(ret == 0);
    
#line 930 
    goto ldv_50897;
    default: 
#line 932 
    ;
    
#line 932 
    __VERIFIER_assume(0);
  }
  ldv_50897: 
#line 933 
  ;
  
#line 934 
  return;
}


#line 938  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_deregister_8_1(int arg0)
{
  int ret;
  struct ldv_struct_free_irq_8 *cf_arg_12;
  int tmp;
  
#line 941 
  tmp = ldv_undef_int();
  
#line 941 
  switch (tmp) {
    case 0: 
#line 942 
    ;
    
#line 943 
    ret = pthread_join(ldv_thread_12,(void **)0);
    
#line 944 
    __VERIFIER_assume(ret == 0);
    
#line 945 
    goto ldv_50905;
    default: 
#line 947 
    ;
    
#line 947 
    __VERIFIER_assume(0);
  }
  ldv_50905: 
#line 948 
  ;
  
#line 949 
  return;
}


#line 953  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_irq(unsigned int arg0, void *arg1)
{
  int ldv_8_line;
  
#line 959 
  ldv_8_line = (int)arg0;
  
#line 963 
  ldv_dispatch_irq_deregister_8_1(ldv_8_line);
  
#line 967 
  goto return_label;
  return_label: 
#line 969 
                return;
}


#line 974  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_register_3_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  int ret;
  struct ldv_struct_interrupt_scenario_12 *cf_arg_12;
  int tmp;
  
#line 977 
  tmp = ldv_undef_int();
  
#line 977 
  switch (tmp) {
    case 0: 
#line 978 
    ;
    
#line 979 
    cf_arg_12 = (struct ldv_struct_interrupt_scenario_12 *)ldv_xmalloc(32UL);
    
#line 980 
    cf_arg_12->arg0 = arg0;
    
#line 981 
    cf_arg_12->arg1 = arg1;
    
#line 982 
    cf_arg_12->arg2 = arg2;
    
#line 983 
    cf_arg_12->arg3 = arg3;
    
#line 984 
    ret = pthread_create(& ldv_thread_12,(pthread_attr_t const *)0,& ldv_interrupt_scenario_12,(void *)cf_arg_12);
    
#line 985 
    __VERIFIER_assume(ret == 0);
    
#line 986 
    goto ldv_50925;
    default: 
#line 988 
    ;
    
#line 988 
    __VERIFIER_assume(0);
  }
  ldv_50925: 
#line 989 
  ;
  
#line 990 
  return;
}


#line 994  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_ieee80211_free_hw(struct ieee80211_hw *arg0)
{
  struct ieee80211_hw *ldv_5_ieee80211_hw;
  
#line 1000 
  ldv_dispatch_deregister_5_2(ldv_5_ieee80211_hw);
  
#line 1004 
  ldv_free((void *)ldv_5_ieee80211_hw);
  
#line 1008 
  goto return_label;
  return_label: 
#line 1010 
                return;
}


#line 1015  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  int __retres;
  int ldv_3_line;
  void *ldv_3_data;
  enum irqreturn (*ldv_3_thread)(int , void *);
  int tmp_0;
  
#line 1020 
  enum irqreturn (*ldv_3_callback)(int , void *) = & ldv_emg_wrapper_mwl8k_interrupt_2;
  
#line 1025 
  tmp_0 = ldv_undef_int();
  
#line 1025 
  if (tmp_0 != 0) {
    
#line 1027 
    ldv_3_line = (int)arg0;
    
#line 1028 
    ldv_3_callback = arg1;
    
#line 1029 
    ldv_3_thread = (enum irqreturn (*)(int , void *))0;
    
#line 1030 
    ldv_3_data = arg4;
    
#line 1034 
    ldv_dispatch_irq_register_3_3(ldv_3_line,ldv_3_callback,ldv_3_thread,ldv_3_data);
    
#line 1038 
    __retres = 0;
    
#line 1038 
    goto return_label;
  }
  else {
    int tmp;
    
#line 1045 
    tmp = ldv_undef_int_negative();
    
#line 1045 
    __retres = tmp;
    
#line 1045 
    goto return_label;
  }
  return_label: 
#line 1025 
                return __retres;
}


#line 1055  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_5_2(struct ieee80211_hw *arg0)
{
  int ret;
  struct ldv_struct_ieee80211_scenario_11 *cf_arg_11;
  int tmp;
  
#line 1058 
  tmp = ldv_undef_int();
  
#line 1058 
  switch (tmp) {
    case 0: 
#line 1059 
    ;
    
#line 1060 
    ret = pthread_join(ldv_thread_11,(void **)0);
    
#line 1061 
    __VERIFIER_assume(ret == 0);
    
#line 1062 
    goto ldv_50954;
    default: 
#line 1064 
    ;
    
#line 1064 
    __VERIFIER_assume(0);
  }
  ldv_50954: 
#line 1065 
  ;
  
#line 1066 
  return;
}


#line 1070  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_6_3(struct ieee80211_hw *arg0)
{
  int ret;
  struct ldv_struct_ieee80211_scenario_11 *cf_arg_11;
  int tmp;
  
#line 1073 
  tmp = ldv_undef_int();
  
#line 1073 
  switch (tmp) {
    case 0: 
#line 1074 
    ;
    
#line 1075 
    cf_arg_11 = (struct ldv_struct_ieee80211_scenario_11 *)ldv_xmalloc(16UL);
    
#line 1076 
    cf_arg_11->arg0 = arg0;
    
#line 1077 
    ret = pthread_create(& ldv_thread_11,(pthread_attr_t const *)0,& ldv_ieee80211_scenario_11,(void *)cf_arg_11);
    
#line 1078 
    __VERIFIER_assume(ret == 0);
    
#line 1079 
    goto ldv_50962;
    default: 
#line 1081 
    ;
    
#line 1081 
    __VERIFIER_assume(0);
  }
  ldv_50962: 
#line 1082 
  ;
  
#line 1083 
  return;
}


#line 1087  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_12(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_12_ret_val;
  int ldv_12_line;
  void *ldv_12_data;
  enum irqreturn (*ldv_12_thread)(int , void *);
  int tmp;
  
#line 1093 
  enum irqreturn (*ldv_12_callback)(int , void *) = & ldv_emg_wrapper_mwl8k_interrupt_2;
  
#line 1096 
  struct ldv_struct_interrupt_scenario_12 *data = (struct ldv_struct_interrupt_scenario_12 *)arg0;
  
#line 1101 
  if (data != (struct ldv_struct_interrupt_scenario_12 *)0) {
    
#line 1102 
    ldv_12_line = data->arg0;
    
#line 1103 
    ldv_12_callback = data->arg1;
    
#line 1104 
    ldv_12_thread = data->arg2;
    
#line 1105 
    ldv_12_data = data->arg3;
    
#line 1106 
    ldv_free((void *)data);
  }
  else ;
  
#line 1112 
  ldv_switch_to_interrupt_context();
  
#line 1114 
  ldv_12_ret_val = ldv_emg_wrapper_mwl8k_interrupt_2(ldv_12_line,ldv_12_data);
  
#line 1116 
  ldv_switch_to_process_context();
  
#line 1119 
  tmp = ldv_undef_int();
  
#line 1119 
  if (tmp != 0) {
    
#line 1121 
    __VERIFIER_assume(ldv_12_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 1125 
    if (ldv_12_thread != (enum irqreturn (*)(int , void *))0) 
#line 1127 
                                                              (*ldv_12_thread)(ldv_12_line,ldv_12_data); else ;
  }
  else 
#line 1134 
       __VERIFIER_assume(ldv_12_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 1143 
  __retres = (void *)0;
  
#line 1143 
  goto return_label;
  
#line 1145 
  __retres = (void *)0;
  return_label: 
#line 1145 
                return __retres;
}


#line 1150  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/mwl8k.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 1157 
  ldv_1_ret = ldv_emg_mwl8k_driver_init();
  
#line 1158 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 1161 
  tmp = ldv_undef_int();
  
#line 1161 
  if (tmp != 0) {
    
#line 1163 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 1167 
    __retres = (void *)0;
    
#line 1167 
    goto return_label;
  }
  else {
    
#line 1171 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 1176 
    ldv_emg_mwl8k_driver_exit();
    
#line 1180 
    __retres = (void *)0;
    
#line 1180 
    goto return_label;
  }
  
#line 1183 
  __retres = (void *)0;
  return_label: 
#line 1183 
                return __retres;
}


