# This file is part of the SV-Benchmarks collection of verification tasks:
# https://github.com/sosy-lab/sv-benchmarks
#
# SPDX-FileCopyrightText: 2011-2020 The SV-Benchmarks Community
#
# SPDX-License-Identifier: Apache-2.0

stages:
  - images
  - checks

sanity-checks:
  stage: checks
  image: registry.gitlab.com/sosy-lab/software/sv-benchmarks/ci/sanity-checks:latest
  script: "c/check.py"

.branch-compile-check: &branch-compile-check
  stage: checks
  except: 
    refs:
      - master
  script:
    - "${CC} -v --version"
    - "cd c"
    - "./diff_ci.sh 'make -j2 -C'"

.clang-3-9: &clang-3-9
  image: registry.gitlab.com/sosy-lab/software/sv-benchmarks/ci/clang:3.9
  variables:
    CC: clang-3.9

.gcc-5: &gcc-5
  image: registry.gitlab.com/sosy-lab/software/sv-benchmarks/ci/gcc:5
  variables:
    CC: gcc-5 
    
branch-compile-clang:3.9:
  <<: *branch-compile-check
  <<: *clang-3-9

branch-compile-gcc:5:
  <<: *branch-compile-check
  <<: *gcc-5

.master-compile-check: &master-compile-check
  stage: checks
  only: 
    refs:
      - master
  script:
    - "${CC} -v --version"
    - "cd c"
    - "make -j2"
    
.master-compile-check-juliet: &master-compile-check-juliet
  stage: checks
  only: 
    refs:
      - master
  script:
    - "${CC} -v --version"
    - "cd c/Juliet_Test"
    - "make -j2"    

master-compile-clang:3.9:
  <<: *master-compile-check
  <<: *clang-3-9

master-compile-gcc:5:
  <<: *master-compile-check
  <<: *gcc-5    
    
master-compile-clang:3.9-juliet:
  <<: *master-compile-check-juliet
  <<: *clang-3-9

master-compile-gcc:5-juliet:
  <<: *master-compile-check-juliet
  <<: *gcc-5

branch-preprocessing-consistency:
  stage: checks
  except: 
    refs:
      - master
  image: registry.gitlab.com/sosy-lab/software/sv-benchmarks/ci/preprocessing-consistency:latest
  script:
    - "cd c"
    - "./diff_ci.sh './compare.py --keep-going --skip-large --directory'"

master-preprocessing-consistency:
  stage: checks
  only: 
    refs:
      - master
  image: registry.gitlab.com/sosy-lab/software/sv-benchmarks/ci/preprocessing-consistency:latest
  script:
    - "goto-diff --version"
    - "cd c"
    - "./compare.py --keep-going --skip-large"

java:
  stage: checks
  image: registry.gitlab.com/sosy-lab/software/sv-benchmarks/ci/java:latest
  script:
      # unset variables to not leak their content through result files
    - "unset $(compgen -v CI) $(compgen -v GIT)"
    - "sudo -u benchexec java/check-compile.sh"
  artifacts:
    paths:
      - "java/results/*logfiles*"
      - "java/results/*.results.Werror.xml*"
      - "java/results/*.html"
    when: always
  tags:
    - privileged

java-format:
  stage: checks
  image: openjdk:11
  script: "java/check-format.sh"
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - "java/*.jar"

.build-docker:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /root/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --dockerfile $CI_PROJECT_DIR/$DOCKERFILE --destination $CI_REGISTRY_IMAGE/$IMAGE
  only:
    - schedules
    - web

build-docker:clang:3.9:
  extends: .build-docker
  stage: images
  variables:
    DOCKERFILE: c/.Dockerfile.clang-3.9
    IMAGE: ci/clang:3.9

build-docker:gcc:5:
  extends: .build-docker
  stage: images
  variables:
    DOCKERFILE: c/.Dockerfile.gcc-5
    IMAGE: ci/gcc:5

build-docker:preprocessing-consistency:latest:
  extends: .build-docker
  stage: images
  variables:
    DOCKERFILE: c/.Dockerfile.preprocessing-consistency
    IMAGE: ci/preprocessing-consistency:latest

build-docker:sanity-checks:latest:
  extends: .build-docker
  stage: images
  variables:
    DOCKERFILE: c/.Dockerfile.sanity-checks
    IMAGE: ci/sanity-checks:latest

build-docker:java:latest:
  extends: .build-docker
  stage: images
  variables:
    DOCKERFILE: java/.Dockerfile
    IMAGE: ci/java:latest


# check license declarations etc.
reuse:
  stage: checks
  image:
    name: fsfe/reuse:latest
    entrypoint: [""]
  script:
    - reuse lint
